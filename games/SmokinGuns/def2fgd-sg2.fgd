//generated by def2fgd 1.2

@PointClass size(-20 -20 -16, 20 20 20) offset(0 0 16) color(77 77 255) studio() = ammo_bullets : "Pistol ammo. Gives the player 12 by default.\n\nThe amount of time it takes for an item in the team to respawn is determined by the wait value of the item that was picked up previously. So if one of the items in the team has it's wait key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.\n\nWhen the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).\n\nDynamites. Gives the player 5 by default.\n\nThe amount of time it takes for an item in the team to respawn is determined by the wait value of the item that was picked up previously. So if one of the items in the team has it's wait key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.\n\nWhen the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).\n\nShotgun Ammo. Gives the player 12 by default.\n\nThe amount of time it takes for an item in the team to respawn is determined by the wait value of the item that was picked up previously. So if one of the items in the team has it's wait key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.\n\nWhen the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).\n\nRifle ammo. Gives the player 12 by default.\n\nThe amount of time it takes for an item in the team to respawn is determined by the wait value of the item that was picked up previously. So if one of the items in the team has it's wait key set to -1 (" + "never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.\n\nWhen the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).\n\nGatling Gun ammo. Gives the player 1 clip by default.\n\nThe amount of time it takes for an item in the team to respawn is determined by the wait value of the item that was picked up previously. So if one of the items in the team has it's wait key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.\n\nWhen the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).\n\nSharps Rifle ammo. Gives the player 12 by default.\n\nThe amount of time it takes for an item in the team to respawn is determined by the wait value of the item that was picked up previously. So if one of the items in the team has it's wait key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.\n\nWhen the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).\n\nFUNC_* ENTITIES\n\nRotating door.  By default it will always open away from the player.\n\nUnlike in Quake 2, doors that touch are NOT automatically teamed. If you want doors to operate together, you have to team them manually by assigning the same team name to all of them. Setting the origin key is simply an alternate method to using an origin brush. When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush " + "or the origin coordinate value."
[
	wait(string) : Wait : : "time in seconds before item respawns after being picked up (default 40, -1 = never respawn)."
	random(string) : Random : : "random time variance in seconds added or subtracted from wait delay (default 0 - see Notes)."
	count(string) : Count : : "sets the amount of ammo given to the player when picked up (default 50)."
	team(string) : Team : : "set this to team items. Teamed items will respawn randomly after team master is picked up (see Notes)."
	target(target_destination) : Target : : "picking up the item will trigger the entity this points to."
	targetname(target_source) : Name : : "a target_give entity can point to this for respawn freebies."
	notfree(string) : Notfree : : "when set to 1, entity will not spawn in Free for all and Tournament modes."
	notteam(string) : Notteam : : "when set to 1, entity will not spawn in Teamplay and CTF modes."
	notsingle(string) : Notsingle : : "when set to 1, entity will not spawn in Single Player mode (bot play mode)."
	notbot(string) : Notbot : : "used to make an item invisible for bot attraction."
	wait(string) : Wait : : "time in seconds before item respawns after being picked up (default 40, -1 = never respawn)."
	random(string) : Random : : "random time variance in seconds added or subtracted from wait delay (default 0 - see Notes)."
	count(string) : Count : : "sets the amount of ammo given to the player when picked up (default 5)."
	team(string) : Team : : "set this to team items. Teamed items will respawn randomly after team master is picked up (see Notes)."
	target(target_destination) : Target : : "picking up the item will trigger the entity this points to."
	targetname(target_source) : Name : : "a target_give entity can point to this for respawn freebies."
	notfree(string) : Notfree : : "when set to 1, entity will not spawn in Free for all and Tournament modes."
	notteam(string) : Notteam : : "when set to 1, entity will not spawn in Teamplay and CTF modes."
	notsingle(string) : Notsingle : : "when set to 1, entity will not spawn in Single Player mode (bot play mode)."
	notbot(string) : Notbot : : "used to make an item invisible for bot attraction."
	wait(string) : Wait : : "time in seconds before item respawns after being picked up (default 40, -1 = never respawn)."
	random(string) : Random : : "random time variance in seconds added or subtracted from wait delay (default 0 - see Notes)."
	count(string) : Count : : "sets the amount of ammo given to the player when picked up (default 5)."
	team(string) : Team : : "set this to team items. Teamed items will respawn randomly after team master is picked up (see Notes)."
	target(target_destination) : Target : : "picking up the item will trigger the entity this points to."
	targetname(target_source) : Name : : "a target_give entity can point to this for respawn freebies."
	notfree(string) : Notfree : : "when set to 1, entity will not spawn in Free for all and Tournament modes."
	notteam(string) : Notteam : : "when set to 1, entity will not spawn in Teamplay and CTF modes."
	notsingle(string) : Notsingle : : "when set to 1, entity will not spawn in Single Player mode (bot play mode)."
	notbot(string) : Notbot : : "used to make an item invisible for bot attraction."
	wait(string) : Wait : : "time in seconds before item respawns after being picked up (default 40, -1 = never respawn)."
	random(string) : Random : : "random time variance in seconds added or subtracted from wait delay (default 0 - see Notes)."
	count(string) : Count : : "sets the amount of ammo given to the player when picked up (default 10)."
	team(string) : Team : : "set this to team items. Teamed items will respawn randomly after team master is picked up (see Notes)."
	target(target_destination) : Target : : "picking up the item will trigger the entity this points to."
	targetname(target_source) : Name : : "a target_give entity can point to this for respawn freebies."
	notfree(string) : Notfree : : "when set to 1, entity will not spawn in Free for all and Tournament modes."
	notteam(string) : Notteam : : "when set to 1, entity will not spawn in Teamplay and CTF modes."
	notsingle(string) : Notsingle : : "when set to 1, entity will not spawn in Single Player mode (bot play mode)."
	notbot(string) : Notbot : : "used to make an item invisible for bot attraction."
	wait(string) : Wait : : "time in seconds before item respawns after being picked up (default 40, -1 = never respawn)."
	random(string) : Random : : "random time variance in seconds added or subtracted from wait delay (default 0 - see Notes)."
	count(string) : Count : : "sets the amount of ammo given to the player when picked up (default 10)."
	team(string) : Team : : "set this to team items. Teamed items will respawn randomly after team master is picked up (see Notes)."
	target(target_destination) : Target : : "picking up the item will trigger the entity this points to."
	targetname(target_source) : Name : : "a target_give entity can point to this for respawn freebies."
	notfree(string) : Notfree : : "when set to 1, entity will not spawn in Free for all and Tournament modes."
	notteam(string) : Notteam : : "when set to 1, entity will not spawn in Teamplay and CTF modes."
	notsingle(string) : Notsingle : : "when set to 1, entity will not spawn in Single Player mode (bot play mode)."
	notbot(string) : Notbot : : "used to make an item invisible for bot attraction."
	wait(string) : Wait : : "time in seconds before item respawns after being picked up (default 40, -1 = never respawn)."
	random(string) : Random : : "random time variance in seconds added or subtracted from wait delay (default 0 - see Notes)."
	count(string) : Count : : "sets the amount of ammo given to the player when picked up (default 10)."
	team(string) : Team : : "set this to team items. Teamed items will respawn randomly after team master is picked up (see Notes)."
	target(target_destination) : Target : : "picking up the item will trigger the entity this points to."
	targetname(target_source) : Name : : "a target_give entity can point to this for respawn freebies."
	notfree(string) : Notfree : : "when set to 1, entity will not spawn in Free for all and Tournament modes."
	notteam(string) : Notteam : : "when set to 1, entity will not spawn in Teamplay and CTF modes."
	notsingle(string) : Notsingle : : "when set to 1, entity will not spawn in Single Player mode (bot play mode)."
	notbot(string) : Notbot : : "used to make an item invisible for bot attraction."
	speed(string) : Speed : : "determines how fast the door moves (default 130)."
	wait(string) : Wait : : "number of seconds before door returns (default 4, -1 = return immediately)"
	lip(string) : Lip : : "lip remaining at end of move (default 8)"
	targetname(target_source) : Name : : "if set, a func_button or trigger is required to activate the door."
	health(string) : Health : : "if set to a non-zero value, the door must be damaged by health amount of points to activate (default 0)."
	dmg(string) : Dmg : : "damage to inflict on player when he blocks operation of door (default 4). Door will reverse direction when blocked unless CRUSHER spawnflag is set."
	team(string) : Team : : "assign the same team name to multiple doors that should operate together (see Notes)."
	light(string) : Light : : "constantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default 0)."
	color(string) : Color : : "constantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default 1 1 1)."
	model2(studio) : Model : : "path/name of model to include (eg: models/mapobjects/pipe/pipe02.md3)."
	distance(string) : Distance : : "how many degrees the door will open, negative to reverse direction (default 90)."
	origin(string) : Origin : : "alternate method of setting XYZ origin of .md3 model included with entity (See Notes)."
	notfree(string) : Notfree : : "when set to 1, entity will not spawn in Free for all and Tournament modes."
	notteam(string) : Notteam : : "when set to 1, entity will not spawn in Teamplay and CTF modes."
	notsingle(string) : Notsingle : : "when set to 1, entity will not spawn in Single Player mode (bot play mode)."
	START_OPEN(string) : START_OPEN : : "the door will spawn in the open state and operate in reverse."
	CRUSHER(string) : CRUSHER : : "door will not reverse direction when blocked and will keep damaging player until he dies or gets out of the way."
	RETURN(string) : RETURN : : "door will return automatically after having been opened"
	TRIGGER_DOOR(string) : TRIGGER_DOOR : : "door can't be used by an activate button but a trigger"
	X_AXIS(string) : X_AXIS : : "open on the X-axis instead of the Z-axis"
	Y_AXIS(string) : Y_AXIS : : "open on the Y-axis instead of the Z-axis"
	ONE_WAY(string) : ONE_WAY : : "always open the same way, set negative distance to reverse"
	spawnflags(flags) = 
	[
		1 : "suspended" : 0 : "item will spawn where it was placed in map and won't drop to the floor."
	]
]
@SolidClass = func_door : "Normal sliding door entity. By default, the door will activate when player walks close to it or when damage is inflicted to it.\n\nUnlike in Quake 2, doors that touch are NOT automatically teamed. If you want doors to operate together, you have to team them manually by assigning the same team name to all of them. Setting the origin key is simply an alternate method to using an origin brush. When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value."
[
	angle(string) : Angle : : "determines the opening direction of door (up = -1, down = -2)."
	speed(string) : Speed : : "determines how fast the door moves (default 100)."
	wait(string) : Wait : : "number of seconds before door returns (default 2, -1 = return immediately)"
	lip(string) : Lip : : "lip remaining at end of move (default 8)"
	targetname(target_source) : Name : : "if set, a func_button or trigger is required to activate the door."
	health(string) : Health : : "if set to a non-zero value, the door must be damaged by health amount of points to activate (default 0)."
	dmg(string) : Dmg : : "damage to inflict on player when he blocks operation of door (default 4). Door will reverse direction when blocked unless CRUSHER spawnflag is set."
	team(string) : Team : : "assign the same team name to multiple doors that should operate together (see Notes)."
	light(string) : Light : : "constantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default 0)."
	color(string) : Color : : "constantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default 1 1 1)."
	model2(studio) : Model : : "path/name of model to include (eg: models/mapobjects/pipe/pipe02.md3)."
	origin(string) : Origin : : "alternate method of setting XYZ origin of .md3 model included with entity (See Notes)."
	notfree(string) : Notfree : : "when set to 1, entity will not spawn in Free for all and Tournament modes."
	notteam(string) : Notteam : : "when set to 1, entity will not spawn in Teamplay and CTF modes."
	notsingle(string) : Notsingle : : "when set to 1, entity will not spawn in Single Player mode (bot play mode)."
	spawnflags(flags) = 
	[
		1 : "start_open" : 0 : "the door will spawn in the open state and operate in reverse."
		4 : "crusher" : 0 : "door will not reverse direction when blocked and will keep damaging player until he dies or gets out of the way."
		8 : "return" : 0 : "door will return automatically after having been opened"
		16 : "trigger_door" : 0 : "door can't be used by an activate button but a trigger"
	]
]
@SolidClass = func_breakable : "Use spawnflags to manually set the breakable-type. Normally SG detects the breakable-type autmatically by its spawnflags.\n\nHealth		health of the brush default: 7\n\nweapon		sets the weapon which the breakable must be destroyed use the classnames of the weapons to determine the weapon."
[
	spawnflags(flags) = 
	[
		4 : "type_metal" : 0
		8 : "type_wood" : 0
		16 : "type_cloth" : 0
		32 : "type_dirt" : 0
		64 : "type_glass" : 0
		128 : "type_stone" : 0
	]
]
@SolidClass = func_flare : "Generates a Flare effect on a certain brush"
[
	maxsize(string) : Maxsize : : "maximal size of the gloweffect (default 120 (hud units))"
	minsize(string) : Minsize : : "minimal size of the gloweffect (default 30 (hud units))"
	trans(string) : Trans : : "transparency of glow/lens effect (default 0.6, max 1.0)"
	color(string) : Color : : "color of the glow effect ( default 1 1 1)"
	radius(string) : Radius : : "radius of glow effect (default 20 (real units))"
	spawnflags(flags) = 
	[
		1 : "no_glow" : 0
		2 : "no_lensflares" : 0
	]
]
@SolidClass = func_smoke : "Generates Smoke"
[
	size(string) : Size : : "size of the smoke particles (default 50)"
	trans(string) : Trans : : "transparency of the smoke (default 0.6, max 1.0)"
	color(string) : Color : : "color of the smoke ( default 1 1 1)"
	life(string) : Life : : "lifetime of the smoke (default 5 (secs))"
	rate(string) : Rate : : "generation rate of the smoke-sprites (default 3 (sprites per second))"
	target(target_destination) : Target : : "sets the direction of the wind"
	wind(string) : Wind : : "strength of the wind (default 5)"
	boost(string) : Boost : : "rise-up-velocity of the sprites (default 5)"
]
@PointClass size(-24 -24 -16, 24 24 40) offset(0 0 16) color(153 0 0) studio("models/powerups/holdable/boiler.md3") = item_boiler_plate : "Boiler Plate\n\nThe amount of time it takes for an item in the team to respawn is determined by the wait value of the item that was picked up previously. So if one of the items in the team has it's wait key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.\n\nWhen the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random)."
[
	wait(string) : Wait : : "time in seconds before item respawns after being picked up (default 25, -1 = never respawn)."
	random(string) : Random : : "random time variance in seconds added or subtracted from wait delay (default 0 - see Notes)."
	team(string) : Team : : "set this to team items. Teamed items will respawn randomly after team master is picked up (see Notes)."
	target(target_destination) : Target : : "picking up the item will trigger the entity this points to."
	targetname(target_source) : Name : : "a target_give entity can point to this for respawn freebies."
	notfree(string) : Notfree : : "when set to 1, entity will not spawn in Free for all and Tournament modes."
	notteam(string) : Notteam : : "when set to 1, entity will not spawn in Teamplay and CTF modes."
	notsingle(string) : Notsingle : : "when set to 1, entity will not spawn in Single Player mode (bot play mode)."
	notbot(string) : Notbot : : "used to make an item invisible for bot attraction."
	spawnflags(flags) = 
	[
		1 : "suspended" : 0 : "item will spawn where it was placed in map and won't drop to the floor."
	]
]
@PointClass size(-24 -24 -16, 24 24 40) offset(0 0 16) color(153 0 0) studio("models/weapons2/shotgun/scope.md3") = item_scope : "Rifle Scope: adds the zoom function to the rifle\n\nThe amount of time it takes for an item in the team to respawn is determined by the wait value of the item that was picked up previously. So if one of the items in the team has it's wait key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.\n\nWhen the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random)."
[
	wait(string) : Wait : : "time in seconds before item respawns after being picked up (default 25, -1 = never respawn)."
	random(string) : Random : : "random time variance in seconds added or subtracted from wait delay (default 0 - see Notes)."
	team(string) : Team : : "set this to team items. Teamed items will respawn randomly after team master is picked up (see Notes)."
	target(target_destination) : Target : : "picking up the item will trigger the entity this points to."
	targetname(target_source) : Name : : "a target_give entity can point to this for respawn freebies."
	notfree(string) : Notfree : : "when set to 1, entity will not spawn in Free for all and Tournament modes."
	notteam(string) : Notteam : : "when set to 1, entity will not spawn in Teamplay and CTF modes."
	notsingle(string) : Notsingle : : "when set to 1, entity will not spawn in Single Player mode (bot play mode)."
	notbot(string) : Notbot : : "used to make an item invisible for bot attraction."
	spawnflags(flags) = 
	[
		1 : "suspended" : 0 : "item will spawn where it was placed in map and won't drop to the floor."
	]
]
@PointClass size(-16 -16 -16, 16 16 32) offset(0 0 16) color(179 0 255) studio("models/powerups/holdable/belt.md3") = item_belt : "Ammuntion Belt\n\nThe amount of time it takes for an item in the team to respawn is determined by the wait value of the item that was picked up previously. So if one of the items in the team has it's wait key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.\n\nWhen the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random)."
[
	wait(string) : Wait : : "time in seconds before item respawns after being picked up (default 60, -1 = never respawn)."
	random(string) : Random : : "random time variance in seconds added or subtracted from wait delay (default 0 - see Notes)."
	team(string) : Team : : "set this to team items. Teamed items will respawn randomly after team master is picked up (see Notes)."
	target(target_destination) : Target : : "picking up the item will trigger the entity this points to."
	targetname(target_source) : Name : : "a target_give entity can point to this for respawn freebies."
	notfree(string) : Notfree : : "when set to 1, entity will not spawn in Free for all and Tournament modes."
	notteam(string) : Notteam : : "when set to 1, entity will not spawn in Teamplay and CTF modes."
	notsingle(string) : Notsingle : : "when set to 1, entity will not spawn in Single Player mode (bot play mode)."
	notbot(string) : Notbot : : "used to make an item invisible for bot attraction."
	spawnflags(flags) = 
	[
		1 : "suspended" : 0 : "item will spawn where it was placed in map and won't drop to the floor."
	]
]
@PointClass size(-20 -20 -16, 20 20 20) offset(0 0 16) color(77 77 255) = item_money : "Gold sack for bank robbery mode"
[
	target(target_destination) : Target : : "picking up the item will trigger the entity this points to."
	targetname(target_source) : Name : : "a target_give entity can point to this for respawn freebies."
	notbot(string) : Notbot : : "used to make an item invisible for bot attraction."
	spawnflags(flags) = 
	[
		1 : "suspended" : 0 : "item will spawn where it was placed in map and won't drop to the floor."
	]
]
@PointClass size(-20 -20 -16, 20 20 20) color(77 77 255) = pickup_money : "Money item for deathmatch modes(DM, TDM, DUEL)"
[
	target(target_destination) : Target : : "picking up the item will trigger the entity this points to."
	targetname(target_source) : Name : : "a target_give entity can point to this for respawn freebies."
	notbot(string) : Notbot : : "used to make an item invisible for bot attraction."
	count(string) : Count : : "amount of money"
	spawnflags(flags) = 
	[
		1 : "suspended" : 0 : "item will spawn where it was placed in map and won't drop to the floor."
	]
]
@SolidClass = trigger_escape : "Touching this will let the team win the round who robbed the bank."
[
]
