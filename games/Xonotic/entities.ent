<?xml version="1.0"?>
<classes>
<point name="_skybox" color="0.77 0.88 1.0" box="-4 -4 -4 4 4 4">
Compiler-only entity that specifies a the origin of a sky box (a wholly contained, separate area of the map), similar to some games' portal skies. When compiled with Q3Map2, the sky box surfaces will be visible from any place where sky is normally visible. It will cast shadows on the normal parts of the map, and can be used with cloud layers and other effects. As it is compiler-only, it can't &quot;scale up&quot; entities in its box.
To use this, carve a small box in some larger structure on your map, place this entity inside that box hole, and make a small version on what should be seen in the sky there.
-------- KEYS --------
<direction key="angle" name="angle">rotation angle of the sky surfaces.</direction>
<angles key="angles" name="angles">Individual control of PITCH, YAW, and ROLL (default 0 0 0).</angles>
<real key="_scale" name="_scale">scaling factor (default 64), good values are between 50 and 300, depending on the map.</real>
</point>

<group name="_decal" color="1.0 0.77 0.88">
Compiler-only entity that projects a surface (which must be a patch mesh) in a direction (which is given by the vector from the center of this entity to the &quot;target&quot; entity)
-------- KEYS --------
<target key="target" name="target">the entity to be targeted by the projection</target>
-------- NOTES --------
This entity MUST contain one or more patch meshes.
The shaders of these patches SHOULD have the &quot;polygonoffset&quot; shader keyword (or you will get insane z-fighting).
The targeted entity is preferably an info_null.
The projection is a linear projection, and originates from the center of this entity (the start of the arrow line in Radiant) to the origin of the targeted entity (the end of the arrow line in Radiant).
</group>

<point name="dom_controlpoint" color=".3 .3 1" box="-16 -16 -16 16 16 16">
Domination  control point
In order to get Domination working well in your map, you need to place dom_team and dom_controlpoint entities.  You *must* have at least 3 dom_team entities - 2 minimum teams and one blank one (empty netname and no team).  You can have up to 4 teams (5 dom_team entities).
-------- KEYS --------
<string key="message" name="message">message to be displayed to all players when this point is captured, preceded by the team's name.  This defaults to &quot; has captured a control point&quot;.  You can specify different names for each point, for example &quot; has captured the Lava Room&quot;.</string>
<real key="wait" name="wait">How often this point gives its controlling team frags.</real>
<real key="frags" name="frags">How many frags this point gives point gives its controlling team frags each wait cycle.</real>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
zbqry=&quot;zbqryf/qbzvangvba/qbz_hapynvzrq.zq3&quot;

</point>

<point name="dom_team" color=".3 .3 1" box="-16 -16 -16 16 16 16">
Domination team.
In order to get Domination working well in your map, you need to place dom_team and dom_controlpoint entities.  You *must* have at least 3 dom_team entities - 2 minimum teams and one blank one (empty netname and no team).  You can have up to 4 teams (5 dom_team entities).

dom_team entites declare the teams (and the models the team uses) that are available in the domination game. Their position does not matter.

model should be set to models/domination/dom_&lt;team&gt;.md3, where &lt;team&gt; is either &quot;red&quot;, &quot;blue&quot;, &quot;yellow&quot;, or &quot;pink&quot;.
-------- KEYS --------
<string key="netname" name="netname">name of team (Red Team).  Set to &quot;&quot; or don't define for the required blank team.</string>
<real key="cnt" name="cnt">color of the team.  See the &quot;Helpful Extras&quot; section in Docs/mapping.txt for info.</real>
<model key="model" name="model">When this team captures control points, the points turn to this model.  If this is the neutral team, points start out as this model.</model>
<sound key="noise" name="noise">Sound to be played on the control point when it's captured.  Only players nearby will hear it.</sound>
<sound key="noise1" name="noise1">Sound to be played to all players when the control point is captured.  Also good for an announcer voice (&quot;Red Team has captured a control point&quot;)</sound>
</point>

<group name="func_assault_destructible" color=".5 0 .5">
This is a brush model which can be damaged. Once triggered it's active and will happily receive damage players inflict upon it. Once all health is consumed it'll disappear and trigger the targeted entity/entities. As damage is received the brush model will be tinted in an increasingly visible flavor of red to give visible feedback.
-------- KEYS --------
<real key="health" name="health">The damage this trigger can take</real>
<target key="target" name="target">The entity/entities to be triggered once this entity gets invisible</target>
<targetname key="targetname" name="targetname">The name other entities can use to target this entity</targetname>
<string key="mdl" name="mdl">particle effect name to show when destroyed</string>
<real key="count" name="count">particle effect multiplier</real>
<string key="mdl_dead" name="mdl_dead">optional replacement model to show when destroyed</string>
<string key="debris" name="debris">names of debris models to show when destroyed, separated by spaces</string>
<sound key="noise" name="noise">sound to play when destroyed</sound>
<real key="dmg" name="dmg">damage to deal to the environment when destroyed</real>
<real key="dmg_edge" name="dmg_edge">edge damage to deal to the environment when destroyed</real>
<real key="dmg_radius" name="dmg_radius">damage radius</real>
<real key="dmg_force" name="dmg_force">damage force</real>
<string key="message" name="message">death message when a player gets hit by the explosion</string>
<string key="message2" name="message2">death message when someone gets pushed into this (default: &quot;was pushed into an explosion by&quot;). The # character is replaced by the attacker name if present (and it instead does not get appended to the end)</string>
<real key="debrismovetype" name="debrismovetype">way in which the debris moves: one of 1 = ANGLENOCLIP, 2 = ANGLECLIP, 3 = WALK, 4 = STEP, 5 = FLY, 6 = TOSS, 7 = PUSH, 8 = NOCLIP, 9 = FLYMISSILE, 10 = BOUNCE, 11 = BOUNCEMISSILE</real>
<real key="debrissolid" name="debrissolid">solidity of the debris: one of 0 = NOT, 1 = TRIGGER, 2 = BBOX, 3 = SLIDEBOX, 4 = BSP, 5 = CORPSE</real>
<real3 key="debrisvelocity" name="debrisvelocity">initial velocity vector of the debris (static part)</real3>
<real3 key="debrisvelocityjitter" name="debrisvelocityjitter">initial velocity vector of the debris (random part)</real3>
<real3 key="debrisavelocityjitter" name="debrisavelocityjitter">initial angular velocity vector of the debris (random part)</real3>
<real key="debristime" name="debristime">time till the debris fades (average)</real>
<real key="debristimejitter" name="debristimejitter">time till the debris fades (random part)</real>
<real key="debrisfadetime" name="debrisfadetime">how long debris takes to fade</real>
<real key="debrisdamageforcescale" name="debrisdamageforcescale">how much debris is affected by damage force (e.g. explosions)</real>
<real key="debrisskin" name="debrisskin">skin number of debris</real>
-------- SPAWNFLAGS --------
<flag key="NOSPLASH" name="NOSPLASH" bit="8">if set, splash damage cannot activate the door, only direct damage can (requires health to be set)</flag>
</group>

<group name="func_assault_wall" color=".5 0 .5">
Brush model that will disappear once the targeted target_objective is fulfilled. This can be used to restrict access to parts of the map until a certain objective has been conquered.
-------- KEYS --------
<target key="target" name="target">targetname of a target_objective</target>
</group>

<group name="func_bobbing" color="0 .5 .8">
Solid entity that oscillates back and forth in a linear motion. By default, it will have an amount of displacement in either direction equal to the dimension of the brush in the axis in which it's bobbing. Entity bobs on the Z axis (up-down) by default. It can also emit sound if the &quot;noise&quot; key is set. Will crush the player when blocked.
-------- KEYS --------
<real key="speed" name="speed">amount of time in seconds for one complete oscillation cycle (default 4).</real>
<real key="height" name="height">sets the amount of travel of the oscillation movement (default 32). </real>
<real key="phase" name="phase">sets the start offset of the oscillation cycle. Values must be 0 &lt; phase &lt; 1. Any integer phase value is the same as no offset (default 0).</real>
<sound key="noise" name="noise">path/name of .wav or .ogg file to play. Use looping sounds only (e.g. sound/world/drone6.wav - See Notes).</sound>
<real key="dmg" name="dmg">damage a player who gets crushed by it receives</real>
<real key="dmgtime" name="dmgtime">interval to apply dmg to a player who is s in the way</real>
<string key="message" name="message">death message when a player gets crushed</string>
<string key="message2" name="message2">death message when someone gets pushed into this (default: &quot;was thrown into a world of hurt by&quot;). The # character is replaced by the attacker name if present (and it instead does not get appended to the end)</string>
-------- SPAWNFLAGS --------
<flag key="X_AXIS" name="X_AXIS" bit="0">entity will bob along the X axis.</flag>
<flag key="Y_AXIS" name="Y_AXIS" bit="1">entity will bob along the Y axis.</flag>
</group>

<group name="func_pendulum" color="0 .5 .8">
Solid entity that swings back and forth in an angular motion. Entity swings on the north-south direction by default (can be changed by using a different yaw angle).
-------- KEYS --------
<real key="speed" name="speed">angle amount of the swinging</real>
<real key="freq" name="freq">frequency (cycles per second) of the swinging (if unspecified, a physically &quot;somewhat correct&quot; value is calculated that matches Quake 3)</real>
<real key="phase" name="phase">sets the start offset of the oscillation cycle. Values must be 0 &lt; phase &lt; 1. Any integer phase value is the same as no offset (default 0).</real>
<sound key="noise" name="noise">path/name of .wav or .ogg file to play. Use looping sounds only (e.g. sound/world/drone6.wav - See Notes).</sound>
<real key="dmg" name="dmg">damage a player who gets crushed by it receives</real>
<real key="dmgtime" name="dmgtime">interval to apply dmg to a player who is s in the way</real>
<string key="message" name="message">death message when a player gets crushed</string>
<string key="message2" name="message2">death message when someone gets pushed into this (default: &quot;was thrown into a world of hurt by&quot;). The # character is replaced by the attacker name if present (and it instead does not get appended to the end)</string>
</group>

<group name="func_button" color="0 .5 .8">
When a button is touched by a player, it moves in the direction set by the &quot;angle&quot; key, triggers all its targets, stays pressed by an amount of time set by the &quot;wait&quot; key, then returns to it's original position where it can be operated again.
-------- KEYS --------
<direction key="angle" name="angle">determines the direction in which the button will move (up = -1, down = -2).</direction>
<target key="target" name="target">all entities with a matching targetname will be triggered.</target>
<target key="target2" name="target2">all entities with a matching targetname will be triggered.</target>
<target key="target3" name="target3">all entities with a matching targetname will be triggered.</target>
<target key="target4" name="target4">all entities with a matching targetname will be triggered.</target>
<boolean key="target_random" name="target_random">instead of triggering ALL matched entities, trigger ONE of them by random</boolean>
<real key="speed" name="speed">speed of button's displacement (default 40).</real>
<real key="platmovetype" name="platmovetype">movement type (1 = linear, 2 = cosine [default])</real>
<real key="wait" name="wait">number of seconds button stays pressed (default 1, -1 = return immediately).</real>
<real key="lip" name="lip">lip remaining at end of move (default 4 units).</real>
<real key="health" name="health">(default 0) if set to any non-zero value, the button must take damage (any amount) to activate.</real>
-------- SPAWNFLAGS --------
<flag key="NOSPLASH" name="NOSPLASH" bit="8">if set, splash damage cannot activate the door, only direct damage can (requires health to be set)</flag>
</group>

<group name="func_conveyor" color="0 .5 .8">
A conveyor. Solid brush version.
-------- KEYS --------
<targetname key="targetname" name="targetname">if set, it can be turned on/off</targetname>
<direction key="angle" name="angle">determines the opening direction</direction>
<real key="speed" name="speed">movement speed (200 default)</real>
-------- SPAWNFLAGS --------
<flag key="START_ON" name="START_ON" bit="0">the conveyor is turned on if not triggered</flag>
</group>

<group name="trigger_conveyor" color="0 .5 .8">
A conveyor. Nonsolid trigger version.
-------- KEYS --------
<targetname key="targetname" name="targetname">if set, it can be turned on/off</targetname>
<direction key="angle" name="angle">determines the opening direction</direction>
<real key="speed" name="speed">movement speed (200 default)</real>
-------- SPAWNFLAGS --------
<flag key="START_ON" name="START_ON" bit="0">the conveyor is turned on if not triggered</flag>
</group>

<group name="func_door" color="0 .5 .8">
Normal sliding door entity. By default, the door will activate when player walks close to it or when damage is inflicted to it.
If DOOR_DONT_LINK is not set, the door will be linked with all doors it touches. Note however that for linked doors to work properly, it is necessary that ALL linked doors have SOME volume of common area (that is, there must be a point that is part of ALL doors).
-------- KEYS --------
<string key="message" name="message">is printed when the door is touched if it is a trigger door and it hasn't been fired yet, or death message if dmg is set</string>
<string key="message2" name="message2">death message when someone gets pushed into this (default: &quot;was thrown into a world of hurt by&quot;). The # character is replaced by the attacker name if present (and it instead does not get appended to the end)</string>
<direction key="angle" name="angle">determines the opening direction</direction>
<targetname key="targetname" name="targetname">if set, no touch field will be spawned and a remote button or trigger field activates the door.</targetname>
<real key="health" name="health">if set, door must be shot open</real>
<real key="speed" name="speed">movement speed (100 default)</real>
<real key="platmovetype" name="platmovetype">movement type (1 = linear, 2 = cosine [default])</real>
<real key="wait" name="wait">wait before returning (3 default, -1 = never return)</real>
<real key="lip" name="lip">lip remaining at end of move (8 default)</real>
<real key="dmg" name="dmg">damage to inflict when blocked (when triggered and someone is in the way)</real>
<real key="sounds" name="sounds">when 1, use default door sounds</real>
<sound key="noise1" name="noise1">sound when the door opens</sound>
<sound key="noise2" name="noise2">sound when the door closes</sound>
<real key="itemkeys" name="itemkeys">keys required to open this door.</real>
-------- SPAWNFLAGS --------
<flag key="START_OPEN" name="START_OPEN" bit="0">causes the door to move to its destination when spawned, and operate in reverse.  It is used to temporarily or permanently close off an area when triggered (not useful for touch or damage triggered doors).</flag>
<flag key="DOOR_DONT_LINK" name="DOOR_DONT_LINK" bit="2">the door won't link with another door it touches</flag>
<flag key="GOLD_KEY" name="GOLD_KEY" bit="3">causes the door to open only if the activator holds a gold key (Q1 compatibility).</flag>
<flag key="SILVER_KEY" name="SILVER_KEY" bit="4">causes the door to open only if the activator holds a silver key (Q1 compatibility).</flag>
<flag key="TOGGLE" name="TOGGLE" bit="5">causes the door to wait in both the start and end states for a trigger event.</flag>
<flag key="NOSPLASH" name="NOSPLASH" bit="8">if set, splash damage cannot activate the door, only direct damage can (requires health to be set)</flag>
-------- NOTES --------
More information about keys can be found in item_key description.
</group>

<group name="func_door_rotating" color="0 .5 .8">
Normal rotating door entity that opens by rotating around an axis (default: Z). Use an origin brush to specify the rotation axis.
By default, the door will activate when player walks close to it or when damage is inflicted to it.
If DOOR_DONT_LINK is not set, the door will be linked with all doors it touches.
BIDIR makes the door work bidirectional, so that the opening direction is always away from the requestor.
The usage of bidirectional doors requires two manually instantiated triggers (trigger_multiple), the one to open it in the other direction
must have set trigger_reverse to 1.
BIDIR_IN_DOWN will the door prevent from reopening while closing if it is triggered from the other side.
-------- KEYS --------
<string key="message" name="message">is printed when the door is touched if it is a trigger door and it hasn't been fired yet, or death message if dmg is set</string>
<string key="message2" name="message2">death message when someone gets pushed into this (default: &quot;was thrown into a world of hurt by&quot;). The # character is replaced by the attacker name if present (and it instead does not get appended to the end)</string>
<direction key="angle" name="angle">determines the destination angle for opening. negative values reverse the direction (90 default)</direction>
<targetname key="targetname" name="targetname">if set, no touch field will be spawned and a remote button or trigger field activates the door.</targetname>
<real key="health" name="health">if set, door must be shot open</real>
<real key="speed" name="speed">speed to rotate (in degrees per second)</real>
<real key="wait" name="wait">wait before returning (3 default, -1 = never return)</real>
<real key="dmg" name="dmg">damage to inflict when blocked (when triggered and someone is in the way)</real>
<real key="sounds" name="sounds">when 1, use default door sounds</real>
<sound key="noise1" name="noise1">sound when the door opens</sound>
<sound key="noise2" name="noise2">sound when the door closes</sound>
-------- SPAWNFLAGS --------
<flag key="START_OPEN" name="START_OPEN" bit="0">causes the door to move to its destination when spawned, and operate in reverse.  It is used to temporarily or permanently close off an area when triggered (not useful for touch or damage triggered doors).</flag>
<flag key="DOOR_DONT_LINK" name="DOOR_DONT_LINK" bit="2">the door won't link with another door it touches</flag>
<flag key="TOGGLE" name="TOGGLE" bit="5">causes the door to wait in both the start and end states for a trigger event.</flag>
<flag key="NOSPLASH" name="NOSPLASH" bit="8">if set, splash damage cannot activate the door, only direct damage can (requires health to be set)</flag>
</group>

<group name="func_door_secret" color="0 .5 .8">
Basic secret door. Slides back, then to the side. Angle determines direction. Opens when targeted or when shot; does not create its own trigger field like func_door does.
-------- KEYS --------
<real key="platmovetype" name="platmovetype">movement type (1 = linear, 2 = cosine [default])</real>
<real key="wait" name="wait"># of seconds before coming back</real>
<string key="key1" name="key1">first entity key with one-line description</string>
<string key="key2" name="key2">second entity key with one-line description</string>
<real key="t_width" name="t_width">override WIDTH to move back (or height if going down)</real>
<real key="t_length" name="t_length">override LENGTH to move sideways</real>
<real key="dmg" name="dmg">damage to inflict when blocked (2 default)</real>
<string key="message" name="message">text to display when activating the door, or death message if dmg is set</string>
<string key="message2" name="message2">death message when someone gets pushed into this (default: &quot;was thrown into a world of hurt by&quot;). The # character is replaced by the attacker name if present (and it instead does not get appended to the end)</string>
<sound key="noise1" name="noise1">sound when opening backwards or closing</sound>
<sound key="noise2" name="noise2">sound when opening sideways</sound>
<sound key="noise3" name="noise3">sound when stopping</sound>
-------- SPAWNFLAGS --------
<flag key="OPEN_ONCE" name="OPEN_ONCE" bit="0">only work once, then stay open</flag>
<flag key="1ST_LEFT" name="1ST_LEFT" bit="1">1st move is left of arrow</flag>
<flag key="1ST_DOWN" name="1ST_DOWN" bit="2">1st move is down from arrow</flag>
<flag key="NO_SHOOT" name="NO_SHOOT" bit="3">never respond to shots</flag>
<flag key="ALWAYS_SHOOT" name="ALWAYS_SHOOT" bit="4">even if targetname is set, respond to shots</flag>
</group>

<group name="func_group" color="0 .5 .8">
This is not an entity as such. It is strictly an editor utility to group world brushes and patches together for convenience (selecting, moving, copying, etc). You cannot group entities with this.
-------- Q3MAP2 KEYS --------
<real key="_lightmapscale" name="_lightmapscale">light map resolution factor</real>
<boolean key="_castshadows" name="_castshadows">Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. &gt; 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.</boolean>
<boolean key="_receiveshadows" name="_receiveshadows">Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. &gt; 1 = receive shadows only from corresponding keyed entities (see above) and world. &lt; 1 = receive shadows ONLY from corresponding keyed entities.</boolean>
<texture key="_celshader" name="_celshader">Sets the cel shader used for this geometry. Note: omit the &quot;textures/&quot; prefix.</texture>
-------- KEYS --------
<texture key="_indexmap" name="_indexmap">Path/name for the TGA file used to guide the mapping of textures on the terrain surface.</texture>
<integer key="_layers" name="_layers">number of unique root shaders that will be use on the terrain.</integer>
<texture key="_shader" name="_shader">Path to the metashader used to assign textures to the terrain entity. Note: Omit the &quot;textures/&quot; prefix.</texture>
<string key="_offsets" name="_offsets">space separated list of height offsets for the index map</string>
</group>

<group name="func_ladder" color="0 .5 .8">
a ladder, need i say no more
grab a trigger brush and put it in front of the part that you want the player to climb
</group>

<group name="func_plat" color="0 .5 .8">
Rising platform the player can ride to reach higher places. Plats must always be drawn in the raised position, so they will operate and be lighted correctly but they spawn in the lowered position. The plat will stay in the raised position until the player steps off.
-------- KEYS --------
<real key="speed" name="speed">determines how fast the plat moves (default 150).</real>
<real key="platmovetype" name="platmovetype">movement type (1 = linear, 2 = cosine [default])</real>
<real key="lip" name="lip">lip remaining at end of move (default 16). Has no effect if &quot;height&quot; is set.</real>
<real key="height" name="height">if set, this will determine the total amount of vertical travel of the plat.</real>
<real key="dmg" name="dmg">damage to inflict on player when he blocks operation of plat. Plat will reverse direction when blocked.</real>
<targetname key="targetname" name="targetname">if set, the trigger that points to this will lower the plat each time it fires. The plat lowers and lifts someone up later.</targetname>
<real key="sounds" name="sounds">2 for alternate sound set, -1 for silence, or use the fields below</real>
<string key="sound1" name="sound1">platform starts moving sound</string>
<string key="sound2" name="sound2">platform stop sound</string>
<string key="message" name="message">kill message, when someone gets killed by this plat</string>
<string key="message2" name="message2">death message when someone gets pushed into this (default: &quot;was thrown into a world of hurt by&quot;). The # character is replaced by the attacker name if present (and it instead does not get appended to the end)</string>
-------- SPAWNFLAGS --------
<flag key="CRUSH" name="CRUSH" bit="2">crush players hit by the platform instantly</flag>
-------- NOTES --------
By default, the total amount of vertical travel of a platform is implicitly determined by the overall vertical size of the brushes of which it's made minus the lip value. But if the &quot;height&quot; key is used, then the total amount of vertical travel of the plat will be exactly that value regardless of the shape and size of the plat and regardless of the value of the &quot;lip&quot; key. Using the &quot;height&quot; key is the best method for any kind of platforms and the only possible one for thin plats which need to travel vertical distances many times their own thickness. Setting the origin key is simply an alternate method to using an origin brush. When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value.
</group>

<group name="func_rain" color="0 .5 .8">
This is an invisible area like a trigger, which rain falls inside of.
-------- KEYS --------
<real3 key="velocity" name="velocity">falling direction (should be something like '0 0 -700', use the X and Y velocity for wind)</real3>
<real key="cnt" name="cnt">sets color of rain in the Quake palette (default 12 - white)</real>
<real key="count" name="count">adjusts density, this many particles fall every second for a 1024x1024 area, default is 2000</real>
</group>

<group name="func_rotating" color="0 .5 .8">
Brush entity that spins in place on one axis (default Z). Use an origin brush to specify the rotation axis.
To rotate around another axis, make a func_wall with an explicit avelocity given.
-------- KEYS --------
<real key="speed" name="speed">speed to rotate (in degrees per second, default: 100)</real>
<sound key="noise" name="noise">path/name of looping .wav file to play.</sound>
<real key="dmg" name="dmg">Do this much dmg every .dmgtime interval when blocked</real>
<real key="dmgtime" name="dmgtime">See above. (0.25s default)</real>
<string key="message" name="message">kill message when crushed by this</string>
<string key="message2" name="message2">death message when someone gets pushed into this (default: &quot;was thrown into a world of hurt by&quot;). The # character is replaced by the attacker name if present (and it instead does not get appended to the end)</string>
-------- SPAWNFLAGS --------
<flag key="X_AXIS" name="X_AXIS" bit="2">rotate around the X axis</flag>
<flag key="Y_AXIS" name="Y_AXIS" bit="3">rotate around the Y axis</flag>
</group>

<group name="func_snow" color="0 .5 .8">
This is an invisible area like a trigger, which snow falls inside of.
-------- KEYS --------
<real3 key="velocity" name="velocity">falling direction (should be something like '0 0 -300', use the X and Y velocity for wind)</real3>
<real key="cnt" name="cnt">sets color of snow in the Quake palette (default 12 - white)</real>
<real key="count" name="count">adjusts density, this many particles fall every second for a 1024x1024 area, default is 2000</real>
</group>

<point name="func_stardust" color=".5 .5 .5" box="-8 -8 -8 8 8 8">
Point entity with EF_STARDUST applied. This will spawn a particle cloud with mostly golden particles. Used as eye-candy.
</point>

<group name="func_train" color="0 .5 .8">
Trains are moving solids that follow a cycle of path_corner entities. Origin brushes are NOT supported; they use the &quot;mins&quot; corner as reference (that is, lowest x, y, and z coordinates).
At each node, the train's mins corner hits exactly the path_corner.
Trains always start on in the game.
Trains do not damage the played when blocked.
Trains cannot emit sound.
Trains are not trigger-able or toggle-able.
Trains cannot be block-stopped just by getting in their way, the player must be wedged between the train and another obstacle to block it.
-------- KEYS --------
<real key="speed" name="speed">default/initial speed of train (default 100 or overridden by speed value of targeted path_corner)</real>
<real key="platmovetype" name="platmovetype">movement type (1 = linear, 2 = cosine [default])</real>
<target key="target" name="target">targetname of first path_corner to move to at the default speed; ideally, this path_corner shall be exactly where the train starts</target>
<sound key="noise" name="noise">path/name of .wav or .ogg file to play while moving. Use looping sounds only (e.g. sound/world/drone6.wav - See Notes).</sound>
<real key="dmg" name="dmg">damage a player who gets crushed by it receives</real>
<real key="dmgtime" name="dmgtime">interval to apply dmg to a player who is s in the way</real>
<string key="message" name="message">death message when a player gets crushed</string>
<string key="message2" name="message2">death message when someone gets pushed into this (default: &quot;was thrown into a world of hurt by&quot;). The # character is replaced by the attacker name if present (and it instead does not get appended to the end)</string>
</group>

<point name="info_autoscreenshot" color="0 0 0.2" box="-8 -8 -8 8 8 8">
Location to make the first autoscreenshots from. At most three such entities may be used!
-------- KEYS --------
<angles key="angles" name="angles">view direction of the camera in PITCH YAW ROLL</angles>
<target key="target" name="target">targetname of a target_position for the view direction, alternatively to specifying angles</target>
</point>

<point name="info_location" color="1 1 0" box="-8 -8 -8 8 8 8">
Location for use by the %l escape in &quot;say&quot; messages.
The closest &quot;visible&quot; info_location entity is chosen to find the right location name for a point.
-------- KEYS --------
<string key="netname" name="netname">name of location, possibly with color codes</string>
</point>

<point name="info_notnull" color="0 .5 0" box="-8 -8 -8 8 8 8">
Entity that does nothing, but may be targeted (e.g. to use its position)
-------- KEYS --------
<targetname key="targetname" name="targetname">must match the target key of entity that uses this for pointing.</targetname>
</point>

<point name="info_null" color="0 .5 0" box="-8 -8 -8 8 8 8">
Aiming target for q3map2-internal entities like _decal or light. Removes itself when loaded, so it can NOT be used for in-game stuff!
-------- KEYS --------
<targetname key="targetname" name="targetname">the entity that requires an aiming direction points to this.</targetname>
</point>

<point name="info_player_attacker" color="1 0.5 0" box="-16 -16 -24 16 16 45">
Attacking team's player spawning location in Assault. Should touch the floor, but not the walls, and should point where the player should look when he spawns there.
-------- KEYS --------
<target key="target" name="target">this should point to a target_objective to decide when this spawning point is active.</target>
<target key="target2" name="target2">trigger all entities with this targetname when someone spawns</target>
<target key="target3" name="target3">trigger all entities with this targetname when someone spawns</target>
<target key="target4" name="target4">trigger all entities with this targetname when someone spawns</target>
<boolean key="target_random" name="target_random">instead of triggering ALL matched entities, trigger ONE of them by random</boolean>
<real key="cnt" name="cnt">weight of spawn point for random selection. Set to a lower value if you have many spawn points close together. Default value is 1.</real>
<real key="restriction" name="restriction">when 1, only bots can spawn here; when 2, only humans can spawn here (be careful with these, or the game will crash because someone cannot spawn)</real>
</point>

<point name="info_player_deathmatch" color="0 1 0" box="-16 -16 -24 16 16 45">
Normal player spawning location in game types without team spawns. Should touch the floor, but not the walls, and should point where the player should look when he spawns there.
-------- KEYS --------
<real key="cnt" name="cnt">weight of spawn point for random selection. Set to a lower value if you have many spawn points close together. Default value is 1.</real>
<target key="target2" name="target2">trigger all entities with this targetname when someone spawns</target>
<target key="target3" name="target3">trigger all entities with this targetname when someone spawns</target>
<target key="target4" name="target4">trigger all entities with this targetname when someone spawns</target>
<targetname key="targetname" name="targetname">when targeted by a func_button, pressing the button will assign the spawn point to the team of the activator as an additional spawn point, or reassign it if it was already assigned. Also used to assign spawn points to Onslaught control points.</targetname>
<real key="restriction" name="restriction">when 1, only bots can spawn here; when 2, only humans can spawn here (be careful with these, or the game will crash because someone cannot spawn)</real>
</point>

<point name="info_player_defender" color=".5 .5 .5" box="-16 -16 -24 16 16 45">
Defending team's player spawning location in Assault. Should touch the floor, but not the walls, and should point where the player should look when he spawns there.
-------- KEYS --------
<target key="target" name="target">this should point to a target_objective to decide when this spawning point is active.</target>
<target key="target2" name="target2">trigger all entities with this targetname when someone spawns</target>
<target key="target3" name="target3">trigger all entities with this targetname when someone spawns</target>
<target key="target4" name="target4">trigger all entities with this targetname when someone spawns</target>
<boolean key="target_random" name="target_random">instead of triggering ALL matched entities, trigger ONE of them by random</boolean>
<real key="cnt" name="cnt">weight of spawn point for random selection. Set to a lower value if you have many spawn points close together. Default value is 1.</real>
<real key="restriction" name="restriction">when 1, only bots can spawn here; when 2, only humans can spawn here (be careful with these, or the game will crash because someone cannot spawn)</real>
</point>

<point name="info_player_team1" color="1 0 0" box="-16 -16 -24 16 16 45">
Red team's player spawning location in e.g. CTF and Onslaught. Should touch the floor, but not the walls, and should point where the player should look when he spawns there.
-------- KEYS --------
<real key="cnt" name="cnt">weight of spawn point for random selection. Set to a lower value if you have many spawn points close together. Default value is 1.</real>
<target key="target2" name="target2">trigger all entities with this targetname when someone spawns</target>
<target key="target3" name="target3">trigger all entities with this targetname when someone spawns</target>
<target key="target4" name="target4">trigger all entities with this targetname when someone spawns</target>
<targetname key="targetname" name="targetname">when targeted by a func_button, pressing the button will reassign the spawn point to the team of the activator. If a team has no more spawn point left, it immediately loses.</targetname>
<real key="restriction" name="restriction">when 1, only bots can spawn here; when 2, only humans can spawn here (be careful with these, or the game will crash because someone cannot spawn)</real>
</point>

<point name="info_player_team2" color="0 0 1" box="-16 -16 -24 16 16 45">
Blue team's player spawning location in e.g. CTF and Onslaught. Should touch the floor, but not the walls, and should point where the player should look when he spawns there.
-------- KEYS --------
<real key="cnt" name="cnt">weight of spawn point for random selection. Set to a lower value if you have many spawn points close together. Default value is 1.</real>
<target key="target2" name="target2">trigger all entities with this targetname when someone spawns</target>
<target key="target3" name="target3">trigger all entities with this targetname when someone spawns</target>
<target key="target4" name="target4">trigger all entities with this targetname when someone spawns</target>
<targetname key="targetname" name="targetname">when targeted by a func_button, pressing the button will reassign the spawn point to the team of the activator. If a team has no more spawn point left, it immediately loses.</targetname>
<real key="restriction" name="restriction">when 1, only bots can spawn here; when 2, only humans can spawn here (be careful with these, or the game will crash because someone cannot spawn)</real>
</point>

<point name="info_player_team3" color="1 1 0" box="-16 -16 -24 16 16 45">
Yellow team's player spawning location, but there is no game mode to use this yet. Anyway, should touch the floor, but not the walls, and should point where the player should look when he spawns there.
-------- KEYS --------
<real key="cnt" name="cnt">weight of spawn point for random selection. Set to a lower value if you have many spawn points close together. Default value is 1.</real>
<target key="target2" name="target2">trigger all entities with this targetname when someone spawns</target>
<target key="target3" name="target3">trigger all entities with this targetname when someone spawns</target>
<target key="target4" name="target4">trigger all entities with this targetname when someone spawns</target>
<targetname key="targetname" name="targetname">when targeted by a func_button, pressing the button will reassign the spawn point to the team of the activator. If a team has no more spawn point left, it immediately loses.</targetname>
<real key="restriction" name="restriction">when 1, only bots can spawn here; when 2, only humans can spawn here (be careful with these, or the game will crash because someone cannot spawn)</real>
</point>

<point name="info_player_team4" color="1 0 1" box="-16 -16 -24 16 16 45">
Pink team's player spawning location, but there is no game mode to use this yet. Anyway, should touch the floor, but not the walls, and should point where the player should look when he spawns there.
-------- KEYS --------
<real key="cnt" name="cnt">weight of spawn point for random selection. Set to a lower value if you have many spawn points close together. Default value is 1.</real>
<target key="target2" name="target2">trigger all entities with this targetname when someone spawns</target>
<target key="target3" name="target3">trigger all entities with this targetname when someone spawns</target>
<target key="target4" name="target4">trigger all entities with this targetname when someone spawns</target>
<targetname key="targetname" name="targetname">when targeted by a func_button, pressing the button will reassign the spawn point to the team of the activator. If a team has no more spawn point left, it immediately loses.</targetname>
<real key="restriction" name="restriction">when 1, only bots can spawn here; when 2, only humans can spawn here (be careful with these, or the game will crash because someone cannot spawn)</real>
</point>

<point name="item_armor_large" color=".4 .8 .4" box="-30 -30 0 30 30 32" model="models/items/item_armor_large.md3">
Large Armor (default 100 armor points)
-------- KEYS --------
<real key="respawntime" name="respawntime">time till it respawns (default: 30)</real>
<real key="respawntimejitter" name="respawntimejitter">respawn time randomization +/- seconds (default: 0)</real>
<real key="armorvalue" name="armorvalue">amount of armor it gives (default: 100 (g_pickup_armorlarge))</real>
<real key="max_armorvalue" name="max_armorvalue">max of armor it increases to (default: 999 (g_pickup_armorlarge_max))</real>
<integer key="team" name="team">out of items with the same value here, only one (random one) will spawn. Useful to put multiple items on one spot.</integer>
<real key="cnt" name="cnt">weight of this item for random selection using &quot;team&quot;. Set to a lower value for items you want to see less likely.</real>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>
</point>

<point name="item_armor_big" color=".4 .8 .4" box="-30 -30 0 30 30 32" model="models/items/item_armor_big.md3">
Big Armor (default 50 armor points)
-------- KEYS --------
<real key="respawntime" name="respawntime">time till it respawns (default: 20)</real>
<real key="respawntimejitter" name="respawntimejitter">respawn time randomization +/- seconds (default: 0)</real>
<real key="armorvalue" name="armorvalue">amount of armor it gives (default: 50 (g_pickup_armorlarge))</real>
<real key="max_armorvalue" name="max_armorvalue">max of armor it increases to (default: 999 (g_pickup_armorlarge_max))</real>
<integer key="team" name="team">out of items with the same value here, only one (random one) will spawn. Useful to put multiple items on one spot.</integer>
<real key="cnt" name="cnt">weight of this item for random selection using &quot;team&quot;. Set to a lower value for items you want to see less likely.</real>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>
</point>

<point name="item_armor_medium" color=".4 .8 .4" box="-30 -30 0 30 30 32" model="models/items/item_armor_medium.md3">
Medium Armor (default 25 armor points)
-------- KEYS --------
<real key="respawntime" name="respawntime">time till it respawns (default: 20)</real>
<real key="respawntimejitter" name="respawntimejitter">respawn time randomization +/- seconds (default: 0)</real>
<real key="armorvalue" name="armorvalue">amount of armor it gives (default: 25 (g_pickup_armormedium))</real>
<real key="max_armorvalue" name="max_armorvalue">max of armor it increases to (default: 999 (g_pickup_armormedium_max))</real>
<integer key="team" name="team">out of items with the same value here, only one (random one) will spawn. Useful to put multiple items on one spot.</integer>
<real key="cnt" name="cnt">weight of this item for random selection using &quot;team&quot;. Set to a lower value for items you want to see less likely.</real>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>
</point>

<point name="item_armor_small" color=".4 .8 .4" box="-30 -30 0 30 30 32" model="models/items/item_armor_small.md3">
Small Armor (default 5 armor points)
-------- KEYS --------
<real key="respawntime" name="respawntime">time till it respawns (default: 15)</real>
<real key="respawntimejitter" name="respawntimejitter">respawn time randomization +/- seconds (default: 0)</real>
<real key="armorvalue" name="armorvalue">amount of armor it gives (default: 5 (g_pickup_armorsmall))</real>
<real key="max_armorvalue" name="max_armorvalue">max of armor it increases to (default: 999 (g_pickup_armorsmall_max))</real>
<integer key="team" name="team">out of items with the same value here, only one (random one) will spawn. Useful to put multiple items on one spot.</integer>
<real key="cnt" name="cnt">weight of this item for random selection using &quot;team&quot;. Set to a lower value for items you want to see less likely.</real>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
modeldisabled=&quot;models/items/g_a1.md3&quot;
</point>

<point name="item_bullets" color=".3 .3 1" box="-30 -30 0 30 30 32" model="models/items/a_bullets.md3">
Machine Gun ammo
-------- KEYS --------
<real key="ammo_nails" name="ammo_nails">bullets gained by this item (if unset, g_pickup_nails is used)</real>
<real key="respawntime" name="respawntime">time till it respawns (default: 15)</real>
<real key="respawntimejitter" name="respawntimejitter">respawn time randomization +/- seconds (default: 0)</real>
<integer key="team" name="team">out of items with the same value here, only one (random one) will spawn. Useful to put multiple items on one spot.</integer>
<real key="cnt" name="cnt">weight of this item for random selection using &quot;team&quot;. Set to a lower value for items you want to see less likely.</real>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
modeldisabled=&quot;models/items/a_bullets.md3&quot;
</point>

<point name="item_cells" color=".3 .3 1" box="-30 -30 0 30 30 32" model="models/items/a_cells.md3">
Nex, Electro and Crylink ammo
-------- KEYS --------
<real key="ammo_cells" name="ammo_cells">cells gained by this item (if unset, g_pickup_cells is used)</real>
<real key="respawntime" name="respawntime">time till it respawns (default: 15)</real>
<real key="respawntimejitter" name="respawntimejitter">respawn time randomization +/- seconds (default: 0)</real>
<integer key="team" name="team">out of items with the same value here, only one (random one) will spawn. Useful to put multiple items on one spot.</integer>
<real key="cnt" name="cnt">weight of this item for random selection using &quot;team&quot;. Set to a lower value for items you want to see less likely.</real>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
modeldisabled=&quot;models/items/a_cells.md3&quot;
</point>

<point name="item_flag_team1" color="1 0 0" box="-32 -32 0 32 32 74">
CTF flag for team one (Red). Use more than one if you really insist.
-------- KEYS --------
<model key="model" name="model">model to use</model>
<real key="scale" name="scale">scaling factor (DO set this when using your own model!)</real>
<sound key="noise" name="noise">sound played when flag is picked up</sound>
<sound key="noise1" name="noise1">sound played when flag is returned</sound>
<sound key="noise2" name="noise2">sound played when flag is captured</sound>
<sound key="noise3" name="noise3">sound played when flag is lost in the field and respawns itself</sound>
-------- ZBQRY SBE ENQVNAG BAYL - QB ABG FRG GUVF NF N XRL --------
zbqry=&quot;zbqryf/pgs/enqvnag/synt_erq_enqvnag.zq3&quot;
</point>

<point name="item_flag_team2" color="0 0 1" box="-32 -32 0 32 32 74">
CTF flag for team two (Blue). Use more than one if you really insist.
-------- KEYS --------
<model key="model" name="model">model to use</model>
<real key="scale" name="scale">scaling factor (DO set this when using your own model!)</real>
<sound key="noise" name="noise">sound played when flag is picked up</sound>
<sound key="noise1" name="noise1">sound played when flag is returned</sound>
<sound key="noise2" name="noise2">sound played when flag is captured</sound>
<sound key="noise3" name="noise3">sound played when flag is lost in the field and respawns itself</sound>
-------- ZBQRY SBE ENQVNAG BAYL - QB ABG FRG GUVF NF N XRL --------
zbqry=&quot;zbqryf/pgs/enqvnag/synt_oyhr_enqvnag.zq3&quot;
</point>

<point name="item_health_large" color=".9 .3 .3" box="-30 -30 0 30 30 48" model="models/items/g_h50.md3">
Large Health (default 50 health points)
-------- KEYS --------
<real key="respawntime" name="respawntime">time till it respawns (default: 20)</real>
<real key="respawntimejitter" name="respawntimejitter">respawn time randomization +/- seconds (default: 0)</real>
<real key="health" name="health">amount of health it gives (default: 50 (g_pickup_healthlarge))</real>
<real key="max_health" name="max_health">max of health it increases to (default: 999 (g_pickup_healthlarge_max))</real>
<integer key="team" name="team">out of items with the same value here, only one (random one) will spawn. Useful to put multiple items on one spot.</integer>
<real key="cnt" name="cnt">weight of this item for random selection using &quot;team&quot;. Set to a lower value for items you want to see less likely.</real>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
modeldisabled=&quot;models/items/g_h50.md3&quot;
</point>

<point name="item_health_medium" color=".9 .3 .3" box="-30 -30 0 30 30 48" models="models/items/g_h25.md3">
Medium Health (default 25 health points)
-------- KEYS --------
<real key="respawntime" name="respawntime">time till it respawns (default: 15)</real>
<real key="respawntimejitter" name="respawntimejitter">respawn time randomization +/- seconds (default: 0)</real>
<real key="health" name="health">amount of health it gives (default: 25 (g_pickup_healthmedium))</real>
<real key="max_health" name="max_health">max of health it increases to (default: 999 (g_pickup_healthmedium_max))</real>
<integer key="team" name="team">out of items with the same value here, only one (random one) will spawn. Useful to put multiple items on one spot.</integer>
<real key="cnt" name="cnt">weight of this item for random selection using &quot;team&quot;. Set to a lower value for items you want to see less likely.</real>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
modeldisabled=&quot;models/items/g_h25.md3&quot;
</point>

<point name="item_health_mega" color=".9 .3 .3" box="-30 -30 0 30 30 48" model="models/items/g_h100.md3">
Mega Health (default 100 health points)
In Minstagib, this randomly turns into either an invisibility, an extra lives or a speed power-up with a default respawn time of 120.
-------- KEYS --------
<real key="respawntime" name="respawntime">time till it respawns (default: 30)</real>
<real key="respawntimejitter" name="respawntimejitter">respawn time randomization +/- seconds (default: 0)</real>
<real key="health" name="health">amount of health it gives (default: 100 (g_pickup_healthmega))</real>
<real key="max_health" name="max_health">max of health it increases to (default: 999 (g_pickup_healthmega_max))</real>
<integer key="team" name="team">out of items with the same value here, only one (random one) will spawn. Useful to put multiple items on one spot.</integer>
<real key="cnt" name="cnt">weight of this item for random selection using &quot;team&quot;. Set to a lower value for items you want to see less likely.</real>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
modeldisabled=&quot;models/items/g_h100.md3&quot;
</point>

<point name="item_health_small" color=".9 .3 .3" box="-30 -30 0 30 30 48" model="models/items/g_h1.md3">
Small Health (default 5 health points)
-------- KEYS --------
<real key="respawntime" name="respawntime">time till it respawns (default: 15)</real>
<real key="respawntimejitter" name="respawntimejitter">respawn time randomization +/- seconds (default: 0)</real>
<real key="health" name="health">amount of health it gives (default: 5 (g_pickup_healthsmall))</real>
<real key="max_health" name="max_health">max of health it increases to (default: 5 (g_pickup_healthsmall_max))</real>
<integer key="team" name="team">out of items with the same value here, only one (random one) will spawn. Useful to put multiple items on one spot.</integer>
<real key="cnt" name="cnt">weight of this item for random selection using &quot;team&quot;. Set to a lower value for items you want to see less likely.</real>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
modeldisabled=&quot;models/items/g_h1.md3&quot;
</point>

<point name="item_invincible" color=".3 .3 1" box="-30 -30 0 30 30 48" model="models/items/g_invincible.md3">
Strong Shield
In Minstagib, this randomly turns into either an invisibility, an extra lives or a speed power-up with a default respawn time of 120.
-------- KEYS --------
<real key="respawntime" name="respawntime">time till it respawns (default: 120)</real>
<real key="respawntimejitter" name="respawntimejitter">respawn time randomization +/- seconds (default: 0)</real>
<integer key="team" name="team">out of items with the same value here, only one (random one) will spawn. Useful to put multiple items on one spot.</integer>
<real key="cnt" name="cnt">weight of this item for random selection using &quot;team&quot;. Set to a lower value for items you want to see less likely.</real>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
modeldisabled=&quot;models/items/g_invincible.md3&quot;
</point>

<point name="item_key" color="0 .5 .8" box="-16 -16 -24 16 16 32">
A key entity.
The itemkeys should contain one of the following key IDs:
1 - GOLD key - 
2 - SILVER key
4 - BRONZE key
8 - RED keycard
16 - BLUE keycard
32 - GREEN keycard
Custom keys:
... - last key is 1&lt;&lt;23
Keys with bigger Id than 32 don't have a default netname and model, if you use one of them, you MUST provide those.
-----------KEYS------------
<color key="colormod" name="colormod">color of the key (default: '.9 .9 .9').</color>
<real key="itemkeys" name="itemkeys">a key Id.</real>
<string key="message" name="message">message to print when player picks up this key.</string>
<model key="model" name="model">custom key model to use.</model>
<string key="netname" name="netname">the display name of the key.</string>
<sound key="noise" name="noise">custom sound to play when player picks up the key.</sound>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>
---------NOTES----------
This is the only correct way to put keys on the map!

itemkeys MUST always have exactly one bit set.
</point>

<point name="item_key1" color="0 .5 .8" box="-16 -16 -24 16 16 32">
SILVER key.
-----------KEYS------------
<color key="colormod" name="colormod">color of the key (default: '.9 .9 .9').</color>
<string key="message" name="message">message to print when player picks up this key.</string>
<model key="model" name="model">custom model to use.</model>
<sound key="noise" name="noise">custom sound to play when player picks up the key.</sound>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>
---------NOTES----------
Don't use this entity on new maps! Use item_key instead.
</point>

<point name="item_key2" color="0 .5 .8" box="-16 -16 -24 16 16 32">
GOLD key.
-----------KEYS------------
<color key="colormod" name="colormod">color of the key (default: '1 .9 0').</color>
<string key="message" name="message">message to print when player picks up this key.</string>
<model key="model" name="model">custom model to use.</model>
<sound key="noise" name="noise">custom sound to play when player picks up the key.</sound>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>
---------NOTES----------
Don't use this entity on new maps! Use item_key instead.
</point>

<point name="item_minst_cells" color=".3 .3 1" box="-30 -30 0 30 30 32" model="models/items/a_cells.md3">
Minstagib ammo.
Always contains 5 (g_minstagib_ammo_drop) shots.
It only appears when playing Minstagib and prevents auto-replacement of weapon_nex &amp; weapon_rocketlauncher when used.
-------- KEYS --------
<real key="respawntime" name="respawntime">time till it respawns (default: 45)</real>
<real key="respawntimejitter" name="respawntimejitter">respawn time randomization +/- seconds (default: 0)</real>
<integer key="team" name="team">out of items with the same value here, only one (random one) will spawn. Useful to put multiple items on one spot.</integer>
<real key="cnt" name="cnt">weight of this item for random selection using &quot;team&quot;. Set to a lower value for items you want to see less likely.</real>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
modeldisabled=&quot;models/items/a_cells.md3&quot;
</point>

<point name="item_rockets" color=".3 .3 1" box="-30 -30 0 30 30 32" model="models/items/a_rockets.md3">
Rocket Launcher, Hagar and Mortar ammo
-------- KEYS --------
<real key="ammo_rockets" name="ammo_rockets">rockets gained by this item (if unset, g_pickup_rockets is used)</real>
<real key="respawntime" name="respawntime">time till it respawns (default: 15)</real>
<real key="respawntimejitter" name="respawntimejitter">respawn time randomization +/- seconds (default: 0)</real>
<integer key="team" name="team">out of items with the same value here, only one (random one) will spawn. Useful to put multiple items on one spot.</integer>
<real key="cnt" name="cnt">weight of this item for random selection using &quot;team&quot;. Set to a lower value for items you want to see less likely.</real>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
modeldisabled=&quot;models/items/a_rockets.md3&quot;
</point>

<point name="item_shells" color=".3 .3 1" box="-30 -30 0 30 30 32" model="models/items/a_shells.md3">
Shotgun ammo
-------- KEYS --------
<real key="ammo_shells" name="ammo_shells">shells gained by this item (if unset, g_pickup_shells is used)</real>
<real key="respawntime" name="respawntime">time till it respawns (default: 15)</real>
<real key="respawntimejitter" name="respawntimejitter">respawn time randomization +/- seconds (default: 0)</real>
<integer key="team" name="team">out of items with the same value here, only one (random one) will spawn. Useful to put multiple items on one spot.</integer>
<real key="cnt" name="cnt">weight of this item for random selection using &quot;team&quot;. Set to a lower value for items you want to see less likely.</real>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
modeldisabled=&quot;models/items/a_shells.md3&quot;
</point>

<point name="item_strength" color=".3 .3 1" box="-30 -30 0 30 30 48" model="models/items/g_strength.md3">
Strength aka Quad damage
In Minstagib, this randomly turns into either an invisibility, an extra lives or a speed power-up with a default respawn time of 120.
-------- KEYS --------
<real key="respawntime" name="respawntime">time till it respawns (default: 120)</real>
<real key="respawntimejitter" name="respawntimejitter">respawn time randomization +/- seconds (default: 0)</real>
<integer key="team" name="team">out of items with the same value here, only one (random one) will spawn. Useful to put multiple items on one spot.</integer>
<real key="cnt" name="cnt">weight of this item for random selection using &quot;team&quot;. Set to a lower value for items you want to see less likely.</real>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
modeldisabled=&quot;models/items/g_strength.md3&quot;
</point>

<point name="light" color=".65 .65 1" box="-8 -8 -8 8 8 8">
Non-displayed point light source. The -pointscale and -scale arguments to Q3Map2 affect the brightness of these lights. The -skyscale argument affects brightness of entity sun lights.
Maximum intensity (in a radius 16 sphere around the light): regular lights have light/256, linear lights have light/8000-16*fade.
Falloff radius to a negligible light amount: regular lights have light have 16*sqrt(light), linear lights have light/(fade*8000).
By this you see that you HAVE to specify fade for a linear light... use values below 0.01 there.
-------- KEYS --------
<real key="light" name="light">intensity factor (default: 300). A linear</real>
<color key="_color" name="_color">weighted RGB value of light color (default white - 1.0 1.0 1.0).</color>
<target key="target" name="target">Lights pointed at a target will be spotlights.</target>
<real key="radius" name="radius">radius of a spotlight at the target point (default: 64)</real>
<real key="_anglescale" name="_anglescale">scales angle attenuation</real>
<real key="fade" name="fade">Fade factor of light attenuation of linear lights. Linear lights completely vanish at distance light/(fade*8000), so if you want the light to vanish at distance X, specify light/(8000*X) here.</real>
<real key="_filterradius" name="_filterradius">filter radius for this light, similar to -light -filter</real>
<boolean key="_sun" name="_sun">if 1, this light is an infinite sun light</boolean>
<integer key="_samples" name="_samples">number of samples to use to get soft shadows from a light</integer>
<real key="_deviance" name="_deviance">position deviance of the samples of a regular light (distributes the light samples in a cube of side length 2*_deviance around the origin), or angle deviance of the sun light samples in radians</real>
-------- SPAWNFLAGS --------
<flag key="LINEAR" name="LINEAR" bit="0">Use a linear falloff. Default is inverse distance squared (more realistic).</flag>
<flag key="NOANGLE" name="NOANGLE" bit="1">Ignore angle attenuation.</flag>
<flag key="NOGRIDLIGHT" name="NOGRIDLIGHT" bit="4">Do not affect the light grid (dynamic entity lighting).</flag>
</point>

<point name="lightJunior" color=".65 .65 1" box="-8 -8 -8 8 8 8">
Non-displayed point light source that JUST APPLIES TO THE LIGHT GRID. No idea what this is good for. The -pointscale and -scale arguments to Q3Map2 affect the brightness of these lights. The -skyscale argument affects brightness of entity sun lights.
Maximum intensity (in a radius 16 sphere around the light): regular lights have light/256, linear lights have light/8000-16*fade.
Falloff radius to a negligible light amount: regular lights have light have 16*sqrt(light), linear lights have light/(fade*8000).
By this you see that you HAVE to specify fade for a linear light... use values below 0.01 there.
-------- KEYS --------
<real key="light" name="light">intensity factor (default: 300). A linear</real>
<color key="_color" name="_color">weighted RGB value of light color (default white - 1.0 1.0 1.0).</color>
<target key="target" name="target">Lights pointed at a target will be spotlights.</target>
<real key="radius" name="radius">radius of a spotlight at the target point (default: 64)</real>
<real key="_anglescale" name="_anglescale">scales angle attenuation</real>
<real key="fade" name="fade">Fade factor of light attenuation of linear lights. Linear lights completely vanish at distance light/(fade*8000), so if you want the light to vanish at distance X, specify light/(8000*X) here.</real>
<real key="_filterradius" name="_filterradius">filter radius for this light, similar to -light -filter</real>
<boolean key="_sun" name="_sun">if 1, this light is an infinite sun light</boolean>
<integer key="_samples" name="_samples">number of samples to use to get soft shadows from a light</integer>
<real key="_deviance" name="_deviance">position deviance of the samples of a regular light (distributes the light samples in a cube of side length 2*_deviance around the origin), or angle deviance of the sun light samples in radians</real>
-------- SPAWNFLAGS --------
<flag key="LINEAR" name="LINEAR" bit="0">Use a linear falloff. Default is inverse distance squared (more realistic).</flag>
<flag key="NOANGLE" name="NOANGLE" bit="1">Ignore angle attenuation.</flag>
</point>

<point name="misc_laser" color=".5 .5 .5" box="-8 -8 -8 8 8 8">
Laser beam emitter. Note that for the laser to be deadly, it has to start OUTSIDE the player's collision box. To ensure this, you may want to put this entity inside the walls (or directly on their surface), or cover it with a playerclip brush.
-------- KEYS --------
<target key="target" name="target">target_position the laser targets (may be another entity, preferably target_position, possibly controlled by misc_follow)</target>
<string key="mdl" name="mdl">name of particle effect for the beam end point (see effectinfo.txt; default is laser_deadly if dmg is set, and none if not)</string>
<color key="colormod" name="colormod">color of the laser beam (default: red, that is, 1 0 0)</color>
<real key="dmg" name="dmg">damage inflicted by the beam per second, or -1 for an instant-death ray</real>
<targetname key="targetname" name="targetname">name to target this (then its state is toggled)</targetname>
<real key="alpha" name="alpha">when set, makes a dark laser of the given strength; may be combined with colormod</real>
<real key="scale" name="scale">scales the beam thickness (default 1)</real>
<real key="modelscale" name="modelscale">scales the dynamic light radius at the endpoint (default 1, -1 to turn off)</real>
<integer key="team" name="team">team that gets hurt (5 = red, 14 = blue, etc) (when set, only this team can get hurt)</integer>
-------- SPAWNFLAGS --------
<flag key="START_ON" name="START_ON" bit="0">when targeted, the laser will start switched on</flag>
<flag key="FINITE" name="FINITE" bit="1">the laser does not extend over its target like light would do, but stops there (takes more bandwidth)</flag>
<flag key="NOTRACE" name="NOTRACE" bit="2">the laser passes through solid (faster rendering on clientside); non-FINITE lasers then never display their impact effect &quot;mdl&quot;!</flag>
<flag key="INVERT_TEAM" name="INVERT_TEAM" bit="3">the team that owns this will NOT get hurt</flag>
-------- NOTES --------
Use trigger_monoflop if you want the laser to turn off for a while, then turn back on.
When the laser's target has itself target set, its targets are triggered when someone enters or leaves the laser.
</point>

<point name="misc_model" color="1 .5 .25" box="-16 -16 -16 16 16 16" model="model">
Generic placeholder for inserting MD3 models in game. Requires compilation of map geometry to be added to level. If the map is compiled with Q3Map2, then ASE, 3DS, OBJ and other model formats are supported.
-------- Q3MAP2 KEYS --------
<model key="model" name="model">file name of model to include</model>
<integer key="_frame" name="_frame">frame of model to include</integer>
<integer key="_skin" name="_skin">skin of model to include</integer>
<array key="_remap" name="_remap">string of the form from;to specifying which texture name of the model to replace by which shader; * is allowed. Any key starting with this prefix will work, so if you need more remappings, create _remap2, etc.</array>
<direction key="angle" name="angle">view direction of the model</direction>
<angles key="angles" name="angles">view direction of the model in PITCH YAW ROLL</angles>
<real key="modelscale" name="modelscale">scaling factor</real>
<real3 key="modelscale_vec" name="modelscale_vec">scaling vector for non-uniform scaling</real3>
<boolean key="_castshadows" name="_castshadows">Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. &gt; 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.</boolean>
<boolean key="_receiveshadows" name="_receiveshadows">Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. &gt; 1 = receive shadows only from corresponding keyed entities (see above) and world. &lt; 1 = receive shadows ONLY from corresponding keyed entities.</boolean>
<real key="_lightmapscale" name="_lightmapscale">light map resolution factor</real>
<texture key="_celshader" name="_celshader">the cel shader for this</texture>
-------- SPAWNFLAGS --------
<flag key="SOLID" name="SOLID" bit="1">make the model solid</flag>
<flag key="FORCE_META" name="FORCE_META" bit="2">force the model to go through the -meta pipeline and enable lightmapping</flag>
<flag key="EXTRUDE_NORMALS" name="EXTRUDE_NORMALS" bit="3">for converting triangles to clip brushes, extrude along the model normals (by default, extrusion happens in a coordinate axis direction that is decided per triangle)</flag>
<flag key="EXTRUDE_TERRAIN" name="EXTRUDE_TERRAIN" bit="4">always extrude downwards (for terrain)</flag>
<flag key="COLOR_TO_ALPHA" name="COLOR_TO_ALPHA" bit="5">use the color value as alpha (for terrain blending)</flag>
<flag key="DONT_FIX_NORMALS" name="DONT_FIX_NORMALS" bit="6">do not regenerate normals</flag>
</point>

<point name="misc_gamemodel" color="0 .5 .8" box="-8 -8 -8 8 8 8" model="model">
A way to load models from a map by the engine (e.g. self-animated zym models).
Is non-solid by default.
The keys below actually apply to most engine-loaded model entities as they are engine features; however, they are described here as they aren't overridden by game code in misc_gamemodel. Its q3map2 keys below will work on any brush entity!
-------- KEYS --------
<model key="model" name="model">when used as a point entity, file name of model to load; when used as a brush entity, do not specify that</model>
<real key="frame" name="frame">animation frame to play (for self-animated zym models)</real>
<real key="skin" name="skin">number of skin to load (when model is used)</real>
<real key="movetype" name="movetype">way in which it moves: one of 0 = NONE, 1 = ANGLENOCLIP, 2 = ANGLECLIP, 3 = WALK, 4 = STEP, 5 = FLY, 6 = TOSS, 7 = PUSH, 8 = NOCLIP, 9 = FLYMISSILE, 10 = BOUNCE, 11 = BOUNCEMISSILE</real>
<real key="solid" name="solid">solidity: one of 0 = NOT, 1 = TRIGGER, 2 = BBOX, 3 = SLIDEBOX, 4 = BSP, 5 = CORPSE</real>
<real3 key="avelocity" name="avelocity">vector giving its angular velocity (useful for spinning models)</real3>
<real key="scale" name="scale">scale factor of the model (range: 0.0625 to 15.9375)</real>
<real key="colormap" name="colormap">1024 + 16 * pantscolor + shirtcolor</real>
<real3 key="velocity" name="velocity">when movetype isn't 0, initial velocity vector</real3>
<angles key="angles" name="angles">initial looking direction</angles>
<real key="modelscale" name="modelscale">scaling factor</real>
<real key="effects" name="effects">sum of 1 = BRIGHTFIELD, 4 = BRIGHTLIGHT, 8 = DIMLIGHT, 32 = ADDITIVE, 64 = BLUE, 128 = RED, 512 = FULLBRIGHT, 1024 = FLAME, 2048 = STARDUST, 4096 = NOSHADOW, 8192 = NODEPTHTEST, 32768 = DOUBLESIDED, 8388608 = NOMODELFLAGS (ignores the following coming from a model file), 16777216 = ROCKET, 33554432 = GRENADE, 67108864 = GIB, 134217728 = ROTATE, 268435456 = TRACER, 536870912 = ZOMGIB, 1073741824 = TRACER2, -2147483648 = TRACER3</real>
<real key="loddistance1" name="loddistance1">distance after which to show the first LOD model replacement (default: 1000)</real>
<real key="loddistance2" name="loddistance2">distance after which to show the second LOD model replacement (default: 2000)</real>
<string key="lodmodel1" name="lodmodel1">file name of the first LOD model replacement</string>
<string key="lodmodel2" name="lodmodel2">file name of the second LOD model replacement</string>
<targetname key="targetname" name="targetname">when invoking it by a button etc., it changes the color to the initiator of the action (e.g. the one pressing a button). In Onslaught, this can be used to color control points for team who owns them. In other game types, this can be used as a fun feature.</targetname>
<real3 key="originjitter" name="originjitter">a vector describing a random offset this entity will be moved on initial spawn. This corresponds to the &quot;origin&quot; field. Works on any non-q3map2-only entity.</real3>
<real3 key="anglesjitter" name="anglesjitter">a vector in the order &quot;pitch yaw roll&quot; describing a random angles change on this entity on initial spawn. The value 180 180 180 makes the angles entirely random and uniformly distributed (among euler angles). This corresponds to the &quot;angles&quot; field. Works on any non-q3map2-only entity.</real3>
<real key="anglejitter" name="anglejitter">a float describing a random yaw angle change on this entity on initial spawn. The value 180 makes the yaw angle entirely random (maybe good for items). This corresponds to the &quot;angle&quot; field. Works on any non-q3map2-only entity.</real>
<string key="gametypefilter" name="gametypefilter">either a + sign and a comma separated list of game types or the aliases &quot;teams&quot; and &quot;noteams&quot; to ONLY show the entity in the listed game types, or a - sign and a comma separated list of game types or the aliases &quot;teams&quot; and &quot;noteams&quot; to NOT show the entity in the listed game types. The syntax is the same as in sbar_columns_set strings. Works on any non-q3map2-only entity.</string>
<string key="cvarfilter" name="cvarfilter">either a + sign and a space separated list of conditions, or a - sign and the same for an inverted filter. The conditions are ALWAYS combined with AND! Possible conditions are: &quot;cvar==value&quot;, &quot;cvar!=value&quot;, &quot;cvar&lt;value&quot;, &quot;cvar&gt;value&quot;, &quot;cvar&lt;=value&quot;, &quot;cvar&gt;=value&quot;, &quot;cvar===string&quot;, &quot;cvar!==string&quot;, &quot;cvar&quot;, &quot;!cvar&quot;. Ridiculous example filter: &quot;-g_balance_health_start&lt;150 g_balance_armor_start==0&quot; spawns an item only if start health is at least 150 or start armor is not 0. Other ideas: &quot;+g_campaign&quot; and &quot;-g_campaign&quot; for enabling/disabling items when the map is played as part of the campaign.</string>
-------- SPAWNFLAGS --------
<flag key="ALIGN_ORIGIN" name="ALIGN_ORIGIN" bit="0">align the origin to the surface below the model</flag>
<flag key="ALIGN_BOTTOM" name="ALIGN_BOTTOM" bit="1">align the bottom of the model to the surface below it</flag>
</point>

<group name="func_illusionary" color="0 .5 .8">
NOTE - THIS ENTITY IS BROKEN REGARDING CLIENT AND PROJECTILE PREDICTION. DO NOT USE IT. USE NONSOLID SHADERS OR FUNC_CLIENTILLUSIONARY INSTEAD.
A non-solid brush entity. Use func_wall if you want it solid.
The keys below actually apply to most brush entities as they are engine features; however, they are described here as they aren't overridden by game code in misc_models. Its q3map2 keys below will work on any brush entity!
-------- KEYS --------
<real key="movetype" name="movetype">way in which it moves: one of 0 = NONE, 1 = ANGLENOCLIP, 2 = ANGLECLIP, 3 = WALK, 4 = STEP, 5 = FLY, 6 = TOSS, 7 = PUSH, 8 = NOCLIP, 9 = FLYMISSILE, 10 = BOUNCE, 11 = BOUNCEMISSILE</real>
<real3 key="avelocity" name="avelocity">vector giving its angular velocity (useful for spinning models)</real3>
<real key="scale" name="scale">scale factor of the model (range: 0.0625 to 15.9375)</real>
<real key="colormap" name="colormap">1024 + 16 * pantscolor + shirtcolor</real>
<real3 key="velocity" name="velocity">when movetype isn't 0, initial velocity vector</real3>
<angles key="angles" name="angles">initial looking direction</angles>
<real key="effects" name="effects">sum of 1 = BRIGHTFIELD, 4 = BRIGHTLIGHT, 8 = DIMLIGHT, 32 = ADDITIVE, 64 = BLUE, 128 = RED, 512 = FULLBRIGHT, 1024 = FLAME, 2048 = STARDUST, 4096 = NOSHADOW, 8192 = NODEPTHTEST, 32768 = DOUBLESIDED, 8388608 = NOMODELFLAGS (ignores the following coming from a model file), 16777216 = ROCKET, 33554432 = GRENADE, 67108864 = GIB, 134217728 = ROTATE, 268435456 = TRACER, 536870912 = ZOMGIB, 1073741824 = TRACER2, -2147483648 = TRACER3</real>
<real key="loddistance1" name="loddistance1">distance after which to show the first LOD model replacement (default: 1000)</real>
<real key="loddistance2" name="loddistance2">distance after which to show the second LOD model replacement (default: 2000)</real>
<string key="lodtarget1" name="lodtarget1">targetname of the first LOD model entity (can be used instead of lodmodel1 to use a brush model instead)</string>
<string key="lodtarget2" name="lodtarget2">targetname of the second LOD model entity (can be used instead of lodmodel2 to use a brush model instead)</string>
<targetname key="targetname" name="targetname">when invoking it by a button etc., it changes the color to the initiator of the action (e.g. the one pressing a button). In Onslaught, this can be used to color control points for team who owns them. In other game types, this can be used as a fun feature. Works only with _shirt and _pants textures.</targetname>
<real3 key="originjitter" name="originjitter">a vector describing a random offset this entity will be moved on initial spawn. This corresponds to the &quot;origin&quot; field. Works on any non-q3map2-only entity.</real3>
<real3 key="anglesjitter" name="anglesjitter">a vector in the order &quot;pitch yaw roll&quot; describing a random angles change on this entity on initial spawn. The value 180 180 180 makes the angles entirely random and uniformly distributed (among euler angles). This corresponds to the &quot;angles&quot; field. Works on any non-q3map2-only entity.</real3>
<real key="anglejitter" name="anglejitter">a float describing a random yaw angle change on this entity on initial spawn. The value 180 makes the yaw angle entirely random (maybe good for items). This corresponds to the &quot;angle&quot; field. Works on any non-q3map2-only entity.</real>
<string key="gametypefilter" name="gametypefilter">either a + sign and a comma separated list of game types or the aliases &quot;teams&quot; and &quot;noteams&quot; to ONLY show the entity in the listed game types, or a - sign and a comma separated list of game types or the aliases &quot;teams&quot; and &quot;noteams&quot; to NOT show the entity in the listed game types. The syntax is the same as in sbar_columns_set strings. Works on any non-q3map2-only entity.</string>
-------- Q3MAP2 KEYS --------
<boolean key="_castshadows" name="_castshadows">Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. &gt; 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.</boolean>
<boolean key="_receiveshadows" name="_receiveshadows">Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. &gt; 1 = receive shadows only from corresponding keyed entities (see above) and world. &lt; 1 = receive shadows ONLY from corresponding keyed entities.</boolean>
<target key="_clone" name="_clone">copies brushes from entity with identical _clonename. Still needs a single brush that will get replaced.</target>
<targetname key="_clonename" name="_clonename">template name so one can clone from it</targetname>
<real3 key="mins" name="mins">override automatically found minimum coordinate bounds</real3>
<real3 key="maxs" name="maxs">override automatically found maximum coordinate bounds</real3>
<texture key="_celshader" name="_celshader">Sets the cel shader used for this geometry. Note: omit the &quot;textures/&quot; prefix.</texture>
</group>

<group name="func_wall" color="0 .5 .8">
A solid brush entity. Use func_clientillusionary if you want it non-solid.
The keys below actually apply to most brush entities as they are engine features; however, they are described here as they aren't overridden by game code in misc_models. Its q3map2 keys below will work on any brush entity!
-------- KEYS --------
<real key="movetype" name="movetype">way in which it moves: one of 0 = NONE, 1 = ANGLENOCLIP, 2 = ANGLECLIP, 3 = WALK, 4 = STEP, 5 = FLY, 6 = TOSS, 7 = PUSH, 8 = NOCLIP, 9 = FLYMISSILE, 10 = BOUNCE, 11 = BOUNCEMISSILE</real>
<real key="solid" name="solid">solidity: one of 1 = TRIGGER, 2 = BBOX, 3 = SLIDEBOX, 4 = BSP, 5 = CORPSE (default: 4, any other value causes prediction problems and should not be used until further notice)</real>
<real3 key="avelocity" name="avelocity">vector giving its angular velocity (useful for spinning models)</real3>
<real key="scale" name="scale">scale factor of the model (range: 0.0625 to 15.9375)</real>
<real key="colormap" name="colormap">1024 + 16 * pantscolor + shirtcolor</real>
<real3 key="velocity" name="velocity">when movetype isn't 0, initial velocity vector</real3>
<angles key="angles" name="angles">initial looking direction</angles>
<real key="effects" name="effects">sum of 1 = BRIGHTFIELD, 4 = BRIGHTLIGHT, 8 = DIMLIGHT, 32 = ADDITIVE, 64 = BLUE, 128 = RED, 512 = FULLBRIGHT, 1024 = FLAME, 2048 = STARDUST, 4096 = NOSHADOW, 8192 = NODEPTHTEST, 32768 = DOUBLESIDED, 8388608 = NOMODELFLAGS (ignores the following coming from a model file), 16777216 = ROCKET, 33554432 = GRENADE, 67108864 = GIB, 134217728 = ROTATE, 268435456 = TRACER, 536870912 = ZOMGIB, 1073741824 = TRACER2, -2147483648 = TRACER3</real>
<real key="loddistance1" name="loddistance1">distance after which to show the first LOD model replacement (default: 1000)</real>
<real key="loddistance2" name="loddistance2">distance after which to show the second LOD model replacement (default: 2000)</real>
<string key="lodtarget1" name="lodtarget1">targetname of the first LOD model entity (can be used instead of lodmodel1 to use a brush model instead)</string>
<string key="lodtarget2" name="lodtarget2">targetname of the second LOD model entity (can be used instead of lodmodel2 to use a brush model instead)</string>
<targetname key="targetname" name="targetname">when invoking it by a button etc., it changes the color to the initiator of the action (e.g. the one pressing a button). In Onslaught, this can be used to color control points for team who owns them. In other game types, this can be used as a fun feature. Works only with _shirt and _pants textures.</targetname>
<real3 key="originjitter" name="originjitter">a vector describing a random offset this entity will be moved on initial spawn. This corresponds to the &quot;origin&quot; field. Works on any non-q3map2-only entity.</real3>
<real3 key="anglesjitter" name="anglesjitter">a vector in the order &quot;pitch yaw roll&quot; describing a random angles change on this entity on initial spawn. The value 180 180 180 makes the angles entirely random and uniformly distributed (among euler angles). This corresponds to the &quot;angles&quot; field. Works on any non-q3map2-only entity.</real3>
<real key="anglejitter" name="anglejitter">a float describing a random yaw angle change on this entity on initial spawn. The value 180 makes the yaw angle entirely random (maybe good for items). This corresponds to the &quot;angle&quot; field. Works on any non-q3map2-only entity.</real>
<string key="gametypefilter" name="gametypefilter">either a + sign and a comma separated list of game types or the aliases &quot;teams&quot; and &quot;noteams&quot; to ONLY show the entity in the listed game types, or a - sign and a comma separated list of game types or the aliases &quot;teams&quot; and &quot;noteams&quot; to NOT show the entity in the listed game types. The syntax is the same as in sbar_columns_set strings. Works on any non-q3map2-only entity.</string>
-------- Q3MAP2 KEYS --------
<boolean key="_castshadows" name="_castshadows">Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. &gt; 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.</boolean>
<boolean key="_receiveshadows" name="_receiveshadows">Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. &gt; 1 = receive shadows only from corresponding keyed entities (see above) and world. &lt; 1 = receive shadows ONLY from corresponding keyed entities.</boolean>
<target key="_clone" name="_clone">copies brushes from entity with identical _clonename. Still needs a single brush that will get replaced.</target>
<targetname key="_clonename" name="_clonename">template name so one can clone from it</targetname>
<real3 key="mins" name="mins">override automatically found minimum coordinate bounds</real3>
<real3 key="maxs" name="maxs">override automatically found maximum coordinate bounds</real3>
<texture key="_celshader" name="_celshader">Sets the cel shader used for this geometry. Note: omit the &quot;textures/&quot; prefix.</texture>
</group>

<point name="misc_clientmodel" color="0 .5 .8" box="-8 -8 -8 8 8 8">
A way to load models from a map by the engine (e.g. self-animated zym models) on client side.
Is non-solid by default.
-------- KEYS --------
<real key="scale" name="scale">scale factor of the model (range: 0.0625 to 15.9375)</real>
<real key="colormap" name="colormap">1024 + 16 * pantscolor + shirtcolor</real>
<angles key="angles" name="angles">initial looking direction</angles>
<targetname key="targetname" name="targetname">when invoking it by a button etc., it changes the color to the initiator of the action (e.g. the one pressing a button). In Onslaught, this can be used to color control points for team who owns them. In other game types, this can be used as a fun feature. Works only with _shirt and _pants textures.</targetname>
<string key="bgmscript" name="bgmscript">emitter class from the BGM script (if prefixed with &lt;, movedir is treated as an angle value)</string>
<real key="bgmscriptattack" name="bgmscriptattack">attack time of the effect strength (0 to 3.9)</real>
<real key="bgmscriptdecay" name="bgmscriptdecay">decay time of the effect strength (0 to 3.9)</real>
<real key="bgmscriptsustain" name="bgmscriptsustain">sustain level of the effect strength (0.1 to 1, set to -1 to disable sustain)</real>
<real key="bgmscriptrelease" name="bgmscriptrelease">release time of the effect strength (0 to 3.9)</real>
<real3 key="movedir" name="movedir">vector by which the entity moves when &quot;pressed&quot; by the bgmscript</real3>
<real key="lip" name="lip">alpha change when &quot;pressed&quot; by the bgmscript (if &gt; 0, it fades in when pressed, if &lt; 0, it fades out when pressed)</real>
<real3 key="originjitter" name="originjitter">a vector describing a random offset this entity will be moved on initial spawn. This corresponds to the &quot;origin&quot; field. Works on any non-q3map2-only entity.</real3>
<real3 key="anglesjitter" name="anglesjitter">a vector in the order &quot;pitch yaw roll&quot; describing a random angles change on this entity on initial spawn. The value 180 180 180 makes the angles entirely random and uniformly distributed (among euler angles). This corresponds to the &quot;angles&quot; field. Works on any non-q3map2-only entity.</real3>
<real key="anglejitter" name="anglejitter">a float describing a random yaw angle change on this entity on initial spawn. The value 180 makes the yaw angle entirely random (maybe good for items). This corresponds to the &quot;angle&quot; field. Works on any non-q3map2-only entity.</real>
<string key="gametypefilter" name="gametypefilter">either a + sign and a comma separated list of game types or the aliases &quot;teams&quot; and &quot;noteams&quot; to ONLY show the entity in the listed game types, or a - sign and a comma separated list of game types or the aliases &quot;teams&quot; and &quot;noteams&quot; to NOT show the entity in the listed game types. The syntax is the same as in sbar_columns_set strings. Works on any non-q3map2-only entity.</string>
-------- SPAWNFLAGS --------
<flag key="ALIGN_ORIGIN" name="ALIGN_ORIGIN" bit="0">align the origin to the surface below the model</flag>
<flag key="ALIGN_BOTTOM" name="ALIGN_BOTTOM" bit="1">align the bottom of the model to the surface below it</flag>
</point>

<group name="func_clientillusionary" color="0 .5 .8">
A client-side non-solid brush entity. Use func_wall if you want it solid.
-------- KEYS --------
<real key="scale" name="scale">scale factor of the model (range: 0.0625 to 15.9375)</real>
<real key="colormap" name="colormap">1024 + 16 * pantscolor + shirtcolor</real>
<angles key="angles" name="angles">initial looking direction</angles>
<targetname key="targetname" name="targetname">when invoking it by a button etc., it changes the color to the initiator of the action (e.g. the one pressing a button). In Onslaught, this can be used to color control points for team who owns them. In other game types, this can be used as a fun feature. Works only with _shirt and _pants textures.</targetname>
<string key="bgmscript" name="bgmscript">emitter class from the BGM script</string>
<real key="bgmscriptattack" name="bgmscriptattack">attack time of the effect strength (0 to 3.9)</real>
<real key="bgmscriptdecay" name="bgmscriptdecay">decay time of the effect strength (0 to 3.9)</real>
<real key="bgmscriptsustain" name="bgmscriptsustain">sustain level of the effect strength (0.1 to 1, set to -1 to disable sustain)</real>
<real key="bgmscriptrelease" name="bgmscriptrelease">release time of the effect strength (0 to 3.9)</real>
<real3 key="movedir" name="movedir">vector by which the entity moves when &quot;pressed&quot; by the bgmscript</real3>
<real key="lip" name="lip">alpha change when &quot;pressed&quot; by the bgmscript (if &gt; 0, it fades in when pressed, if &lt; 0, it fades out when pressed)</real>
<real3 key="originjitter" name="originjitter">a vector describing a random offset this entity will be moved on initial spawn. This corresponds to the &quot;origin&quot; field. Works on any non-q3map2-only entity.</real3>
<real3 key="anglesjitter" name="anglesjitter">a vector in the order &quot;pitch yaw roll&quot; describing a random angles change on this entity on initial spawn. The value 180 180 180 makes the angles entirely random and uniformly distributed (among euler angles). This corresponds to the &quot;angles&quot; field. Works on any non-q3map2-only entity.</real3>
<real key="anglejitter" name="anglejitter">a float describing a random yaw angle change on this entity on initial spawn. The value 180 makes the yaw angle entirely random (maybe good for items). This corresponds to the &quot;angle&quot; field. Works on any non-q3map2-only entity.</real>
<string key="gametypefilter" name="gametypefilter">either a + sign and a comma separated list of game types or the aliases &quot;teams&quot; and &quot;noteams&quot; to ONLY show the entity in the listed game types, or a - sign and a comma separated list of game types or the aliases &quot;teams&quot; and &quot;noteams&quot; to NOT show the entity in the listed game types. The syntax is the same as in sbar_columns_set strings. Works on any non-q3map2-only entity.</string>
-------- Q3MAP2 KEYS --------
<boolean key="_castshadows" name="_castshadows">Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. &gt; 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.</boolean>
<boolean key="_receiveshadows" name="_receiveshadows">Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. &gt; 1 = receive shadows only from corresponding keyed entities (see above) and world. &lt; 1 = receive shadows ONLY from corresponding keyed entities.</boolean>
<target key="_clone" name="_clone">copies brushes from entity with identical _clonename. Still needs a single brush that will get replaced.</target>
<targetname key="_clonename" name="_clonename">template name so one can clone from it</targetname>
<real3 key="mins" name="mins">override automatically found minimum coordinate bounds</real3>
<real3 key="maxs" name="maxs">override automatically found maximum coordinate bounds</real3>
<texture key="_celshader" name="_celshader">Sets the cel shader used for this geometry. Note: omit the &quot;textures/&quot; prefix.</texture>
</group>

<group name="func_clientwall" color="0 .5 .8">
NOTE - THIS ENTITY IS IN MOST USE CASES BROKEN REGARDING CLIENT AND PROJECTILE PREDICTION. DO NOT USE IT. USE FUNC_WALL INSTEAD.
A client-side solid brush entity. Use func_clientillusionary if you want it non-solid.
-------- KEYS --------
<real key="solid" name="solid">solidity: one of 1 = TRIGGER, 2 = BBOX, 3 = SLIDEBOX, 4 = BSP, 5 = CORPSE (default: 4, any other value causes prediction problems and should not be used until further notice)</real>
<real key="scale" name="scale">scale factor of the model (range: 0.0625 to 15.9375)</real>
<real key="colormap" name="colormap">1024 + 16 * pantscolor + shirtcolor</real>
<angles key="angles" name="angles">initial looking direction</angles>
<targetname key="targetname" name="targetname">when invoking it by a button etc., it changes the color to the initiator of the action (e.g. the one pressing a button). In Onslaught, this can be used to color control points for team who owns them. In other game types, this can be used as a fun feature. Works only with _shirt and _pants textures.</targetname>
<string key="bgmscript" name="bgmscript">emitter class from the BGM script</string>
<real key="bgmscriptattack" name="bgmscriptattack">attack time of the effect strength (0 to 3.9)</real>
<real key="bgmscriptdecay" name="bgmscriptdecay">decay time of the effect strength (0 to 3.9)</real>
<real key="bgmscriptsustain" name="bgmscriptsustain">sustain level of the effect strength (0.1 to 1, set to -1 to disable sustain)</real>
<real key="bgmscriptrelease" name="bgmscriptrelease">release time of the effect strength (0 to 3.9)</real>
<real3 key="movedir" name="movedir">vector by which the entity moves when &quot;pressed&quot; by the bgmscript</real3>
<real key="lip" name="lip">alpha change when &quot;pressed&quot; by the bgmscript (if &gt; 0, it fades in when pressed, if &lt; 0, it fades out when pressed)</real>
<real3 key="originjitter" name="originjitter">a vector describing a random offset this entity will be moved on initial spawn. This corresponds to the &quot;origin&quot; field. Works on any non-q3map2-only entity.</real3>
<real3 key="anglesjitter" name="anglesjitter">a vector in the order &quot;pitch yaw roll&quot; describing a random angles change on this entity on initial spawn. The value 180 180 180 makes the angles entirely random and uniformly distributed (among euler angles). This corresponds to the &quot;angles&quot; field. Works on any non-q3map2-only entity.</real3>
<real key="anglejitter" name="anglejitter">a float describing a random yaw angle change on this entity on initial spawn. The value 180 makes the yaw angle entirely random (maybe good for items). This corresponds to the &quot;angle&quot; field. Works on any non-q3map2-only entity.</real>
<string key="gametypefilter" name="gametypefilter">either a + sign and a comma separated list of game types or the aliases &quot;teams&quot; and &quot;noteams&quot; to ONLY show the entity in the listed game types, or a - sign and a comma separated list of game types or the aliases &quot;teams&quot; and &quot;noteams&quot; to NOT show the entity in the listed game types. The syntax is the same as in sbar_columns_set strings. Works on any non-q3map2-only entity.</string>
-------- Q3MAP2 KEYS --------
<boolean key="_castshadows" name="_castshadows">Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. &gt; 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.</boolean>
<boolean key="_receiveshadows" name="_receiveshadows">Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. &gt; 1 = receive shadows only from corresponding keyed entities (see above) and world. &lt; 1 = receive shadows ONLY from corresponding keyed entities.</boolean>
<target key="_clone" name="_clone">copies brushes from entity with identical _clonename. Still needs a single brush that will get replaced.</target>
<targetname key="_clonename" name="_clonename">template name so one can clone from it</targetname>
<real3 key="mins" name="mins">override automatically found minimum coordinate bounds</real3>
<real3 key="maxs" name="maxs">override automatically found maximum coordinate bounds</real3>
<texture key="_celshader" name="_celshader">Sets the cel shader used for this geometry. Note: omit the &quot;textures/&quot; prefix.</texture>
</group>

<point name="misc_teleporter_dest" color="1 .5 .25" box="-16 -16 -24 16 16 45">
Teleport destination location point for trigger_teleport entities. Do not let it touch the floor, but place it slightly higher (like, 16 units above) for better flow when jumping through it.
-------- KEYS --------
<targetname key="targetname" name="targetname">make the trigger_teleporter point to this.</targetname>
<target key="target" name="target">target to activate when a teleporter targeting this is used</target>
<target key="target2" name="target2">target to activate when a teleporter targeting this is used</target>
<target key="target3" name="target3">target to activate when a teleporter targeting this is used</target>
<target key="target4" name="target4">target to activate when a teleporter targeting this is used</target>
<boolean key="target_random" name="target_random">instead of triggering ALL matched entities, trigger ONE of them by random</boolean>
<direction key="angle" name="angle">direction in which player will look when teleported, OR use</direction>
<angles key="angles" name="angles">pitch and yaw when coming out of the teleporter (also specifies the direction the player will aim when coming out)</angles>
<real key="cnt" name="cnt">weight for random selection, in case a teleporter points at multiple misc_teleporter_dest</real>
<real key="speed" name="speed">maximum speed cap for the teleported player (if -1, teleported players will have no speed)</real>
</point>

<point name="onslaught_controlpoint" color="0 .5 .8" box="-32 -32 0 32 32 128">
Control point.  Be sure to give this enough clearance so that the shootable part has room to exist
This should link to an onslaught_controlpoint entity or onslaught_generator entity.
-------- KEYS --------
<targetname key="targetname" name="targetname">name that onslaught_link entities will use to target this.</targetname>
<target key="target" name="target">target any entities that are tied to this control point, such as vehicles and buildable structure entities.</target>
<string key="message" name="message">name of this control point (should reflect the location in the map, such as &quot;center bridge&quot;, &quot;north tower&quot;, etc)</string>
</point>

<point name="onslaught_generator" color="0 .5 .8" box="-52 -52 -14 52 52 75">
Base generator.

onslaught_link entities can target this.
-------- KEYS --------
<integer key="team" name="team">team that owns this generator (5 = red, 14 = blue, etc), MUST BE SET.</integer>
<targetname key="targetname" name="targetname">name that onslaught_link entities will use to target this.</targetname>
</point>

<point name="onslaught_link" color="0 .5 .8" box="-16 -16 -16 16 16 16">
Link between control points.

This entity targets two different onslaught_controlpoint or onslaught_generator entities, and suppresses shielding on both if they are owned by different teams.
-------- KEYS --------
<target key="target" name="target">first control point.</target>
<target key="target2" name="target2">second control point.</target>
</point>

<point name="path_corner" color=".5 .3 0" box="-8 -8 -8 8 8 8">
Path corner entity that func_train will follow.
All path_corner entities of a train have to connect in a circular manner, while the func_train shall point to one of the path_corners (ideally the one at the train's starting point)
-------- KEYS --------
<target key="target" name="target">point to next path_corner in the path.</target>
<target key="target2" name="target2">triggered when a func_train stops at this target</target>
<target key="target3" name="target3">triggered when a func_train stops at this target</target>
<target key="target4" name="target4">triggered when a func_train stops at this target</target>
<boolean key="target_random" name="target_random">instead of triggering ALL matched entities, trigger ONE of them by random</boolean>
<targetname key="targetname" name="targetname">the train following the path or the previous path_corner in the path points to this.</targetname>
<real key="speed" name="speed">speed of func_train while moving to this path corner. If unset, the value from the func_train will be used.</real>
<real key="wait" name="wait">number of seconds func_train will pause on this path corner before moving to next path corner (default: 0.1; to not wait, set this to -1</real>
</point>

<point name="runematch_spawn_point" color=".3 .3 1" box="-16 -16 -16 16 16 16">
Spawn point for runes in a runematch.
Runematch can work without runes also, it then spawn runes at random safe locations.
</point>

<point name="target_assault_roundend" color="1 0 0" box="-8 -8 -8 8 8 8">
This entity ends the current assault round if triggered or if the timelimit is reached.
Ending a round means swapping attacker/defender teams, resetting objectives and rewarding the winning team.
Every assault map needs this entity. There should only be one per map.
-------- KEYS --------
<targetname key="targetname" name="targetname">Name to target this entity</targetname>
</point>

<point name="target_assault_roundstart" color=".5 0 .5" box="-8 -8 -8 8 8 8">
This entity triggers its targets whenever a new assault round is started. This can be used to e.g. activate the first objective.
-------- KEYS --------
<target key="target" name="target">targetname of entities to be enabled/triggered on round start (e.g. the first target_objective)</target>
<target key="target2" name="target2">targetname of entities to be enabled/triggered on round start (e.g. the func_assault_destructibles targeting the target_objective)</target>
<target key="target3" name="target3">targetname of entities to be enabled/triggered on round start</target>
<target key="target4" name="target4">targetname of entities to be enabled/triggered on round start</target>
<boolean key="target_random" name="target_random">instead of triggering ALL matched entities, trigger ONE of them by random</boolean>
</point>

<point name="target_objective" color=".5 0 .5" box="-8 -8 -8 8 8 8">
target_objective controls an objective. Once triggered the objective is active and has 100 &quot;health&quot; points. If this &quot;health&quot; falls below zero it is assumed this objective has been fulfilled and entities targeted will be triggered (e.g. to activate the next objective or to end this round). Use target_objective_decrease to decrease the objective health.
-------- KEYS --------
<target key="target" name="target">targetname of entities to be enabled/triggered on objective fulfilling (e.g. the next target_objective, or target_assault_roundend)</target>
<target key="target2" name="target2">targetname of entities to be enabled/triggered on objective fulfilling (e.g. the func_assault_destructibles targeting the target_objective)</target>
<target key="target3" name="target3">targetname of entities to be enabled/triggered on objective fulfilling</target>
<target key="target4" name="target4">targetname of entities to be enabled/triggered on objective fulfilling</target>
<boolean key="target_random" name="target_random">instead of triggering ALL matched entities, trigger ONE of them by random</boolean>
<targetname key="targetname" name="targetname">targetname for this entity so it can be triggered by other entities.</targetname>
</point>

<point name="target_objective_decrease" color="0 1 0" box="-8 -8 -8 8 8 8">
When triggered decreases health of the targeted target_objective by the amount specified in dmg. Remember, target_objective has 100 health points and is considered conquered if health falls below zero.
If you want e.g. two events to happen to conquer an objective you'd need two target_objective_decrease, each with a value for cnt of e.g. 51. To show attackers and defenders where to go, target_objective_decrease will show a fitting sprite (&quot;Defend&quot; to defenders, &quot;Destroy&quot;/&quot;Push&quot; to attackers) which can be seen through walls.
-------- KEYS --------
<target key="target" name="target">The targetname of the target_objective you want to manipulate.</target>
<targetname key="targetname" name="targetname">Name for other entities to target this entity.</targetname>
<real key="dmg" name="dmg">The amount of &quot;health&quot;-points you want to subtract from the objective health. Defaults to 101. Also used as score for triggering this objective.</real>
</point>

<point name="target_position" color="0 .5 0" box="-8 -8 -8 8 8 8">
Aiming target for entities like light and trigger_push.
-------- KEYS --------
<targetname key="targetname" name="targetname">the entity that requires an aiming direction points to this.</targetname>
<target key="target" name="target">target to activate when a jumppad targeting this is used</target>
</point>

<point name="target_speaker" color="0 .7 .7" box="-8 -8 -8 8 8 8">
Sound generating entity that plays sound files.
If targeted, it plays the sound file every time when triggered.
If not targeted, it loops the sound file as an ambient noise.
The sound name may also be of the form *soundname, and in that case the respective player sound is played
-------- KEYS --------
<sound key="noise" name="noise">path/name of .wav/.ogg file to play</sound>
<targetname key="targetname" name="targetname">the activating button or trigger points to this.</targetname>
<real key="atten" name="atten">distance attenuation of the sound (a value from 0.1 to 3.9), default is 0.5 if targeted, 3 otherwise; set to -1 for no attenuation (global sound)</real>
<real key="volume" name="volume">volume of the sound</real>
-------- SPAWNFLAGS --------
<flag key="LOOPED_ON" name="LOOPED_ON" bit="0">the sound is looped and initially plays (the sound file MUST have the LOOP_START vorbis comment then!). It can be toggled by a trigger.</flag>
<flag key="LOOPED_OFF" name="LOOPED_OFF" bit="1">the sound is looped and initially does not play (the sound file MUST have the LOOP_START vorbis comment then!). It can be toggled by a trigger.</flag>
<flag key="GLOBAL" name="GLOBAL" bit="2">the sound plays with no attenuation (same as setting atten to -1)</flag>
<flag key="ACTIVATOR" name="ACTIVATOR" bit="3">the sound is played to the activator only when triggered (cannot be combined with LOOPED_ON and LOOPED_OFF)</flag>
</point>

<group name="trigger_counter" color=".5 .5 .5">
Acts as an intermediary for an action that takes multiple inputs.
After the counter has been triggered &quot;count&quot; times, it will fire all of its targets and remove itself.
-------- KEYS --------
<real key="count" name="count">how many times this needs to be triggered to activate its targets</real>
<target key="target" name="target">trigger all entities with this targetname when triggered</target>
<targetname key="targetname" name="targetname">name that identifies this entity so it can be triggered</targetname>
<real key="delay" name="delay">delay the triggering by the given time</real>
<string key="message" name="message">print this message to the player who activated the trigger</string>
<target key="killtarget" name="killtarget">remove all entities with this targetname when triggered</target>
-------- SPAWNFLAGS --------
<flag key="NOMESSAGE" name="NOMESSAGE" bit="0">don't print a &quot;2 more to go...&quot;-like message when triggered</flag>
</group>

<point name="trigger_delay" color=".5 .5 .5" box="-8 -8 -8 8 8 8">
Trigger that delays triggering by a given amount of time. Only one action can be waited for; if triggered again before the &quot;wait&quot; time expires, the timer will restart (as opposed to trigger_relay).
-------- KEYS --------
<real key="wait" name="wait">delay the triggering by the given time</real>
<target key="target" name="target">trigger all entities with this targetname when triggered</target>
<targetname key="targetname" name="targetname">name that identifies this entity so it can be triggered</targetname>
<string key="message" name="message">print this message to the player who activated the trigger</string>
<target key="killtarget" name="killtarget">remove all entities with this targetname when triggered</target>
</point>

<group name="trigger_hurt" color=".5 .5 .5">
Any object touching this will be hurt.
Has the useful effect of automatically returning flags, keys and runes when they touch it.
-------- KEYS --------
<real key="dmg" name="dmg">amount of damage to deal (default: 1000)</real>
<string key="message" name="message">kill message when someone gets killed by this (default: &quot;was in the wrong place&quot;)</string>
<string key="message2" name="message2">kill message when someone gets pushed into this (default: &quot;was thrown into a world of hurt by&quot;). The # character is replaced by the attacker name if present (and it instead does not get appended to the end)</string>
<integer key="team" name="team">team that gets hurt (5 = red, 14 = blue, etc) (when set, only this team can get hurt)</integer>
<targetname key="targetname" name="targetname">if triggered using this target name, the activator will be the one who gets the frag awarded for hurting someone using this trigger (hint: The Frag Pipe)</targetname>
-------- SPAWNFLAGS --------
<flag key="INVERT_TEAM" name="INVERT_TEAM" bit="2">the team that owns this will NOT jump when touching this</flag>
</group>

<group name="trigger_impulse" color=".5 .5 .5">
An accelerator/dampener/wind field.
Can be used in two ways:
&quot;dampener field&quot;: just set strength to a value from 0 to 1. Entering the field will slow down to this factor.
&quot;accelerator field&quot;: just set strength to a value from 1 to infinity. Entering the field will accelerate by this factor.
&quot;wind field&quot;: set strength to the amount of velocity to add per second, and target a target_position. The field will apply force in the direction from its own origin to the target (use an origin brush to specify its own origin, or this will fail) when touched.
&quot;gravity field&quot;: set strength to the amount of velocity to add per second at the center, and set radius to the radius of the field. Set falloff to the desired falloff characteristics.
-------- KEYS --------
<target key="target" name="target">&quot;wind field&quot;: points to the target_position to which the player will get pushed.</target>
<real key="strength" name="strength">&quot;wind field&quot;, &quot;gravity field&quot;: amount of force per second to apply. &quot;dampener/accelerator field&quot;: slowdown/speedup factor.</real>
<real key="falloff" name="falloff">&quot;gravity field&quot;: 0 means no falloff, 1 means linear falloff (zero at the outside), 2 means inverted linear falloff (zero at the inside)</real>
</group>

<group name="trigger_keylock" color=".0 .5 .8">
Keylock trigger.  Must target other entities.
This trigger will trigger target entities when all required keys are provided.
-------- KEYS --------
<real key="itemkeys" name="itemkeys">A bit field with key IDs that are needed to open this lock.</real>
<real key="sounds" name="sounds">1 to play misc/secret.wav, 2 to play misc/talk.wav, 3 to play misc/trigger1.wav (3 is default)</real>
<target key="target" name="target">trigger all entities with this targetname when triggered and all keys have been given to it, then remove this trigger</target>
<target key="target2" name="target2">trigger all entities with this targetname when triggered without giving it all the required keys.</target>
<target key="killtarget" name="killtarget">remove all entities with this targetname when triggered with all the needed keys.</target>
<string key="message" name="message">print this message to the player who activated the trigger when all needed keys have been given.</string>
<string key="message2" name="message2">print this message to the player who activated the trigger when not all of the needed keys have been given.</string>
<sound key="noise" name="noise">sound to play when lock gets unlocked (default: see sounds)</sound>
<sound key="noise1" name="noise1">sound to play when only some of the needed key were used but not all (default: misc/decreasevalue.wav)</sound>
<sound key="noise2" name="noise2">sound to play when a key is missing (default: misc/talk.wav)</sound>
<real key="wait" name="wait">prevent triggering again for this amount of time (default: 5) - applies to target2, target3, target4.</real>
---------NOTES----------
If spawned without any key specified in itemkeys, this trigger will display an error and remove itself.
message2 and noise2 will be resent to the player every 2 seconds while he is in the trigger zone.
</group>

<group name="trigger_multiple" color=".5 .5 .5">
Variable sized repeatable trigger.  Must be targeted at one or more entities.  If &quot;health&quot; is set, the trigger must be killed to activate each time.
-------- KEYS --------
<real key="health" name="health">amount of damage that has to be dealt to the trigger to activate (it then won't respond to merely touching it)</real>
<real key="wait" name="wait">prevent triggering again for this amount of time (default: 0.2, set to -1 to wait indefinitely, or -2 to not wait at all)</real>
<real key="sounds" name="sounds">1 to play misc/secret.wav, 2 to play misc/talk.wav, 3 to play misc/trigger1.wav</real>
<sound key="noise" name="noise">path to sound file, if you want to play something else</sound>
<target key="target" name="target">trigger all entities with this targetname when triggered</target>
<target key="target2" name="target2">trigger all entities with this targetname when triggered</target>
<target key="target3" name="target3">trigger all entities with this targetname when triggered</target>
<target key="target4" name="target4">trigger all entities with this targetname when triggered</target>
<boolean key="target_random" name="target_random">instead of triggering ALL matched entities, trigger ONE of them by random</boolean>
<targetname key="targetname" name="targetname">name that identifies this entity so it can be triggered</targetname>
<real key="delay" name="delay">delay the triggering by the given time</real>
<string key="message" name="message">print this message to the player who activated the trigger</string>
<target key="killtarget" name="killtarget">remove all entities with this targetname when triggered</target>
<integer key="team" name="team">team that owns this trigger (5 = red, 14 = blue, etc) (when set, only this team can trigger)</integer>
-------- SPAWNFLAGS --------
<flag key="NOTOUCH" name="NOTOUCH" bit="0">the trigger can only be triggered by other entities, not by touching or firing (you should probably use trigger_relay or trigger_delay instead)</flag>
<flag key="ALLENTS" name="ALLENTS" bit="1">the trigger responds to all entities, not just players (useful for targetting trigger_items)</flag>
<flag key="INVERT_TEAM" name="INVERT_TEAM" bit="2">the team that owns the trigger will NOT trigger when touching this</flag>
<flag key="NOSPLASH" name="NOSPLASH" bit="8">if set, splash damage cannot activate the door, only direct damage can (requires health to be set)</flag>
</group>

<group name="trigger_once" color=".5 .5 .5">
Variable sized repeatable trigger.  Must be targeted at one or more entities.  If &quot;health&quot; is set, the trigger must be killed to activate each time.
Basically, it's a use-once trigger_multiple.
-------- KEYS --------
<real key="health" name="health">amount of damage that has to be dealt to the trigger to activate (it then won't respond to merely touching it)</real>
<real key="sounds" name="sounds">1 to play misc/secret.wav, 2 to play misc/talk.wav, 3 to play misc/trigger1.wav</real>
<sound key="noise" name="noise">path to sound file, if you want to play something else</sound>
<target key="target" name="target">trigger all entities with this targetname when triggered</target>
<targetname key="targetname" name="targetname">name that identifies this entity so it can be triggered</targetname>
<real key="delay" name="delay">delay the triggering by the given time</real>
<string key="message" name="message">print this message to the player who activated the trigger</string>
<target key="killtarget" name="killtarget">remove all entities with this targetname when triggered</target>
-------- SPAWNFLAGS --------
<flag key="NOTOUCH" name="NOTOUCH" bit="0">the trigger can only be triggered by other entities, not by touching or firing (you should probably use trigger_relay or trigger_delay instead)</flag>
<flag key="NOSPLASH" name="NOSPLASH" bit="8">if set, splash damage cannot activate the door, only direct damage can (requires health to be set)</flag>
</group>

<group name="trigger_push" color="1 .5 0">
Jump pad. What else?
Can be used in three ways:
Xonotic &quot;target/height&quot; way: put the target_position where the player should land, and tune height to get a nice jump path. A good starting value for height is 100.
Q3A &quot;target&quot; way: put the target_position at the apex of the jump, and hope the player will land at the right spot. Good luck.
Quake &quot;movedir/speed&quot; way: player will get velocity movedir * speed * 10 when using the jump pad
-------- KEYS --------
<target key="target" name="target">point the player will fly to when using the jump pad (use a target_position here)</target>
<real key="height" name="height">if height is 0, the (player's origin at the) apex of the jump will be at the target; otherwise, the apex will be abs(height) above the higher point of player's origin and the target; if positive, the apex will be reached in the jump from initial origin to target</real>
<real3 key="movedir" name="movedir">when target is not set, direction vector to push to</real3>
<real key="speed" name="speed">speed of jump pad (default: 1000)</real>
<sound key="noise" name="noise">sound to play when jump pad is used; default is misc/jumppad.wav; you can set it to &quot;&quot; to make the pad silent</sound>
<integer key="team" name="team">team that owns this jump pad (5 = red, 14 = blue, etc) (when set, only this team can teleport)</integer>
<targetname key="targetname" name="targetname">when targeted by a func_button, pressing the button will reassign the teleporter to the team of the activator.</targetname>
-------- SPAWNFLAGS --------
<flag key="INVERT_TEAM" name="INVERT_TEAM" bit="2">the team that owns the teleporter will NOT jump when touching this</flag>
</group>

<point name="trigger_relay" color=".5 .5 .5" box="-8 -8 -8 8 8 8">
This fixed size trigger cannot be touched, it can only be fired by other events. It can, like any other trigger, contain killtargets, targets, delays, and messages.
One possible use is to trigger entities with more than one targetname on an action, e.g. a button. For this, set target of your button to foobar. Create two trigger_relay with targetname=foobar. Give one of the trigger_relay entities target=ent1, and give the other target=ent2.
More than one &quot;trigger event&quot; can be delayed at once, as opposed to trigger_delay.
-------- KEYS --------
<target key="target" name="target">trigger all entities with this targetname when triggered</target>
<target key="target2" name="target2">trigger all entities with this targetname when triggered</target>
<target key="target3" name="target3">trigger all entities with this targetname when triggered</target>
<target key="target4" name="target4">trigger all entities with this targetname when triggered</target>
<boolean key="target_random" name="target_random">instead of triggering ALL matched entities, trigger ONE of them by random</boolean>
<targetname key="targetname" name="targetname">name that identifies this entity so it can be triggered</targetname>
<real key="delay" name="delay">delay the triggering by the given time</real>
<string key="message" name="message">print this message to the player who activated the trigger</string>
<target key="killtarget" name="killtarget">remove all entities with this targetname when triggered</target>
</point>

<group name="trigger_secret" color=".5 .5 .5">
Variable sized secret trigger. Can be targeted at one or more entities.
Basically, it's a trigger_once that additionally updates the number of secrets found.
-------- KEYS --------
<real key="sounds" name="sounds">1 to play misc/secret.wav, 2 to play misc/talk.wav, 3 to play misc/trigger1.wav (default: 1)</real>
<sound key="noise" name="noise">path to sound file, if you want to play something else</sound>
<target key="target" name="target">trigger all entities with this targetname when triggered</target>
<string key="message" name="message">print this message to the player who activated the trigger instead of the standard 'You found a secret!'</string>
<target key="killtarget" name="killtarget">remove all entities with this targetname when triggered</target>
-------- NOTES --------
You should create a common/trigger textured brush covering the entrance to a secret room/area.
Trigger secret can only be trigger by a player's touch and can not be a target itself.
</group>

<group name="trigger_swamp" color=".5 .5 .5">
Players getting into the swamp will get slowed down and damaged
-------- KEYS --------
<real key="dmg" name="dmg">damage per interval to deal (default is 5)</real>
<real key="swamp_interval" name="swamp_interval">interval of damage when in swamp (default is 1)</real>
<real key="swamp_slowdown" name="swamp_slowdown">amount of slowdown caused by the swamp (default is 0.5)</real>
</group>

<group name="trigger_teleport" color=".5 .5 .5">
Touching this will teleport players to the location of the targeted misc_teleporter_dest entity.
Note that in Xonotic, teleporters preserve momentum of the player using them.
-------- KEYS --------
<target key="target" name="target">this must point to a misc_teleporter_dest entity. If it points to more than one, a destination is randomly selected on teleport.</target>
<target key="target2" name="target2">target to activate when the teleporter is used</target>
<target key="target3" name="target3">target to activate when the teleporter is used</target>
<target key="target4" name="target4">target to activate when the teleporter is used</target>
<boolean key="target_random" name="target_random">instead of triggering ALL matched entities, trigger ONE of them by random</boolean>
<integer key="team" name="team">team that owns this teleporter (5 = red, 14 = blue, etc) (when set, only this team can teleport)</integer>
<targetname key="targetname" name="targetname">when targeted by a func_button, pressing the button will reassign the teleporter to the team of the activator.</targetname>
-------- SPAWNFLAGS --------
<flag key="INVERT_TEAM" name="INVERT_TEAM" bit="2">the team that owns the teleporter will NOT teleport when touching this</flag>
</group>

<point name="weapon_crylink" color="1 0 .5" box="-30 -30 0 30 30 32" model="models/weapons/g_crylink.md3">
the Crylink
-------- KEYS --------
<real key="ammo_cells" name="ammo_cells">initial cells of the weapon (if unset, g_pickup_cells is used)</real>
<real key="respawntime" name="respawntime">time till it respawns (default: 15)</real>
<real key="respawntimejitter" name="respawntimejitter">respawn time randomization +/- seconds (default: 0)</real>
<integer key="team" name="team">out of items with the same value here, only one (random one) will spawn. Useful to put multiple items on one spot.</integer>
<real key="cnt" name="cnt">weight of this item for random selection using &quot;team&quot;. Set to a lower value for items you want to see less likely.</real>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
modeldisabled=&quot;models/weapons/g_crylink.md3&quot;
</point>

<point name="weapon_electro" color="1 0 .5" box="-30 -30 0 30 30 32" model="models/weapons/g_electro.md3">
the Electro
-------- KEYS --------
<real key="ammo_cells" name="ammo_cells">initial cells of the weapon (if unset, g_pickup_cells is used)</real>
<real key="respawntime" name="respawntime">time till it respawns (default: 15)</real>
<real key="respawntimejitter" name="respawntimejitter">respawn time randomization +/- seconds (default: 0)</real>
<integer key="team" name="team">out of items with the same value here, only one (random one) will spawn. Useful to put multiple items on one spot.</integer>
<real key="cnt" name="cnt">weight of this item for random selection using &quot;team&quot;. Set to a lower value for items you want to see less likely.</real>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
modeldisabled=&quot;models/weapons/g_electro.md3&quot;
</point>

<point name="weapon_grenadelauncher" color="1 0 .5" box="-30 -30 0 30 30 32" model="models/weapons/g_gl.md3">
the Mortar
-------- KEYS --------
<real key="ammo_rockets" name="ammo_rockets">initial rockets of the weapon (if unset, g_pickup_rockets is used)</real>
<real key="respawntime" name="respawntime">time till it respawns (default: 15)</real>
<real key="respawntimejitter" name="respawntimejitter">respawn time randomization +/- seconds (default: 0)</real>
<integer key="team" name="team">out of items with the same value here, only one (random one) will spawn. Useful to put multiple items on one spot.</integer>
<real key="cnt" name="cnt">weight of this item for random selection using &quot;team&quot;. Set to a lower value for items you want to see less likely.</real>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
modeldisabled=&quot;models/weapons/g_gl.md3&quot;
</point>

<point name="weapon_hagar" color="1 0 .5" box="-30 -30 0 30 30 32" model="models/weapons/g_hagar.md3">
the Hagar
-------- KEYS --------
<real key="ammo_rockets" name="ammo_rockets">initial rockets of the weapon (if unset, g_pickup_rockets is used)</real>
<real key="respawntime" name="respawntime">time till it respawns (default: 15)</real>
<real key="respawntimejitter" name="respawntimejitter">respawn time randomization +/- seconds (default: 0)</real>
<integer key="team" name="team">out of items with the same value here, only one (random one) will spawn. Useful to put multiple items on one spot.</integer>
<real key="cnt" name="cnt">weight of this item for random selection using &quot;team&quot;. Set to a lower value for items you want to see less likely.</real>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
modeldisabled=&quot;models/weapons/g_hagar.md3&quot;
</point>

<point name="weapon_laser" color="1 0 .5" box="-30 -30 0 30 30 32" model="models/weapons/g_laser.md3">
the Laser. Note that unless you use
  settemp_for_type all g_start_weapon_laser 0
in your mapinfo file, everyone will already spawn with one, making this pickup useless.
-------- KEYS --------
<real key="respawntime" name="respawntime">time till it respawns (default: 15)</real>
<real key="respawntimejitter" name="respawntimejitter">respawn time randomization +/- seconds (default: 0)</real>
<integer key="team" name="team">out of items with the same value here, only one (random one) will spawn. Useful to put multiple items on one spot.</integer>
<real key="cnt" name="cnt">weight of this item for random selection using &quot;team&quot;. Set to a lower value for items you want to see less likely.</real>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
modeldisabled=&quot;models/weapons/g_laser.md3&quot;
</point>

<point name="weapon_nex" color="1 0 .5" box="-30 -30 0 30 30 32" model="models/weapons/g_nex.md3">
the Nex
In Minstagib, this turns into an item_minst_cells if no explicit item_minst_cells have been placed.
-------- KEYS --------
<real key="ammo_cells" name="ammo_cells">initial cells of the weapon (if unset, g_pickup_cells is used)</real>
<real key="respawntime" name="respawntime">time till it respawns (default: 15 * g_balance_nex_respawntime_modifier)</real>
<real key="respawntimejitter" name="respawntimejitter">respawn time randomization +/- seconds (default: 0)</real>
<integer key="team" name="team">out of items with the same value here, only one (random one) will spawn. Useful to put multiple items on one spot.</integer>
<real key="cnt" name="cnt">weight of this item for random selection using &quot;team&quot;. Set to a lower value for items you want to see less likely.</real>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
modeldisabled=&quot;models/weapons/g_nex.md3&quot;
</point>

<point name="weapon_rocketlauncher" color="1 0 .5" box="-30 -30 0 30 30 32" model="models/weapons/g_rl.md3">
the Rocket Launcher
In Minstagib, this turns into an item_minst_cells if no explicit item_minst_cells have been placed.
-------- KEYS --------
<real key="ammo_rockets" name="ammo_rockets">initial rockets of the weapon (if unset, g_pickup_rockets is used)</real>
<real key="respawntime" name="respawntime">time till it respawns (default: 15)</real>
<real key="respawntimejitter" name="respawntimejitter">respawn time randomization +/- seconds (default: 0)</real>
<integer key="team" name="team">out of items with the same value here, only one (random one) will spawn. Useful to put multiple items on one spot.</integer>
<real key="cnt" name="cnt">weight of this item for random selection using &quot;team&quot;. Set to a lower value for items you want to see less likely.</real>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>
</point>

<point name="weapon_shotgun" color="1 0 .5" box="-30 -30 0 30 30 32" model="models/weapons/g_shotgun.md3">
the Shotgun. Note that unless you use
  settemp_for_type all g_start_weapon_shotgun 0
in your mapinfo file, everyone will already spawn with one, making this pickup useless.
-------- KEYS --------
<real key="ammo_shells" name="ammo_shells">initial shells of the weapon (if unset, g_pickup_shells is used)</real>
<real key="respawntime" name="respawntime">time till it respawns (default: 15)</real>
<real key="respawntimejitter" name="respawntimejitter">respawn time randomization +/- seconds (default: 0)</real>
<integer key="team" name="team">out of items with the same value here, only one (random one) will spawn. Useful to put multiple items on one spot.</integer>
<real key="cnt" name="cnt">weight of this item for random selection using &quot;team&quot;. Set to a lower value for items you want to see less likely.</real>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>
</point>

<point name="weapon_uzi" color="1 0 .5" box="-30 -30 0 30 30 32" model="models/weapons/g_uzi.md3">
the Machine Gun
-------- KEYS --------
<real key="ammo_nails" name="ammo_nails">initial bullets of the weapon (if unset, g_pickup_nails is used)</real>
<real key="respawntime" name="respawntime">time till it respawns (default: 15)</real>
<real key="respawntimejitter" name="respawntimejitter">respawn time randomization +/- seconds (default: 0)</real>
<integer key="team" name="team">out of items with the same value here, only one (random one) will spawn. Useful to put multiple items on one spot.</integer>
<real key="cnt" name="cnt">weight of this item for random selection using &quot;team&quot;. Set to a lower value for items you want to see less likely.</real>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
modeldisabled=&quot;models/weapons/g_uzi.md3&quot;
</point>

<group name="worldspawn" color="0 0 0">
The world.
If you see this, the currently selected brush is not of an entity.
-------- KEYS --------		
<string key="fog" name="fog">fog parameters of the map (density red green blue alpha mindist maxdist maxheight fade-height); works just like the &quot;fog&quot; console command</string>
<string key="author" name="author">name of the author of the map, if not specified in &quot;message&quot;. Will get copied to the &quot;author&quot; entry of the mapinfo file when none is present.</string>
<string key="message" name="message">text to print at user logon. Used for name of level. Ideally: &quot;NAMEOFLEVEL by AUTHOR&quot;. Will get copied to the &quot;title&quot; and &quot;author&quot; entries of the mapinfo file when none is present.</string>
<string key="_description" name="_description">one-line description of the map. Will get copied to the &quot;description&quot; entry of the mapinfo file when none is present.</string>
-------- Q3MAP2 KEYS --------
<integer3 key="_blocksize" name="_blocksize">vector specifying the automatic vis subdivision block size (default: 1024 1024 1024)</integer3>
<integer3 key="gridsize" name="gridsize">lightgrid granularity vector (default: 64 64 128)</integer3>
<color key="_color" name="_color">color of the global light parameters</color>
<real key="_ambient" name="_ambient">light added to all surfaces</real>
<real key="_mingridlight" name="_mingridlight">minimum grid light</real>
<real key="_minlight" name="_minlight">minimum light value on both surfaces and lightgrid</real>
_keepLights: do not remove light entities from the map (useful e.g. for realtime lighting)
<string key="_floodlight" name="_floodlight">flood light parameters (red green blue distance intensity), start with 240 240 255 1024 128</string>
<real key="_farplanedist" name="_farplanedist">range after which everything is completely invisible by fog (when fog is being used)</real>
<boolean key="_noshadersun" name="_noshadersun">turn off sun defined by shaders (useful if you defined your own light entity to be a sun)</boolean>
<boolean key="_ignoreleaks" name="_ignoreleaks">ignore leaks when compiling</boolean>
<real key="_lightmapscale" name="_lightmapscale">light map resolution factor</real>
<boolean key="_castshadows" name="_castshadows">Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting.1 = cast shadows on world. &gt; 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.</boolean>
<boolean key="_receiveshadows" name="_receiveshadows">Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. &gt; 1 = receive shadows only from corresponding keyed entities (see above) and world. &lt; 1 = receive shadows ONLY from corresponding keyed entities.</boolean>
<texture key="_celshader" name="_celshader">Sets the cel shader used for this geometry. Note: omit the &quot;textures/&quot; prefix.</texture>
</group>

<group name="trigger_race_checkpoint" color="0 1 0">
A checkpoint, for the race game mode. Be sure to make them quite long, so they actually catch a player reliably!
-------- KEYS --------
<real key="cnt" name="cnt">Number of the checkpoint. 0 for start/finish line, and at least two other checkpoints have to exist. They MUST be touched in sequential order!</real>
<string key="message" name="message">Death message, when touching checkpoints in the wrong order.</string>
<string key="message2" name="message2">Death message when someone gets pushed into this (default: &quot;was thrown into a world of hurt by&quot;). The # character is replaced by the attacker name if present (and it instead does not get appended to the end)</string>
<targetname key="targetname" name="targetname">Name of the checkpoint. info_player_race can target this to assign a spawn to a checkpoint. Also used for triggering a checkpoint by an event.</targetname>
<target key="target" name="target">when the checkpoint is passed, these entities are triggered. Useful for forcing items in certain areas using trigger_items</target>
<real key="race_penalty" name="race_penalty">when set, this penalty time is given if passing this checkpoint, and the checkpoint does not show up with a sprite. Useful for invisible checkpoints to detect driving around the intended checkpoint</real>
<string key="race_penalty_reason" name="race_penalty_reason">reason to display when the penalty time is imposed. Default: &quot;missing a checkpoint&quot;</string>
-------- SPAWNFLAGS --------
<flag key="NOTOUCH" name="NOTOUCH" bit="0">the checkpoint will not become active when touched, it HAS to be targeted</flag>
<flag key="STRICTTRIGGER" name="STRICTTRIGGER" bit="1">only trigger the targets when the checkpoint actually was reached in a valid way (that is, not when going back)</flag>
<flag key="CRUSH" name="CRUSH" bit="2">the checkpoint kills when used at the wrong time</flag>
<flag key="FINISH" name="FINISH" bit="3">when set on the last checkpoint (i.e. the one with highest cnt), it is marked as finish line and the CP with cnt=0 is the start line</flag>
</group>

<group name="trigger_race_penalty" color="0 1 0">
A penalty trigger.
-------- KEYS --------
<real key="race_penalty" name="race_penalty">this penalty time is given if passing this trigger</real>
<string key="race_penalty_reason" name="race_penalty_reason">reason to display when the penalty time is imposed. Default: &quot;leaving the track&quot;</string>
-------- SPAWNFLAGS --------
<flag key="NOTOUCH" name="NOTOUCH" bit="0">the trigger will not become active when touched, it HAS to be targeted</flag>
</group>

<point name="info_player_race" color="1 0.5 0" box="-16 -16 -24 16 16 45">
Race spawn point.
NOTE for race_place: when the race starts after the qualifying, the player with the fastest lap ends up at the info_player_race with race_place 1, and so on. If there are too many players, or if someone comes in later, he will spawn at an info_player_race with highest race_place. If someone dies after reaching the the starting checkpoint, he will spawn at race_place 0. So for each trigger_race_checkpoint, there must be at least one corresponding info_player_race with race_place NOT set.
-------- KEYS --------
<target key="target" name="target">this should point to a trigger_race_checkpoint to decide when this spawning point is active. The checkpoint has to be AFTER this spawn.</target>
<target key="target2" name="target2">trigger all entities with this targetname when someone spawns</target>
<target key="target3" name="target3">trigger all entities with this targetname when someone spawns</target>
<target key="target4" name="target4">trigger all entities with this targetname when someone spawns</target>
<boolean key="target_random" name="target_random">instead of triggering ALL matched entities, trigger ONE of them by random</boolean>
<real key="cnt" name="cnt">weight of spawn point for random selection. Set to a lower value if you have many spawn points close together. Default value is 1.</real>
<real key="race_place" name="race_place">if target points to the trigger_race_checkpoint with cnt 0 (finish line), this sets which place the spawn corresponds to; the special value 0 stands for spawns for players who died in game, and -1 marks the spawnpoint for qualifying mode only; any race map must have spawnpoints with race_place being 1, 2, 3 or it gets marked as a frustrating map</real>
<real key="restriction" name="restriction">when 1, only bots can spawn here; when 2, only humans can spawn here (be careful with these, or the game will crash because someone cannot spawn)</real>
</point>

<group name="func_pointparticles" color=".5 .5 .5">
A brush that emits particles.
-------- KEYS --------
<string key="mdl" name="mdl">particle effect name from effectinfo.txt</string>
<real key="impulse" name="impulse">when positive, number of particles to emit per second; when negative; number of particles to emit per second and 64^3 block</real>
<real3 key="velocity" name="velocity">particle direction and speed</real3>
<real key="waterlevel" name="waterlevel">extra velocity jitter amount</real>
<real key="count" name="count">particle count multiplier (per spawned particle)</real>
<real3 key="movedir" name="movedir">when set, trace direction (particles will then be emitted from the surface the trace hits); the length of the vector is used as strength of taking the normal of the trace into account</real3>
<sound key="noise" name="noise">sound to play when the particle is emitted</sound>
<real key="atten" name="atten">distance attenuation of the sound (a value from 0.1 to 3.9), default is 0.5; set to -1 for no attenuation (global sound)</real>
<real key="volume" name="volume">volume of the sound</real>
<targetname key="targetname" name="targetname">name to target this (then its state is toggled)</targetname>
<string key="bgmscript" name="bgmscript">emitter class from the BGM script</string>
<real key="bgmscriptattack" name="bgmscriptattack">attack time of the effect strength (0 to 3.9)</real>
<real key="bgmscriptdecay" name="bgmscriptdecay">decay time of the effect strength (0 to 3.9)</real>
<real key="bgmscriptsustain" name="bgmscriptsustain">sustain level of the effect strength (0.1 to 1, set to -1 to disable sustain)</real>
<real key="bgmscriptrelease" name="bgmscriptrelease">release time of the effect strength (0 to 3.9)</real>
-------- SPAWNFLAGS --------
<flag key="START_ON" name="START_ON" bit="0">when targeted, the particle emitter will start switched on</flag>
<flag key="IMPULSE" name="IMPULSE" bit="1">only send the full amount of impulse particles when the entity is triggered</flag>
<flag key="VISCULLING" name="VISCULLING" bit="2">only emit particles if the emitter brush is in the current PVS</flag>
-------- NOTES --------
Use trigger_monoflop if you want the particles to turn off for a while, then turn back on.
A BGM script is a .bgs file named like the map, in the maps directory. Its format is lines of the form
  &lt;emitter class&gt; &lt;time since start of background music&gt; &lt;0 if the emitters are to be switched off, &gt;0 and &lt;=1 if they are to be switched on&gt;
e.g.
  smokers 4.7 1
  smokers 4.9 0
The lines MUST be sorted by emitter class as primary key, and by the time since start of the BGM as secondary key.
</group>

<point name="trigger_flipflop" color=".5 .5 .5" box="-8 -8 -8 8 8 8">
&quot;Flip-flop&quot; trigger gate... lets only every second trigger event through
-------- KEYS --------
<target key="target" name="target">trigger all entities with this targetname when triggered</target>
<targetname key="targetname" name="targetname">name that identifies this entity so it can be triggered</targetname>
-------- SPAWNFLAGS --------
<flag key="START_ON" name="START_ON" bit="0">assume it is already turned on (so the first event is NOT passed through)</flag>
</point>

<point name="trigger_monoflop" color=".5 .5 .5" box="-8 -8 -8 8 8 8">
&quot;Mono-flop&quot; trigger gate... turns trigger events into pairs of events
-------- KEYS --------
<target key="target" name="target">trigger all entities with this targetname when triggered</target>
<targetname key="targetname" name="targetname">name that identifies this entity so it can be triggered</targetname>
<real key="wait" name="wait">time to wait until the &quot;off&quot; event is fired</real>
-------- SPAWNFLAGS --------
<flag key="FIXED" name="FIXED" bit="0">do pulses of fixed length (so the &quot;off&quot; delay is NOT extended as usual and new events are just ignored)</flag>
</point>

<point name="trigger_multivibrator" color=".5 .5 .5" box="-8 -8 -8 8 8 8">
&quot;Multivibrator&quot; trigger gate... repeatedly sends trigger events. When triggered, turns on or off.
-------- KEYS --------
<target key="target" name="target">trigger all entities with this targetname when it goes off</target>
<targetname key="targetname" name="targetname">name that identifies this entity so it can be triggered</targetname>
<real key="phase" name="phase">phase of the multivibrator (it is added to the time)</real>
<real key="wait" name="wait">&quot;on&quot; cycle time (default: 1)</real>
<real key="respawntime" name="respawntime">&quot;off&quot; cycle time (default: same as wait)</real>
-------- SPAWNFLAGS --------
<flag key="START_ON" name="START_ON" bit="0">assume it is already turned on (when targeted)</flag>
</point>

<point name="trigger_gamestart" color=".5 .5 .5" box="-8 -8 -8 8 8 8">
Triggers once when the game starts, then no longer does anything.
-------- KEYS --------
<target key="target" name="target">trigger all entities with this targetname when starting the game</target>
<target key="target2" name="target2">trigger all entities with this targetname when starting the game</target>
<target key="target3" name="target3">trigger all entities with this targetname when starting the game</target>
<target key="target4" name="target4">trigger all entities with this targetname when starting the game</target>
<boolean key="target_random" name="target_random">instead of triggering ALL matched entities, trigger ONE of them by random</boolean>
<real key="wait" name="wait">wait so many seconds before triggering</real>
</point>

<point name="misc_follow" color=".5 .5 .5" box="-8 -8 -8 8 8 8">
Makes one entity follow another. Will not work with all entities.
-------- KEYS --------
<target key="target" name="target">points to the entity to move (e.g. something that won't move by itself)</target>
<target key="killtarget" name="killtarget">points to the entity that is to be used as the source (e.g. a func_plat)</target>
<string key="message" name="message">tag name to attach to (if ATTACH is used)</string>
<real3 key="punchangle" name="punchangle">angle modifier (if LOCAL is used, and ATTACH is not)</real3>
-------- SPAWNFLAGS --------
<flag key="ATTACH" name="ATTACH" bit="0">attachment will be used instead of MOVETYPE_FOLLOW (mostly useful for attaching stuff to ZYM models)</flag>
<flag key="LOCAL" name="LOCAL" bit="1">do not untransform the coordinates (that is, the map specifies local coordinates, not global ones). Mostly useful with ATTACH.</flag>
</point>

<point name="weapon_minstanex" color="1 0 .5" box="-30 -30 0 30 30 32" model="models/weapons/g_minstanex.md3">
Placing this entity on a map kills your cat, voids the warranty on your toaster, and makes your map an unenjoyable campers' paradise.
the MinstaGib Nex. Always kills with one shot.
-------- KEYS --------
<real key="ammo_cells" name="ammo_cells">initial cells of the weapon (if unset, g_pickup_cells is used)</real>
<real key="respawntime" name="respawntime">time till it respawns (default: 15)</real>
<real key="respawntimejitter" name="respawntimejitter">respawn time randomization +/- seconds (default: 0)</real>
<integer key="team" name="team">out of items with the same value here, only one (random one) will spawn. Useful to put multiple items on one spot.</integer>
<real key="cnt" name="cnt">weight of this item for random selection using &quot;team&quot;. Set to a lower value for items you want to see less likely.</real>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
modeldisabled=&quot;models/weapons/g_minstanex.md3&quot;
</point>

<point name="weapon_porto" color="1 0 .5" box="-30 -30 0 30 30 32" model="models/weapons/g_porto.md3">
the Port-O-Launch. Only can be shot once.
Portals cannot be made on noimpact surfaces, and the portal missile will bounce on slick surfaces.
-------- KEYS --------
<real key="respawntime" name="respawntime">time till it respawns (default: 120)</real>
<real key="respawntimejitter" name="respawntimejitter">respawn time randomization +/- seconds (default: 0)</real>
<integer key="team" name="team">out of items with the same value here, only one (random one) will spawn. Useful to put multiple items on one spot.</integer>
<real key="cnt" name="cnt">weight of this item for random selection using &quot;team&quot;. Set to a lower value for items you want to see less likely.</real>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
modeldisabled=&quot;models/weapons/g_porto.md3&quot;
</point>

<point name="target_items" color="0 0 1" box="-8 -8 -8 8 8 8">
Sets the items of any player who triggers this.
For the number fields, not specifying a value means not changing it. To clear armor, you need to explicitly set &quot;armor&quot; to &quot;-1&quot;.
You may want to target this by a race checkpoint, a teleporter, or a trigger_multiple with ALLENTS set (so it removes weapons thrown through the field to avoid getting a weapon through it).
-------- KEYS --------
<targetname key="targetname" name="targetname">used to trigger this</targetname>
<string key="netname" name="netname">space separated list of items (either weapon short names (like in g_start_weapon_* cvars), or item short names &quot;unlimited_ammo&quot;, &quot;unlimited_weapon_ammo&quot;, &quot;unlimited_superweapons&quot;, &quot;invincible&quot;, &quot;strength&quot;, &quot;jetpack&quot; and &quot;fuel_regen&quot;</string>
<string key="message" name="message">message to print</string>
<real key="ammo_shells" name="ammo_shells">amount of shells</real>
<real key="ammo_nails" name="ammo_nails">amount of bullets</real>
<real key="ammo_rockets" name="ammo_rockets">amount of rockets</real>
<real key="ammo_cells" name="ammo_cells">amount of cells</real>
<real key="ammo_fuel" name="ammo_fuel">amount of fuel</real>
<real key="health" name="health">amount of health</real>
<real key="armorvalue" name="armorvalue">amount of armor</real>
<real key="strength_finished" name="strength_finished">if &quot;strength&quot; is specified, the time in seconds for which the strength will hold</real>
<real key="invincible_finished" name="invincible_finished">if &quot;invincible&quot; is specified, the time in seconds for which the invincibility will hold</real>
-------- SPAWNFLAGS --------
<flag key="AND" name="AND" bit="0">any items not listed will get removed, and none will get added</flag>
<flag key="OR" name="OR" bit="1">the player may keep items not listed</flag>
<flag key="ANDNOT" name="ANDNOT" bit="2">the items listed will get removed from the player</flag>
</point>

<point name="target_spawn" color="1 0 1" box="-8 -8 -8 8 8 8">
Spawns or modifies an entity when triggered.
The entity field list is a single string of the form:
'field' 'value' 'field' 'value' ... 'classname' 'item_bullets' ... 'field' 'value'
The special &quot;field&quot; name $ calls a void(void) function, for example a spawn function.
Special function names available are _setmodel and _setsize.
Field values can use various variable replacements:
$E
$E.field
$E.field+offset
$E.field+offset+randomoffset
where &quot;E&quot; can be self, activator, target (the entity being created/modified), killtarget, target2, target3, target4 and pusher.
Example is a Mario-style question mark block which could throw a new weapon_nex when activated like this:
{
&quot;classname&quot; &quot;func_button&quot;
&quot;angle&quot; &quot;-1&quot;
&quot;wait&quot; &quot;5&quot;
&quot;target&quot; &quot;makenex&quot;
&quot;speed&quot; &quot;1000&quot;
&quot;lip&quot; &quot;64&quot;
...
}
{
&quot;classname&quot; &quot;target_spawn&quot;
&quot;origin&quot; &quot;0 0 448&quot;
&quot;targetname&quot; &quot;makenex&quot;
&quot;message&quot; &quot;origin $self.origin owner $activator flags 65536 colormap $activator.colormap classname droppedweapon $ spawnfunc_weapon_nex think thrown_wep_think nextthink $time+0.5 velocity $activator.velocity velocity_z 512 movetype 3&quot;
}
-------- KEYS --------
<targetname key="targetname" name="targetname">used to trigger this</targetname>
<string key="message" name="message">entity field list</string>
<target key="target" name="target">when set, target_spawn edits entities, instead of creating new ones; the special value *activator causes the activator to be edited</target>
<real key="count" name="count">make sure no more than count entities have been created by this (refuse to spawn new ones if exceeded)</real>
<target key="killtarget" name="killtarget">reference entity (can be used as $killtarget)</target>
<target key="target2" name="target2">reference entity (can be used as $target2)</target>
<target key="target3" name="target3">reference entity (can be used as $target3)</target>
<target key="target4" name="target4">reference entity (can be used as $target4)</target>
-------- SPAWNFLAGS --------
<flag key="ONLOAD" name="ONLOAD" bit="1">create a first entity on map load</flag>
</point>

<group name="misc_breakablemodel" color="1 0 0">
This is a model which can be damaged.
Once all health is consumed it'll disappear and trigger the targeted entity/entities.
When triggered, it resets to full health, and unbreaks.
-------- KEYS --------
<model key="model" name="model">file name of model to include</model>
<real key="health" name="health">The damage this trigger can take</real>
<target key="target" name="target">The entity/entities to be triggered once this entity gets invisible</target>
<targetname key="targetname" name="targetname">The name other entities can use to target this entity</targetname>
<string key="mdl" name="mdl">particle effect name to show when destroyed</string>
<real key="count" name="count">particle effect multiplier</real>
<string key="mdl_dead" name="mdl_dead">optional replacement model to show when destroyed</string>
<string key="debris" name="debris">names of debris models to show when destroyed, separated by spaces</string>
<sound key="noise" name="noise">sound to play when destroyed</sound>
<real key="dmg" name="dmg">damage to deal to the environment when destroyed</real>
<real key="dmg_edge" name="dmg_edge">edge damage to deal to the environment when destroyed</real>
<real key="dmg_radius" name="dmg_radius">damage radius</real>
<real key="dmg_force" name="dmg_force">damage force</real>
<string key="message" name="message">death message when a player gets hit by the explosion</string>
<string key="message2" name="message2">death message when someone gets pushed into this (default: &quot;was pushed into an explosion by&quot;). The # character is replaced by the attacker name if present (and it instead does not get appended to the end)</string>
<real key="debrismovetype" name="debrismovetype">way in which the debris moves: one of 1 = ANGLENOCLIP, 2 = ANGLECLIP, 3 = WALK, 4 = STEP, 5 = FLY, 6 = TOSS, 7 = PUSH, 8 = NOCLIP, 9 = FLYMISSILE, 10 = BOUNCE, 11 = BOUNCEMISSILE</real>
<real key="debrissolid" name="debrissolid">solidity of the debris: one of 0 = NOT, 1 = TRIGGER, 2 = BBOX, 3 = SLIDEBOX, 4 = BSP, 5 = CORPSE</real>
<real3 key="debrisvelocity" name="debrisvelocity">initial velocity vector of the debris (static part)</real3>
<real3 key="debrisvelocityjitter" name="debrisvelocityjitter">initial velocity vector of the debris (random part)</real3>
<real3 key="debrisavelocityjitter" name="debrisavelocityjitter">initial angular velocity vector of the debris (random part)</real3>
<real key="debristime" name="debristime">time till the debris fades (average)</real>
<real key="debristimejitter" name="debristimejitter">time till the debris fades (random part)</real>
<real key="debrisfadetime" name="debrisfadetime">how long debris takes to fade</real>
<real key="debrisdamageforcescale" name="debrisdamageforcescale">how much debris is affected by damage force (e.g. explosions)</real>
<real key="debrisskin" name="debrisskin">skin number of debris</real>
<real key="respawntime" name="respawntime">time till it respawns (default: no auto respawn)</real>
<real key="respawntimejitter" name="respawntimejitter">respawn time randomization +/- seconds (default: 0)</real>
-------- SPAWNFLAGS --------
<flag key="DISABLED" name="DISABLED" bit="0">do not allow damaging this until it is first activated</flag>
<flag key="INDICATE" name="INDICATE" bit="1">indicate amount of damage already taken by coloring</flag>
<flag key="NOSPLASH" name="NOSPLASH" bit="8">if set, splash damage cannot activate the door, only direct damage can (requires health to be set)</flag>
</group>

<group name="func_breakable" color="1 0 0">
This is a brush model which can be damaged.
Once all health is consumed it'll disappear and trigger the targeted entity/entities.
When triggered, it resets to full health, and unbreaks.
-------- KEYS --------
<real key="health" name="health">The damage this trigger can take</real>
<target key="target" name="target">The entity/entities to be triggered once this entity gets invisible</target>
<targetname key="targetname" name="targetname">The name other entities can use to target this entity</targetname>
<string key="mdl" name="mdl">particle effect name to show when destroyed</string>
<real key="count" name="count">particle effect multiplier</real>
<string key="mdl_dead" name="mdl_dead">optional replacement model to show when destroyed</string>
<string key="debris" name="debris">names of debris models to show when destroyed, separated by spaces</string>
<sound key="noise" name="noise">sound to play when destroyed</sound>
<real key="dmg" name="dmg">damage to deal to the environment when destroyed</real>
<real key="dmg_edge" name="dmg_edge">edge damage to deal to the environment when destroyed</real>
<real key="dmg_radius" name="dmg_radius">damage radius</real>
<real key="dmg_force" name="dmg_force">damage force</real>
<string key="message" name="message">death message when a player gets hit by the explosion</string>
<string key="message2" name="message2">death message when someone gets pushed into this (default: &quot;was pushed into an explosion by&quot;). The # character is replaced by the attacker name if present (and it instead does not get appended to the end)</string>
<real key="debrismovetype" name="debrismovetype">way in which the debris moves: one of 1 = ANGLENOCLIP, 2 = ANGLECLIP, 3 = WALK, 4 = STEP, 5 = FLY, 6 = TOSS, 7 = PUSH, 8 = NOCLIP, 9 = FLYMISSILE, 10 = BOUNCE, 11 = BOUNCEMISSILE</real>
<real key="debrissolid" name="debrissolid">solidity of the debris: one of 0 = NOT, 1 = TRIGGER, 2 = BBOX, 3 = SLIDEBOX, 4 = BSP, 5 = CORPSE</real>
<real3 key="debrisvelocity" name="debrisvelocity">initial velocity vector of the debris (static part)</real3>
<real3 key="debrisvelocityjitter" name="debrisvelocityjitter">initial velocity vector of the debris (random part)</real3>
<real3 key="debrisavelocityjitter" name="debrisavelocityjitter">initial angular velocity vector of the debris (random part)</real3>
<real key="debristime" name="debristime">time till the debris fades (average)</real>
<real key="debristimejitter" name="debristimejitter">time till the debris fades (random part)</real>
<real key="debrisfadetime" name="debrisfadetime">how long debris takes to fade</real>
<real key="debrisdamageforcescale" name="debrisdamageforcescale">how much debris is affected by damage force (e.g. explosions)</real>
<real key="debrisskin" name="debrisskin">skin number of debris</real>
<real key="respawntime" name="respawntime">time till it respawns (default: no auto respawn)</real>
<real key="respawntimejitter" name="respawntimejitter">respawn time randomization +/- seconds (default: 0)</real>
-------- SPAWNFLAGS --------
<flag key="DISABLED" name="DISABLED" bit="0">do not allow damaging this until it is first activated</flag>
<flag key="INDICATE" name="INDICATE" bit="1">indicate amount of damage already taken by coloring</flag>
<flag key="NOSPLASH" name="NOSPLASH" bit="8">if set, splash damage cannot activate the door, only direct damage can (requires health to be set)</flag>
</group>

<point name="trigger_relay_if" color="0 1 0" box="-8 -8 -8 8 8 8">
Relays the trigger event if a cvar is set to a specified value.
-------- KEYS --------
<target key="target" name="target">The entity/entities to relay the trigger events to</target>
<targetname key="targetname" name="targetname">The name other entities can use to target this entity</targetname>
<string key="netname" name="netname">The name of the cvar to check</string>
<string key="message" name="message">The value of the cvar to check</string>
<real key="count" name="count">The count of entities that must be found</real>
-------- SPAWNFLAGS --------
<flag key="NEGATE" name="NEGATE" bit="0">trigger if the cvar does NOT match the value.</flag>
</point>

<point name="weapon_hlac" color="1 0 .5" box="-30 -30 0 30 30 32" model="models/weapons/g_hlac.md3">
the Heavy Laser Assault Cannon.
-------- KEYS --------
<real key="ammo_cells" name="ammo_cells">initial cells of the weapon (if unset, g_pickup_cells is used)</real>
<real key="respawntime" name="respawntime">time till it respawns (default: 30)</real>
<real key="respawntimejitter" name="respawntimejitter">respawn time randomization +/- seconds (default: 0)</real>
<integer key="team" name="team">out of items with the same value here, only one (random one) will spawn. Useful to put multiple items on one spot.</integer>
<real key="cnt" name="cnt">weight of this item for random selection using &quot;team&quot;. Set to a lower value for items you want to see less likely.</real>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
modeldisabled=&quot;models/weapons/g_hlac.md3&quot;
</point>

<point name="weapon_minelayer" color="1 0 .5" box="-30 -30 0 30 30 32" model="models/weapons/g_minelayer.md3">
the Mine Layer.
-------- KEYS --------
<real key="ammo_rockets" name="ammo_rockets">initial rockets of the weapon (if unset, g_pickup_rockets is used)</real>
<real key="respawntime" name="respawntime">time till it respawns (default: 30)</real>
<real key="respawntimejitter" name="respawntimejitter">respawn time randomization +/- seconds (default: 0)</real>
<integer key="team" name="team">out of items with the same value here, only one (random one) will spawn. Useful to put multiple items on one spot.</integer>
<real key="cnt" name="cnt">weight of this item for random selection using &quot;team&quot;. Set to a lower value for items you want to see less likely.</real>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
modeldisabled=&quot;models/weapons/g_minelayer.md3&quot;
</point>

<point name="weapon_seeker" color="1 0 .5" box="-30 -30 0 30 30 32" model="models/weapons/g_seeker.md3">
Placing this entity on a map kills your dog, voids the warranty on your car, and makes your map an unenjoyable noobs' paradise.
the T.A.G. Seeker.
-------- KEYS --------
<real key="ammo_rockets" name="ammo_rockets">initial rockets of the weapon (if unset, g_pickup_rockets is used)</real>
<real key="respawntime" name="respawntime">time till it respawns (default: 30)</real>
<real key="respawntimejitter" name="respawntimejitter">respawn time randomization +/- seconds (default: 0)</real>
<integer key="team" name="team">out of items with the same value here, only one (random one) will spawn. Useful to put multiple items on one spot.</integer>
<real key="cnt" name="cnt">weight of this item for random selection using &quot;team&quot;. Set to a lower value for items you want to see less likely.</real>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
modeldisabled=&quot;models/weapons/g_seeker.md3&quot;
</point>

<point name="weapon_hook" color="1 0 .5" box="-30 -30 0 30 30 32" model="models/weapons/g_hookgun.md3">
the on-hand Grappling Hook.
-------- KEYS --------
<real key="ammo_cells" name="ammo_cells">initial cells of the weapon (if unset, g_pickup_cells is used)</real>
<real key="respawntime" name="respawntime">time till it respawns (default: 30)</real>
<real key="respawntimejitter" name="respawntimejitter">respawn time randomization +/- seconds (default: 0)</real>
<integer key="team" name="team">out of items with the same value here, only one (random one) will spawn. Useful to put multiple items on one spot.</integer>
<real key="cnt" name="cnt">weight of this item for random selection using &quot;team&quot;. Set to a lower value for items you want to see less likely.</real>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
modeldisabled=&quot;models/weapons/g_hookgun.md3&quot;
</point>

<group name="trigger_heal" color=".5 .5 .5">
Any object touching this will be healed.
-------- KEYS --------
<real key="health" name="health">health to give per second (default 10)</real>
<real key="max_health" name="max_health">max health this trigger will give (default 200)</real>
<sound key="noise" name="noise">sound file to play (use misc/null.wav to make it silent), default = item_health_medium sound</sound>
</group>

<point name="weapon_rifle" color="1 0 .5" box="-30 -30 0 30 30 32" model="models/weapons/g_campingrifle.md3">
the Sniper Rifle.
-------- KEYS --------
<real key="ammo_nails" name="ammo_nails">initial bullets of the weapon (if unset, g_pickup_nails is used)</real>
<real key="respawntime" name="respawntime">time till it respawns (default: 30)</real>
<real key="respawntimejitter" name="respawntimejitter">respawn time randomization +/- seconds (default: 0)</real>
<integer key="team" name="team">out of items with the same value here, only one (random one) will spawn. Useful to put multiple items on one spot.</integer>
<real key="cnt" name="cnt">weight of this item for random selection using &quot;team&quot;. Set to a lower value for items you want to see less likely.</real>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
modeldisabled=&quot;models/weapons/g_campingrifle.md3&quot;
</point>

<group name="func_fourier" color="0 .5 .8">
Solid entity that oscillates according to a sum of sine waves.
-------- KEYS --------
<real key="speed" name="speed">amount of time in seconds for one complete oscillation cycle in the base frequency (default 4).</real>
<real key="height" name="height">sets the amount of travel of the oscillation movement (default 32). </real>
<real key="phase" name="phase">sets the start offset of the oscillation cycle. Values must be 0 &lt; phase &lt; 1. Any integer phase value is the same as no offset (default 0).</real>
<sound key="noise" name="noise">path/name of .wav or .ogg file to play. Use looping sounds only (e.g. sound/world/drone6.wav - See Notes).</sound>
<real key="dmg" name="dmg">damage a player who gets crushed by it receives</real>
<real key="dmgtime" name="dmgtime">interval to apply dmg to a player who is s in the way</real>
<string key="message" name="message">death message when a player gets crushed</string>
<string key="message2" name="message2">death message when someone gets pushed into this (default: &quot;was thrown into a world of hurt by&quot;). The # character is replaced by the attacker name if present (and it instead does not get appended to the end)</string>
<string key="netname" name="netname">list of &lt;frequencymultiplier&gt; &lt;phase&gt; &lt;x&gt; &lt;y&gt; &lt;z&gt; quadruples, separated by spaces; note that phase 0 represents a sine wave, and phase 0.25 a cosine wave (by default, it uses 1 0 0 0 1, to match func_bobbing's defaults</string>
</group>

<group name="func_vectormamamam" color="0 .5 .8">
Solid entity that moves according to the movement of multiple given entities (max 4)
-------- KEYS --------
<target key="target" name="target">first reference entity</target>
<real key="targetfactor" name="targetfactor">factor by which to take the first reference entity (default 1).</real>
<real3 key="targetnormal" name="targetnormal">if set, the first reference entity's location is first projected onto a plane with that normal</real3>
<target key="target2" name="target2">second reference entity</target>
<real key="target2factor" name="target2factor">factor by which to take the second reference entity (default 1).</real>
<real3 key="target2normal" name="target2normal">if set, the second reference entity's location is first projected onto a plane with that normal</real3>
<target key="target3" name="target3">third reference entity (optional)</target>
<real key="target3factor" name="target3factor">factor by which to take the third reference entity (default 1).</real>
<real3 key="target3normal" name="target3normal">if set, the third reference entity's location is first projected onto a plane with that normal</real3>
<target key="target4" name="target4">fourth reference entity (optional)</target>
<real key="target4factor" name="target4factor">factor by which to take the fourth reference entity (default 1).</real>
<real3 key="target4normal" name="target4normal">if set, the fourth reference entity's location is first projected onto a plane with that normal</real3>
<sound key="noise" name="noise">path/name of .wav or .ogg file to play. Use looping sounds only (e.g. sound/world/drone6.wav - See Notes).</sound>
<real key="dmg" name="dmg">damage a player who gets crushed by it receives</real>
<real key="dmgtime" name="dmgtime">interval to apply dmg to a player who is s in the way</real>
<string key="message" name="message">death message when a player gets crushed</string>
<string key="message2" name="message2">death message when someone gets pushed into this (default: &quot;was thrown into a world of hurt by&quot;). The # character is replaced by the attacker name if present (and it instead does not get appended to the end)</string>
-------- SPAWNFLAGS --------
<flag key="PROJECT_ON_TARGETNORMAL" name="PROJECT_ON_TARGETNORMAL" bit="0">target's origin is projected onto the given direction vector, not on the plane perpendicular to it</flag>
<flag key="PROJECT_ON_TARGET2NORMAL" name="PROJECT_ON_TARGET2NORMAL" bit="1">target2's origin is projected onto the given direction vector, not on the plane perpendicular to it</flag>
<flag key="PROJECT_ON_TARGET3NORMAL" name="PROJECT_ON_TARGET3NORMAL" bit="2">target3's origin is projected onto the given direction vector, not on the plane perpendicular to it</flag>
<flag key="PROJECT_ON_TARGET4NORMAL" name="PROJECT_ON_TARGET4NORMAL" bit="3">target4's origin is projected onto the given direction vector, not on the plane perpendicular to it</flag>
</group>

<point name="trigger_relay_teamcheck" color=".5 .5 .5" box="-8 -8 -8 8 8 8">
Works similar to trigger_relay, but only relays trigger events if the team of the activator matches this entity's team
-------- KEYS --------
<target key="target" name="target">trigger all entities with this targetname when triggered</target>
<target key="target2" name="target2">trigger all entities with this targetname when triggered</target>
<target key="target3" name="target3">trigger all entities with this targetname when triggered</target>
<target key="target4" name="target4">trigger all entities with this targetname when triggered</target>
<boolean key="target_random" name="target_random">instead of triggering ALL matched entities, trigger ONE of them by random</boolean>
<targetname key="targetname" name="targetname">name that identifies this entity so it can be triggered</targetname>
<real key="delay" name="delay">delay the triggering by the given time</real>
<string key="message" name="message">print this message to the player who activated the trigger</string>
<target key="killtarget" name="killtarget">remove all entities with this targetname when triggered</target>
<integer key="team" name="team">5 for red, 14 for blue, 13 for yellow, 10 for pink team</integer>
-------- SPAWNFLAGS --------
<flag key="NOTEAM_TOO" name="NOTEAM_TOO" bit="0">also relay events if the activator has no team set</flag>
<flag key="INVERT" name="INVERT" bit="1">only relay the event if this entity has the matching team</flag>
</point>

<point name="trigger_disablerelay" color=".5 .5 .5" box="-8 -8 -8 8 8 8">
Disables a trigger_relay temporarily (until triggered again)
-------- KEYS --------
<target key="target" name="target">disable/enable all relays with this targetname when triggered</target>
<targetname key="targetname" name="targetname">name that identifies this entity so it can be triggered</targetname>
</point>

<group name="nexball_redgoal" color="1 0 0">
Red goal. Defended by the red team.
-------- KEYS --------
<sound key="noise" name="noise">sound played when a point is scored</sound>
-------- SPAWNFLAGS --------
<flag key="GOAL_TOUCHPLAYER" name="GOAL_TOUCHPLAYER" bit="0">The trigger also affects ball-carrying players (the ball is then auto-dropped)</flag>
</group>

<group name="nexball_bluegoal" color="0 0 1">
Blue goal. Defended by the blue team.
-------- KEYS --------
<sound key="noise" name="noise">sound played when a point is scored</sound>
-------- SPAWNFLAGS --------
<flag key="GOAL_TOUCHPLAYER" name="GOAL_TOUCHPLAYER" bit="0">The trigger also affects ball-carrying players (the ball is then auto-dropped)</flag>
</group>

<group name="nexball_yellowgoal" color="1 1 0">
Yellow goal. Defended by the yellow team. Needs both red and blue goals on the map to work.
-------- KEYS --------
<sound key="noise" name="noise">sound played when a point is scored</sound>
-------- SPAWNFLAGS --------
<flag key="GOAL_TOUCHPLAYER" name="GOAL_TOUCHPLAYER" bit="0">The trigger also affects ball-carrying players (the ball is then auto-dropped)</flag>
</group>

<group name="nexball_pinkgoal" color="1 0 1">
Pink goal. Defended by the pink team. Needs red, blue and yellow goals on the map to work.
-------- KEYS --------
<sound key="noise" name="noise">sound played when a point is scored</sound>
-------- SPAWNFLAGS --------
<flag key="GOAL_TOUCHPLAYER" name="GOAL_TOUCHPLAYER" bit="0">The trigger also affects ball-carrying players (the ball is then auto-dropped)</flag>
</group>


<group name="nexball_fault" color="0.6 0.1 0">
This acts as a goal that always gives points to the opposing team.
-------- KEYS --------
<sound key="noise" name="noise">sound played when a point is scored</sound>
-------- SPAWNFLAGS --------
<flag key="GOAL_TOUCHPLAYER" name="GOAL_TOUCHPLAYER" bit="0">The trigger also affects ball-carrying players (the ball is then auto-dropped)</flag>
</group>

<group name="nexball_out" color="0.1 0.6 0">
When the ball touches this, it is returned.
-------- KEYS --------
<sound key="noise" name="noise">sound played when a point is scored</sound>
-------- SPAWNFLAGS --------
<flag key="GOAL_TOUCHPLAYER" name="GOAL_TOUCHPLAYER" bit="0">The trigger also affects ball-carrying players (the ball is then auto-dropped)</flag>
</group>

<point name="nexball_football" color=".9 .9 .9" box="-16 -16 -16 16 16 16">
The soccer type Nexball.
-------- KEYS --------
<model key="model" name="model">set this if you want to use your own model</model>
<real key="scale" name="scale">if you're using your own model, change this to scale it to 32*32*32</real>
<sound key="noise" name="noise">played when the ball bounces</sound>
<sound key="noise1" name="noise1">played when the ball is dropped on the map</sound>
</point>

<point name="nexball_basketball" color=".5 .2 0" box="-16 -16 -16 16 16 16" model="model">
The basket ball type Nexball.
-------- KEYS --------
<model key="model" name="model">set this if you want to use your own model</model>
<real key="scale" name="scale">if you're using your own model, change this to scale it to 32*32*32</real>
<sound key="noise" name="noise">played when the ball bounces</sound>
<sound key="noise1" name="noise1">played when the ball is dropped on the map</sound>
<sound key="noise2" name="noise2">played when the ball is stolen from the enemy</sound>
</point>

<point name="item_fuel" color=".3 .3 1" box="-30 -30 0 30 30 32" model="models/items/g_fuel.md3">
Jetpack fuel
-------- KEYS --------
<real key="ammo_fuel" name="ammo_fuel">fuel units gained by this item (if unset, g_pickup_fuel is used)</real>
<real key="respawntime" name="respawntime">time till it respawns (default: 15)</real>
<real key="respawntimejitter" name="respawntimejitter">respawn time randomization +/- seconds (default: 0)</real>
<integer key="team" name="team">out of items with the same value here, only one (random one) will spawn. Useful to put multiple items on one spot.</integer>
<real key="cnt" name="cnt">weight of this item for random selection using &quot;team&quot;. Set to a lower value for items you want to see less likely.</real>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>
</point>

<point name="item_fuel_regen" color="1 .3 1" box="-30 -30 0 30 30 48" model="models/items/g_fuelregen.md3">
Fuel regenerator
-------- KEYS --------
<real key="respawntime" name="respawntime">time till it respawns (default: 120)</real>
<real key="respawntimejitter" name="respawntimejitter">respawn time randomization +/- seconds (default: 0)</real>
<integer key="team" name="team">out of items with the same value here, only one (random one) will spawn. Useful to put multiple items on one spot.</integer>
<real key="cnt" name="cnt">weight of this item for random selection using &quot;team&quot;. Set to a lower value for items you want to see less likely.</real>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>
</point>

<point name="item_jetpack" color=".3 .3 1" box="-30 -30 0 30 30 48" model="models/items/g_jetpack.md3">
Jetpack
-------- KEYS --------
<real key="ammo_fuel" name="ammo_fuel">fuel units gained by this item (if unset, g_pickup_fuel_jetpack is used)</real>
<real key="respawntime" name="respawntime">time till it respawns (default: 120)</real>
<real key="respawntimejitter" name="respawntimejitter">respawn time randomization +/- seconds (default: 0)</real>
<integer key="team" name="team">out of items with the same value here, only one (random one) will spawn. Useful to put multiple items on one spot.</integer>
<real key="cnt" name="cnt">weight of this item for random selection using &quot;team&quot;. Set to a lower value for items you want to see less likely.</real>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>
</point>

<point name="trigger_magicear" color="0 0 1" box="-8 -8 -8 8 8 8">
Triggers targets when a given magic word has been said
-------- KEYS --------
<string key="message" name="message">message to wait for (can start or end with * for wildcards)</string>
<string key="netname" name="netname">replacement text (by default, no replacement is performed if empty)</string>
<real key="radius" name="radius">radius in which the player has to be for this to match</real>
<target key="target" name="target">all entities with a matching targetname will be triggered.</target>
<target key="target2" name="target2">all entities with a matching targetname will be triggered.</target>
<target key="target3" name="target3">all entities with a matching targetname will be triggered.</target>
<target key="target4" name="target4">all entities with a matching targetname will be triggered.</target>
<boolean key="target_random" name="target_random">instead of triggering ALL matched entities, trigger ONE of them by random</boolean>
<real3 key="movedir" name="movedir">if TUBA is set, this is a string of &quot;instrument+1 mintempo maxtempo&quot;. Components can be set to 0 to not match.</real3>
-------- SPAWNFLAGS --------
<flag key="IGNORE_SAY" name="IGNORE_SAY" bit="0">do not respond to &quot;say&quot; messages</flag>
<flag key="IGNORE_TEAMSAY" name="IGNORE_TEAMSAY" bit="1">do not respond to &quot;say_team&quot; messages</flag>
<flag key="IGNORE_TELL" name="IGNORE_TELL" bit="2">do not respond to &quot;tell&quot; messages</flag>
<flag key="IGNORE_INVALIDTELL" name="IGNORE_INVALIDTELL" bit="3">do not respond to &quot;tell&quot; messages of invalid syntax</flag>
<flag key="REPLACE_WHOLE_MESSAGE" name="REPLACE_WHOLE_MESSAGE" bit="4">replace the whole message by netname, or drop the message if netname is empty</flag>
<flag key="REPLACE_OUTSIDE" name="REPLACE_OUTSIDE" bit="5">also perform the replacement when outside the radius (to hide the &quot;secret word&quot;)</flag>
<flag key="CONTINUE" name="CONTINUE" bit="6">even if this magic ear matched, continue looking for further matches/replacements (useful for swear word filters)</flag>
<flag key="NODECOLORIZE" name="NODECOLORIZE" bit="7">do not decolorize the input string before matching</flag>
<flag key="TUBA" name="TUBA" bit="8">the message is a space separated note sequence that must be played on the @!#%'n Tuba or the @!#%'n Accordeon. For example, 4.25 means a quarter note at pitch 4, where 0 is base pitch (red team primary fire with no motion). For secret triggers to open doors, use 4.25 0.25 4.25 2.25. The first one to encode a rickroll in this gets slapped with the shotgun.</flag>
<flag key="TUBA_EXACTPITCH" name="TUBA_EXACTPITCH" bit="9">the note pitch must be accurate and cannot be transposed</flag>
</point>

<point name="weapon_fireball" color="1 0 .5" box="-30 -30 0 30 30 32" model="models/weapons/g_fireball.md3">
the Fireball
-------- KEYS --------
<real key="ammo_rockets" name="ammo_rockets">initial rockets of the weapon (if unset, g_pickup_rockets is used)</real>
<real key="respawntime" name="respawntime">time till it respawns (default: 15)</real>
<real key="respawntimejitter" name="respawntimejitter">respawn time randomization +/- seconds (default: 0)</real>
<integer key="team" name="team">out of items with the same value here, only one (random one) will spawn. Useful to put multiple items on one spot.</integer>
<real key="cnt" name="cnt">weight of this item for random selection using &quot;team&quot;. Set to a lower value for items you want to see less likely.</real>
-------- SPAWNFLAGS --------
<flag key="FLOATING" name="FLOATING" bit="0">the item will float in air, instead of aligning to the floor by falling</flag>

</point>

<group name="trigger_warpzone" color="1 .5 1">
A warp zone, i.e. seamlessly connecting two parts of the map.
One surface of this entity must have the common/warpzone shader (or a similar selfmade shader) - this will be the warp plane - the others must be common/trigger.
Must target, or be targeted by, another trigger_warpzone with a congruent common/warpzone surface.
Should target a target_position, or be targeted by a misc_warpzone_position.
Should be thick enough to fit a player entity (i.e. 32 units), preferably even thicker.
-------- KEYS --------
<target key="target" name="target">must point to another trigger_warpzone, or...</target>
<targetname key="targetname" name="targetname">must be pointed to by another trigger_warpzone. Should be pointed to by a misc_warpzone_position entity, or...</targetname>
<target key="killtarget" name="killtarget">should point to a target_position entity.</target>
<target key="target2" name="target2">is triggered when a player ENTERS the warpzone (and warps away)</target>
<target key="target3" name="target3">is triggered when a player LEAVES the warpzone (from the other warp zone to this one)</target>
<target key="target4" name="target4">is triggered in both cases</target>
<boolean key="target_random" name="target_random">instead of triggering ALL matched entities, trigger ONE of them by random</boolean>
<real key="warpzone_fadestart" name="warpzone_fadestart">start distance of fading out the warpzone</real>
<real key="warpzone_fadeend" name="warpzone_fadeend">end distance of fading out the warpzone (if viewer is further, warpzone is not rendered at all)</real>
-------- SPAWNFLAGS --------
<flag key="WATCHMOVE" name="WATCHMOVE" bit="0">allow this entity to be moved by others, e.g. misc_follow in MOVETYPE_FOLLOW mode</flag>
</group>

<point name="trigger_warpzone_reconnect" color="1 .5 1" box="-8 -8 -8 8 8 8">
Reconnects (randomly) all warpzones/cameras with matching target when triggered
-------- KEYS --------
<target key="target" name="target">must point to multiple trigger_warpzones, or be not set (then all warpzones may get changed)</target>
<targetname key="targetname" name="targetname">name that identifies this entity so it can be triggered</targetname>
-------- SPAWNFLAGS --------
<flag key="IGNORE_VISIBLE" name="IGNORE_VISIBLE" bit="0">do not rearrange a warpzone if a player can currently see it</flag>
</point>

<point name="misc_warpzone_position" color="1 .5 .25" box="-8 -8 -8 8 8 8">
Orientation specification for a trigger_warpzone
-------- KEYS --------
<target key="target" name="target">must point to a trigger_warpzone</target>
<angles key="angles" name="angles">must point perpendicular to the common/warpzone surface of the trigger_warpzone, and away from the trigger brush</angles>
<real3 key="origin" name="origin">must be on the common/warpzone surface of the trigger_warpzone</real3>
</point>

<group name="func_camera" color="1 .5 1">
A camera, i.e. a surface that shows a view from another part of the map.
One surface of this entity must have the common/camera shader, the others should be common/caulk.
Must target a target_position that indicates the view to be shown (and whose angles also indicate the orientation of the view)
-------- KEYS --------
<target key="target" name="target">must point to a target_position</target>
<real key="warpzone_fadestart" name="warpzone_fadestart">start distance of fading out the warpzone</real>
<real key="warpzone_fadeend" name="warpzone_fadeend">end distance of fading out the warpzone (if viewer is further, warpzone is not rendered at all)</real>
-------- SPAWNFLAGS --------
<flag key="WATCHMOVE" name="WATCHMOVE" bit="0">allow this entity to be moved by others, e.g. misc_follow in MOVETYPE_FOLLOW mode</flag>
</group>

<point name="target_music" color="1 0 0" box="-8 -8 -8 8 8 8">
Background music target (when this is used, the cdtrack line in mapinfo must not be used, and there MUST be a default target_music).
When triggered, the background music is switched to the given track.
When targetname is not set, this is the default track of the map.
-------- KEYS --------
<targetname key="targetname" name="targetname">The name other entities can use to target this entity (when not set, this one is the default)</targetname>
<sound key="noise" name="noise">the music to play (as full sound file name)</sound>
<real key="volume" name="volume">the volume (default: 1)</real>
<real key="fade_time" name="fade_time">fade-in time</real>
<real key="fade_rate" name="fade_rate">fade-out time</real>
<real key="lifetime" name="lifetime">when set, the music created by this target is switched back to the default one when this time expires</real>
-------- SPAWNFLAGS --------
<flag key="START_OFF" name="START_OFF" bit="0">the trigger is off initially</flag>
</point>

<group name="trigger_music" color="1 0 0">
Background music trigger (when this is used, the cdtrack line in mapinfo must not be used, and there MUST be a default target_music).
When triggered, its effect is turned off until triggered again.
-------- KEYS --------
<targetname key="targetname" name="targetname">The name other entities can use to target this entity</targetname>
<sound key="noise" name="noise">the music to play (as full sound file name)</sound>
<real key="volume" name="volume">the volume (default: 1)</real>
<real key="fade_time" name="fade_time">fade-in time</real>
<real key="fade_rate" name="fade_rate">fade-out time</real>
-------- SPAWNFLAGS --------
<flag key="START_OFF" name="START_OFF" bit="0">the trigger is off initially</flag>
</group>

<group name="trigger_gravity" color=".5 .5 1">
An area where gravity differs from the rest of the map.
This acts as a modifier over the normal gravity (sv_gravity). eg: 0.5 is half the normal gravity, 2 is twice the normal gravity.
-------- KEYS --------
<real key="gravity" name="gravity">gravity offset in this area, defaults to 0 if not set</real>
<sound key="noise" name="noise">sound to play when an entity enters the gravity zone, leave empty to disable</sound>
<targetname key="targetname" name="targetname">you can use this to target the grazity zone with a trigger, which will toggle it when activated</targetname>
-------- SPAWNFLAGS --------
<flag key="STICKY" name="STICKY" bit="0">entities keep their gravity after leaving the gravity zone</flag>
<flag key="START_OFF" name="START_OFF" bit="1">when targeted, the gravity zone starts off and is enabled upon triggering</flag>
</group>

<point name="relay_activate" color="0 1 0" box="-8 -8 -8 8 8 8">
Activates all .target's
List of currently supported target ents:
trigger_hurt
trigger_heal
trigger_impulse
trigger_push
trigger_teleport
func_rotating
func_bobbing
func_button
func_fourier
func_vectormamamam
-------- KEYS --------
<target key="target" name="target">trigger all entities with this targetname when triggered</target>
<targetname key="targetname" name="targetname">name that identifies this entity so it can be triggered</targetname>
</point>

<point name="relay_deactivate" color="1 0 0" box="-8 -8 -8 8 8 8">
Deactivates all .target's
List of currently supported target ents:
trigger_hurt
trigger_heal
trigger_impulse
trigger_push
trigger_teleport
func_rotating
func_bobbing
func_button
func_fourier
func_vectormamamam
-------- KEYS --------
<target key="target" name="target">trigger all entities with this targetname when triggered</target>
<targetname key="targetname" name="targetname">name that identifies this entity so it can be triggered</targetname>
</point>

<point name="relay_activatetoggle" color="0 1 1" box="-8 -8 -8 8 8 8">
Toggles all .target's de/active
List of currently supported target ents:
trigger_hurt
trigger_heal
trigger_impulse
trigger_push
trigger_teleport
func_rotating
func_bobbing
func_button
func_fourier
func_vectormamamam
-------- KEYS --------
<target key="target" name="target">trigger all entities with this targetname when triggered</target>
<targetname key="targetname" name="targetname">name that identifies this entity so it can be triggered</targetname>
</point>

<point name="target_changelevel" color=".5 .5 0" box="-8 -8 -8 8 8 8">
Loads another map when triggered. Useful for single player maps.
When no chmap key is set, the entity just ends the match when triggered. The player / team with the highest score at that moment wins.
-------- KEYS --------
<targetname key="targetname" name="targetname">The name other entities can use to target this entity</targetname>
<string key="chmap" name="chmap">Map file to switch to, leave empty to make this entity just end the match</string>
<string key="gametype" name="gametype">Switch to this gametype. If empty, the same gametype stays</string>
</point>

<point name="turret_machinegun" color="1 0 0" box="-32 -32 0 32 32 50" model="models/turrets/radiant/mg.md3">
Fast firing moderate damage bullet (hitscan) turret.
-------- KEYS --------
<real key="turret_scale_damage" name="turret_scale_damage">2 = double damage, 0.5 = half</real>
<real key="turret_scale_range" name="turret_scale_range">2 = double range, 0.5 = half</real>
<real key="turret_scale_refire" name="turret_scale_refire">2 = double refire (SLOWER!), 0.5 = half (FASTER!)</real>
<real key="turret_scale_ammo" name="turret_scale_ammo">2 = double ammo carry &amp; regen, 0.5 = half ammo carry &amp; regen</real>
<real key="turret_scale_aim" name="turret_scale_aim">2 = aim twice as fast, 0,5 = aim at half speed</real>
<real key="turret_scale_health" name="turret_scale_health">2 = double health, 0.5 = half</real>
<target key="target" name="target">Defend the position of this entity</target>
<integer key="team" name="team">5=red, 14=blue</integer>
-------- SPAWNFLAGS --------
<flag key="PILLAR" name="PILLAR" bit="1">Adds a supporting pillar under this turret, for turrets on terrain/uneven surfaces. (only for visuals)</flag>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model=&quot;../xonotic-data.pk3dir/models/turrets/radiant/mg.md3&quot;
</point>

<point name="turret_plasma" color="1 0 0" box="-32 -32 0 32 32 50" model="models/turrets/radiant/plasma.md3">
-------- KEYS --------
<real key="turret_scale_damage" name="turret_scale_damage">2 = double damage, 0.5 = half</real>
<real key="turret_scale_range" name="turret_scale_range">2 = double range, 0.5 = half</real>
<real key="turret_scale_refire" name="turret_scale_refire">2 = double refire (SLOWER!), 0.5 = half (FASTER!)</real>
<real key="turret_scale_ammo" name="turret_scale_ammo">2 = double ammo carry &amp; regen, 0.5 = half ammo carry &amp; regen</real>
<real key="turret_scale_aim" name="turret_scale_aim">2 = aim twice as fast, 0,5 = aim at half speed</real>
<real key="turret_scale_health" name="turret_scale_health">2 = double health, 0.5 = half</real>
<target key="target" name="target">Defend the position of this entity</target>
<integer key="team" name="team">5=red, 14=blue</integer>
-------- SPAWNFLAGS --------
<flag key="PILLAR" name="PILLAR" bit="1">Adds a supporting pillar under this turret, for turrets on terrain/uneven surfaces. (only for visuals)</flag>
---------NOTES----------
Basic energy cannon
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model=&quot;../xonotic-data.pk3dir/models/turrets/radiant/plasma.md3&quot;
</point>

<point name="turret_plasma_dual" color="1 0 0" box="-32 -32 0 32 32 50" model="models/turrets/radiant/plasma2.md3">
basic energy cannon * 2
-------- KEYS --------
<real key="turret_scale_damage" name="turret_scale_damage">2 = double damage, 0.5 = half</real>
<real key="turret_scale_range" name="turret_scale_range">2 = double range, 0.5 = half</real>
<real key="turret_scale_refire" name="turret_scale_refire">2 = double refire (SLOWER!), 0.5 = half (FASTER!)</real>
<real key="turret_scale_ammo" name="turret_scale_ammo">2 = double ammo carry &amp; regen, 0.5 = half ammo carry &amp; regen</real>
<real key="turret_scale_aim" name="turret_scale_aim">2 = aim twice as fast, 0,5 = aim at half speed</real>
<real key="turret_scale_health" name="turret_scale_health">2 = double health, 0.5 = half</real>
<target key="target" name="target">Defend the position of this entity</target>
<integer key="team" name="team">5=red, 14=blue</integer>
-------- SPAWNFLAGS --------
<flag key="PILLAR" name="PILLAR" bit="1">Adds a supporting pillar under this turret, for turrets on terrain/uneven surfaces. (only for visuals)</flag>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model=&quot;../xonotic-data.pk3dir/models/turrets/radiant/plasma2.md3&quot;
</point>

<point name="turret_flac" color="1 0 0" box="-32 -32 0 32 32 50" model="models/turrets/radiant/flac.md3">
Only kills missiles, rockets, grenadelauncher &amp; electro secondaries to be precise.
-------- KEYS --------
<real key="turret_scale_damage" name="turret_scale_damage">2 = double damage, 0.5 = half</real>
<real key="turret_scale_range" name="turret_scale_range">2 = double range, 0.5 = half</real>
<real key="turret_scale_refire" name="turret_scale_refire">2 = double refire (SLOWER!), 0.5 = half (FASTER!)</real>
<real key="turret_scale_ammo" name="turret_scale_ammo">2 = double ammo carry &amp; regen, 0.5 = half ammo carry &amp; regen</real>
<real key="turret_scale_aim" name="turret_scale_aim">2 = aim twice as fast, 0,5 = aim at half speed</real>
<real key="turret_scale_health" name="turret_scale_health">2 = double health, 0.5 = half</real>
<target key="target" name="target">Defend the position of this entity</target>
<integer key="team" name="team">5=red, 14=blue</integer>
-------- SPAWNFLAGS --------
<flag key="PILLAR" name="PILLAR" bit="1">Adds a supporting pillar under this turret, for turrets on terrain/uneven surfaces. (only for visuals)</flag>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model=&quot;../xonotic-data.pk3dir/models/turrets/radiant/flac.md3&quot;
</point>

<point name="turret_mlrs" color="1 0 0" box="-32 -32 0 32 32 50" model="models/turrets/radiant/mlrs.md3">
6 unguided rockers fired in a rapid burst.
-------- KEYS --------
<real key="turret_scale_damage" name="turret_scale_damage">2 = double damage, 0.5 = half</real>
<real key="turret_scale_range" name="turret_scale_range">2 = double range, 0.5 = half</real>
<real key="turret_scale_refire" name="turret_scale_refire">2 = double refire (SLOWER!), 0.5 = half (FASTER!)</real>
<real key="turret_scale_ammo" name="turret_scale_ammo">2 = double ammo carry &amp; regen, 0.5 = half ammo carry &amp; regen</real>
<real key="turret_scale_aim" name="turret_scale_aim">2 = aim twice as fast, 0,5 = aim at half speed</real>
<real key="turret_scale_health" name="turret_scale_health">2 = double health, 0.5 = half</real>
<target key="target" name="target">Defend the position of this entity</target>
<integer key="team" name="team">5=red, 14=blue</integer>
-------- SPAWNFLAGS --------
<flag key="PILLAR" name="PILLAR" bit="1">Adds a supporting pillar under this turret, for turrets on terrain/uneven surfaces. (only for visuals)</flag>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model=&quot;../xonotic-data.pk3dir/models/turrets/radiant/mlrs.md3&quot;
</point>

<point name="turret_hellion" color="1 0 0" box="-32 -32 0 32 32 50" model="models/turrets/radiant/hellion.md3">
2 guided moderate damage accelerating rockets 
-------- KEYS --------
<real key="turret_scale_damage" name="turret_scale_damage">2 = double damage, 0.5 = half</real>
<real key="turret_scale_range" name="turret_scale_range">2 = double range, 0.5 = half</real>
<real key="turret_scale_refire" name="turret_scale_refire">2 = double refire (SLOWER!), 0.5 = half (FASTER!)</real>
<real key="turret_scale_ammo" name="turret_scale_ammo">2 = double ammo carry &amp; regen, 0.5 = half ammo carry &amp; regen</real>
<real key="turret_scale_aim" name="turret_scale_aim">2 = aim twice as fast, 0,5 = aim at half speed</real>
<real key="turret_scale_health" name="turret_scale_health">2 = double health, 0.5 = half</real>
<target key="target" name="target">Defend the position of this entity</target>
<integer key="team" name="team">5=red, 14=blue</integer>
-------- SPAWNFLAGS --------
<flag key="PILLAR" name="PILLAR" bit="1">Adds a supporting pillar under this turret, for turrets on terrain/uneven surfaces. (only for visuals)</flag>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model=&quot;../xonotic-data.pk3dir/models/turrets/radiant/hellion.md3&quot;
</point>


<point name="turret_hk" color="1 0 0" box="-32 -32 0 32 32 50" model="models/turrets/radiant/hk.md3">
Single powerful rocket with the ability to evade obstacles to find its target. Varied speed.
-------- KEYS --------
<real key="turret_scale_damage" name="turret_scale_damage">2 = double damage, 0.5 = half</real>
<real key="turret_scale_range" name="turret_scale_range">2 = double range, 0.5 = half</real>
<real key="turret_scale_refire" name="turret_scale_refire">2 = double refire (SLOWER!), 0.5 = half (FASTER!)</real>
<real key="turret_scale_ammo" name="turret_scale_ammo">2 = double ammo carry &amp; regen, 0.5 = half ammo carry &amp; regen</real>
<real key="turret_scale_aim" name="turret_scale_aim">2 = aim twice as fast, 0,5 = aim at half speed</real>
<real key="turret_scale_health" name="turret_scale_health">2 = double health, 0.5 = half</real>
<target key="target" name="target">Defend the position of this entity</target>
<integer key="team" name="team">5=red, 14=blue</integer>
-------- SPAWNFLAGS --------
<flag key="PILLAR" name="PILLAR" bit="1">Adds a supporting pillar under this turret, for turrets on terrain/uneven surfaces. (only for visuals)</flag>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model=&quot;../xonotic-data.pk3dir/models/turrets/radiant/hk.md3&quot;
</point>

<point name="turret_tesla" color="1 0 0" box="-32 -32 0 32 32 50" model="models/turrets/radiant/tesla.md3">
Fires a lightning bolt that will jump to up to 10 targets if they are close enough to each other. Missiles included.
-------- KEYS --------
<real key="turret_scale_damage" name="turret_scale_damage">2 = double damage, 0.5 = half</real>
<real key="turret_scale_range" name="turret_scale_range">2 = double range, 0.5 = half</real>
<real key="turret_scale_refire" name="turret_scale_refire">2 = double refire (SLOWER!), 0.5 = half (FASTER!)</real>
<real key="turret_scale_ammo" name="turret_scale_ammo">2 = double ammo carry &amp; regen, 0.5 = half ammo carry &amp; regen</real>
<real key="turret_scale_aim" name="turret_scale_aim">2 = aim twice as fast, 0,5 = aim at half speed</real>
<real key="turret_scale_health" name="turret_scale_health">2 = double health, 0.5 = half</real>
<target key="target" name="target">Defend the position of this entity</target>
<integer key="team" name="team">5=red, 14=blue</integer>
-------- SPAWNFLAGS --------
<flag key="PILLAR" name="PILLAR" bit="1">Adds a supporting pillar under this turret, for turrets on terrain/uneven surfaces. (only for visuals)</flag>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model=&quot;../xonotic-data.pk3dir/models/turrets/radiant/tesla.md3&quot;
</point>

<point name="turret_phaser" color="1 0 0" box="-32 -32 0 32 32 50" model="models/turrets/radiant/phaser.md3">
Constant beam weapon that will considerably slow its target down while dealing low but constant damage.
-------- KEYS --------
<real key="turret_scale_damage" name="turret_scale_damage">2 = double damage, 0.5 = half</real>
<real key="turret_scale_range" name="turret_scale_range">2 = double range, 0.5 = half</real>
<real key="turret_scale_refire" name="turret_scale_refire">2 = double refire (SLOWER!), 0.5 = half (FASTER!)</real>
<real key="turret_scale_ammo" name="turret_scale_ammo">2 = double ammo carry &amp; regen, 0.5 = half ammo carry &amp; regen</real>
<real key="turret_scale_aim" name="turret_scale_aim">2 = aim twice as fast, 0,5 = aim at half speed</real>
<real key="turret_scale_health" name="turret_scale_health">2 = double health, 0.5 = half</real>
<target key="target" name="target">Defend the position of this entity</target>
<integer key="team" name="team">5=red, 14=blue</integer>
-------- SPAWNFLAGS --------
<flag key="PILLAR" name="PILLAR" bit="1">Adds a supporting pillar under this turret, for turrets on terrain/uneven surfaces. (only for visuals)</flag>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model=&quot;../xonotic-data.pk3dir/models/turrets/radiant/phaser.md3&quot;
</point>


<point name="turret_fusionreactor" color="1 0 0" box="-32 -32 0 32 32 50" model="models/turrets/radiant/reactor.md3">
-------- KEYS --------
<real key="turret_scale_damage" name="turret_scale_damage">2 = double damage, 0.5 = half</real>
<real key="turret_scale_range" name="turret_scale_range">2 = double range, 0.5 = half</real>
<real key="turret_scale_refire" name="turret_scale_refire">2 = double refire (SLOWER!), 0.5 = half (FASTER!)</real>
<real key="turret_scale_ammo" name="turret_scale_ammo">2 = double ammo carry &amp; regen, 0.5 = half ammo carry &amp; regen</real>
<real key="turret_scale_aim" name="turret_scale_aim">2 = aim twice as fast, 0,5 = aim at half speed</real>
<real key="turret_scale_health" name="turret_scale_health">2 = double health, 0.5 = half</real>
<integer key="team" name="team">5=red, 14=blue</integer>
-------- SPAWNFLAGS --------
<flag key="PILLAR" name="PILLAR" bit="1">Adds a supporting pillar under this turret, for turrets on terrain/uneven surfaces. (only for visuals)</flag>
---------NOTES----------
Supplies neerby energy based turrets with more power so they can fire more often.
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model=&quot;../xonotic-data.pk3dir/models/turrets/radiant/reactor.md3&quot;
</point>

<group name="turret_targettrigger" color=".5 .5 .5">
Used to feed turrets capable of it with remote target info. currently only turret_hk supports this.
</group>


<point name="turret_walker" color="1 0 0" box="-32 -32 0 32 32 50" model="models/turrets/radiant/walker.md3">
-----------KEYS------------
<real key="turret_scale_damage" name="turret_scale_damage">2 = double damage, 0.5 = half</real>
<real key="turret_scale_range" name="turret_scale_range">2 = double range, 0.5 = half</real>
<real key="turret_scale_refire" name="turret_scale_refire">2 = doubble refire (SLOWER!), 0.5 = half (FASTER!)</real>
<real key="turret_scale_ammo" name="turret_scale_ammo">2 = doubble ammo carry &amp; regen, 0.5 = half ammo carry &amp; regen</real>
<real key="turret_scale_aim" name="turret_scale_aim">2 = aim twice as fast, 0,5 = aim at half speed</real>
<real key="turret_scale_health" name="turret_scale_health">2 = double health, 0.5 = half</real>
<integer key="team" name="team">5=red, 14=blue</integer>
-----------SPAWNFLAGS-----------
---------NOTES----------

A nasty mechanical critter that will engage longrange target with missiles, midrange with its minigun and meele things up close and personal.

-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model=&quot;../xonotic-data.pk3dir/models/turrets/radiant/walker.md3&quot;
</point>


<point name="turret_ewheel" color="1 0 0" box="-32 -32 0 32 32 50" model="models/turrets/radiant/ewheel.md3">
-----------KEYS------------
<real key="turret_scale_damage" name="turret_scale_damage">2 = double damage, 0.5 = half</real>
<real key="turret_scale_range" name="turret_scale_range">2 = double range, 0.5 = half</real>
<real key="turret_scale_refire" name="turret_scale_refire">2 = doubble refire (SLOWER!), 0.5 = half (FASTER!)</real>
<real key="turret_scale_ammo" name="turret_scale_ammo">2 = doubble ammo carry &amp; regen, 0.5 = half ammo carry &amp; regen</real>
<real key="turret_scale_aim" name="turret_scale_aim">2 = aim twice as fast, 0,5 = aim at half speed</real>
<real key="turret_scale_health" name="turret_scale_health">2 = double health, 0.5 = half</real>
<integer key="team" name="team">5=red, 14=blue</integer>
-----------SPAWNFLAGS-----------
---------NOTES----------

Small, agile and moveing turret.

-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model=&quot;../xonotic-data.pk3dir/models/turrets/radiant/ewheel.md3&quot;
</point>


<point name="turret_checkpoint" color="1 0 1" box="-32 -32 -32 32 32 32">
-----------KEYS------------
<target key="target" name="target">.targetname of next wapoint in chain.</target>
<real key="wait" name="wait">Pause at this point # seconds.</real>
-----------SPAWNFLAGS-----------

---------NOTES----------
If a loop is of targets are formed, any unit entering this loop will patrol it indefinitly.
If the checkpoint chain in not looped, the unit will go &quot;Roaming&quot; when the last point is reached.
</point>

<point name="vehicle_racer" color="0 0 1" box="-48 -48 0 48 48 32" model="models/vehicles-static/wakazachi.md3">
Fast moving hover type vehicle, with low shiled &amp; health.
Primary weapon is a rapid fire energy cannon, secondary lockable rockets.
-------- KEYS --------
<integer key="team" name="team">5=red, 14=blue</integer>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model=&quot;models/vehicles-static/wakazachi.md3&quot;
</point>

<point name="vehicle_spiderbot" color="0 0 1" box="-48 -48 0 48 48 32" model="models/vehicles-static/spiderbot.md3">
A slow moving 6 legged mech type vehile that has plenty of health and shiled.
Primary weapon is twin miniguns, secondary eight rockets that can be guided by the pilot.
-------- KEYS --------
<integer key="team" name="team">5=red, 14=blue</integer>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model=&quot;models/vehicles-static/spiderbot.md3&quot;
</point>

<point name="vehicle_raptor" color="0 0 1" box="-48 -48 0 48 48 32" model="models/vehicles-static/raptor.md3">
The raptor is primaerly a air to ground frighter, its quite lightly armoured or shilded.
Its main weapon is four rapid fire energy cannons, wich can be locked to track a target by aming at it for some time.
Secondary is a pair of vert powerfull clusterbombs.
-------- KEYS --------
<integer key="team" name="team">5=red, 14=blue</integer>
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model=&quot;models/vehicles-static/raptor.md3&quot;
</point>
</classes>