// Team Fortress game definition file (.fgd)
// Addapted for my ALL Fortress GameConfig for Trenchbroom 2.1.0+
// Last update: 20181218 - xaGe

//Include base quake4erictools.fgd
@include "quake4ericwtools.fgd"

// FORTRESS COMMON

// TEAM FORTRESS BASE CLASSES

@BaseClass = TFDetectflags [ ]
@baseclass base (TFDetectflags) color(255 128 0) = TfDClass
[
  netname(string) : "netname"
]
@baseclass color(255 128 0) = TfClass
[
  netname(string) : "netname"
]

// INFO_TFDETECT

@PointClass base(TfClass) = info_tfdetect : "TF Detection Entity"
[
	impulse(Flags) =
	[
		1   : "Class Skins" 		: 0
		2   : "Class Persistence" 	: 0
		4   : "Cheat Checking" 		: 0
		8   : "Fortress Map" 		: 0
		16  : "Respawn Delay" 		: 0
		32  : "Respawn Delay" 		: 0
		64  : "Auto Team" 		: 0
		128 : "Individual Frags" 	: 0
	]
	message(string) 		: "Localcmds to send to server on start"
	ammo_shells(integer) 		: "Max lives for player in Team 1."
	ammo_nails(integer) 		: "Max lives for player in Team 2."
	ammo_rockets(integer) 		: "Max lives for player in Team 3."
	ammo_cells(integer) 		: "Max lives for player in Team 4."
	ammo_medikit(integer) 		: "Max players allowed in Team 1."
	ammo_detpack(integer) 		: "Max players allowed in Team 2."
	maxammo_medikit(integer)	: "Max players allowed in Team 3."
	maxammo_detpack(integer)	: "Max players allowed in Team 4."
	maxammo_shells(integer) 	: "Bitfield. Restricted Classes Team 1"
        maxammo_nails(integer)  	: "Bitfield. Restricted Classes Team 2"
        maxammo_rockets(integer) 	: "Bitfield. Restricted Classes Team 3"
        maxammo_cells(integer) 		: "Bitfield. Restricted Classes Team 4"
	hook_out(choices) 		: "Grapple Hook Enabled?" : 0 =
	[
		0 : "Enabled"
		1 : "Disabled"
	]
	display_item_status1(string) 	: "On FlagInfo, display this GoalItem status"
	display_item_status2(string) 	: "On FlagInfo, display this GoalItem status"
	display_item_status3(string) 	: "On FlagInfo, display this GoalItem status"
	display_item_status4(string) 	: "On FlagInfo, display this GoalItem status"
	team_str_home(string) 		: "Disp to owner if is at its origin."
	team_str_moved(string) 		: "Disp to owner if is not at its origin."
	team_str_carried(string) 	: "Disp to owner if being carried."
	non_team_str_home(string) 	: "Disp to others if is at its origin."
	non_team_str_moved(string) 	: "Disp to others if is not at its origin."
	non_team_str_carried(string) 	: "Disp to others if is being carried."
	team_broadcast(string) 		: "String that replaces the Team Menu."
	non_team_broadcast(string) 	: "String that is the Map Help command."
	noise1(string) 			: "Class Menu for Team 1."
	noise2(string) 			: "Class Menu for Team 2."
	noise3(string) 			: "Class Menu for Team 3."
	noise4(string) 			: "Class Menu for Team 4."
]

// INFO_TFGOAL

@PointClass base(TfClass, Angle, Appearflags, Target, Targetname) size(16 16 16) model({"path": mdl, "skin": skin, "frame": frame}) = info_tfgoal : "TF Goal Entity"
[
netname(string) : "The name of the Goal."
goal_no(integer) : "Unique ID number of this goal."
group_no(integer) : "ID Number of the goal group this goal belongs to."
owned_by(integer) : "The Team that own this entity."
goal_state(integer) : "Bitfield. The initial state."
mdl(string) : "The mdl used by this Goal if any."
skin(integer) : "The number of the skin on mdl."
//frame(integer) : "The number of the mdl frame. Leave blank to use default frame."
goal_activation(integer) : "Bitfield. Activation criteria."
team_no(integer) : "AP must be of this team to activate."
items_allowed(integer) : "AP must have this goal item no"
has_item_from_group(integer) : "AP must have Item from group no"
playerclass(integer) : "Bitfield. Must be of this class(es)."
if_goal_is_active(integer) : "This Goal must be in ACTIVE state."
if_goal_is_inactive(integer) : "This Goal must be in INACTIVE state."
if_goal_is_removed(integer) : "This Goal must be in REMOVED state."
if_group_is_active(integer) : "All Goals in Group must be in ACTIVE."
if_group_is_inactive(integer) : "All Goals in Group must be in INACTIVE."
if_group_is_removed(integer) : "All Goals in Group must be in REMOVED."
if_item_has_moved(integer) : "This Item not moved or carried."
if_item_hasnt_moved(integer) : "This Item must be moved or carried."
else_goal(integer) : "If criteria fails, activate this goal no"
goal_min(string) : "Bounding box min for goal, def is -16 -16 -24"
goal_max(integer) : "Bounding box max for goal, def is 16 16 32"
// When this Goal is successfully activated up, the following variables may be executed
return_item_no(integer) : "Return this GoalItem if not carried"
broadcast(string) : "Message centerprinted to everyone else."
message(string) : "Message centerprinted to AP."
team_broadcast(string) : "Message centerprinted to teammates"
non_team_broadcast(string) : "Message centerprinted to other team"
owners_team_broadcast(string) : "Centerprinted to all owning teammates"
netname_broadcast(string) : "_____ activated this goal.\n"
netname_team_broadcast(string) : "_____ activated your teams goal.\n"
netname_non_team_broadcast(string) : "____ took an enemy flag!\n"
netname_owners_team_broadcast(string) : "____ took your flag!\n"
deathtype(string) : "___ was killed by this goal!\n"
target(string) : "Activate goal with this targetname"
killtarget(string) : "Remove goal with this targetname"
ex_skill_min(integer) : "Skill Minimum"
ex_skill_max(integer) : "Skill Maximum"
goal_effects(integer) : "Bitfield. See TFEntRef"
maxammo_shells(integer) : "All members of this team are affected."
maxammo_nails(integer) : "All members not of this team are affected."
t_length(integer) : "Everyone within this radius is affected."
lts(integer) : "Bitfield. See TFEntRef"
count(integer) : "Specified score given to the AP's team."
increase_team1(integer) : "Specified score given to team 1"
increase_team2(integer) : "Specified score given to team 2"
increase_team3(integer) : "Specified score given to team 3"
increase_team4(integer) : "Specified score given to team 4"
noise(string) : "WAV file played when this Goal is activated."
lives(integer) : "Added to APA's lives."
health(integer) : "Added to APA's health."
armortype(integer) : "Bitfield. The APAs armortype is set to."
armorvalue(integer) : "APA's armorvalue is set to (0-250)"
armorclass(choices) 		: "APA's armorclass is set to" : 0 =
	[
		1 : "Shell Resistant"
		2 : "Nail Resistant"
		4 : "Explosion Resistant"
		8 : "Electricity Resistant"
		16 : "Fire Resistant"
	]
frags(integer) : "Added to APA's frags."
ammo_shells(integer) : "Added this number of shells."
ammo_nails(integer) : "Added this number of nails."
ammo_rockets(integer) : "Added this number of rockets."
ammo_cells(integer) : "Added this number of cells."
ammo_detpack(integer) : "Added this number of det packs."
ammo_medikit(integer) : "Added this number of medikits."
no_grenades_1(integer) : "Added to number type 1 TF grenades."
no_grenades_2(integer) : "Added to number type 2 TF grenades."
invincible_finished(integer) : "Number of seconds of invincibility."
invisible_finished(integer) : "Number of seconds of invisibility."
super_damage_finished(integer) : "Number of seconds of quad."
radsuit_finished(integer) : "Number of seconds of radsuit."
items(integer) : "Goal gives this GoalItem to APA."
axhitme(integer) : "Goal removes this GoalItem from APA with it."
delay_time(integer) : "Delay before activation."
wait(integer) : "Goal stays ACTIVE for this long."
activate_goal_no(integer) : "Activate this Goal."
inactivate_goal_no(integer) : "Inactivate this Goal."
remove_goal_no(integer) : "Remove this Goal."
restore_goal_no(integer) : "Restore this Goal."
activate_group_no(integer) : "Activate all Goals in this GoalGroup."
inactivate_group_no(integer) : "Inactivate all Goals in this GoalGroup."
remove_group_no(integer) : "Remove all Goals in this GoalGroup."
restore_group_no(integer) : "Restore all Goals in this GoalGroup."
remove_item_group(integer) : "Removes a GoalGroup from APA"
all_active(integer) : "If whole group ACTIVE, activate last_impulse"
last_impulse(integer) : "Activate goal based on all_active"
remove_spawnpoint(integer) : "Remove spawnpoint with this goal_no."
restore_spawnpoint(integer) : "Restore spawnpoint with this goal_no."
remove_spawngroup(integer) : "Remove all spawnpoints  in group_no."
restore_spawngroup(integer) : "Restore all spawnpoints in group_no."
display_item_status1(string) : "Display this when activated"
display_item_status2(string) : "Display this when activated"
display_item_status3(string) : "Display this when activated"
display_item_status4(string) : "Display this when activated"
team_str_home(string) : "Your flag is in it's base"
team_str_moved(string) : "Your flag is lying around"
team_str_carried(string) : "Your flag is being carried by"
non_team_str_home(string) : "The enemy flag is in it's base"
non_team_str_moved(string) : "The enemy flag is lying around"
non_team_str_carried(string) : "The enemy flag is being carried by"
]

// INFO_TFGOAL_TIMER

@PointClass base(TfClass) = info_tfgoal_timer : "TF Timer Goal"
[
goal_effects(integer) : "Bitfield. See TFEntRef"
search_time(integer) : "Time between iterations."
netname(string) : "The name of the Goal."
goal_no(integer) : "Unique ID number of this goal."
group_no(integer) : "ID Number of the goal group this goal belongs to."
goal_state(integer) : "Bitfield. The initial state."
items_allowed(integer) : "AP must have this goal item no"
playerclass(integer) : "Bitfield. Must be of this class(es)."
if_goal_is_active(integer) : "This Goal must be in ACTIVE state."
if_goal_is_inactive(integer) : "This Goal must be in INACTIVE state."
if_goal_is_removed(integer) : "This Goal must be in REMOVED state."
if_group_is_active(integer) : "All Goals in Group must be in ACTIVE."
if_group_is_inactive(integer) : "All Goals in Group must be in INACTIVE."
if_group_is_removed(integer) : "All Goals in Group must be in REMOVED."
if_item_has_moved(integer) : "This Item not moved or carried."
if_item_hasnt_moved(integer) : "This Item must be moved or carried."
has_item_from_group(integer) : "AP must have Item from group no"
maxammo_shells(integer) : "All members of this team are checked for criteria."
maxammo_nails(integer) : "All member not on this team are checked for criteria."
t_length(integer) : "Everyone within this radius is affected."
// When this Goal is successfully activated up, the following variables may be executed
return_item_no(integer) : "Return this GoalItem if not carried"
deathtype(string) : "___ was killed by this goal!\n"
target(string) : "Activate goal with this targetname"
killtarget(string) : "Remove goal with this targetname"
ex_skill_min(integer) : "Skill Minimum"
ex_skill_max(integer) : "Skill Maximum"
goal_results(integer) : "Bitfield. See TFEntRef"
increase_team1(integer) : "Specified score given to team 1"
increase_team2(integer) : "Specified score given to team 2"
increase_team3(integer) : "Specified score given to team 3"
increase_team4(integer) : "Specified score given to team 4"
noise(string) : "WAV file played when this Goal is activated."
lives(integer) : "Added to APA's lives."
health(integer) : "Added to APA's health."
armortype(integer) : "Bitfield. The APAs armortype is set to."
armorvalue(integer) : "APA's armorvalue is set to (0-250)"
armorclass(choices) 		: "APA's armorclass is set to" : 0 =
	[
		1 : "Shell Resistant"
		2 : "Nail Resistant"
		4 : "Explosion Resistant"
		8 : "Electricity Resistant"
		16 : "Fire Resistant"
	]
frags(integer) : "Added to APA's frags."
ammo_shells(integer) : "Added this number of shells."
ammo_nails(integer) : "Added this number of nails."
ammo_rockets(integer) : "Added this number of rockets."
ammo_cells(integer) : "Added this number of cells."
ammo_detpack(integer) : "Added this number of det packs."
ammo_medikit(integer) : "Added this number of medikits."
no_grenades_1(integer) : "Added to number type 1 TF grenades."
no_grenades_2(integer) : "Added to number type 2 TF grenades."
invincible_finished(integer) : "Number of seconds of invincibility."
invisible_finished(integer) : "Number of seconds of invisibility."
super_damage_finished(integer) : "Number of seconds of quad."
radsuit_finished(integer) : "Number of seconds of radsuit."
items(integer) : "Goal gives this GoalItem to APA."
axhitme(integer) : "Goal removes this GoalItem from APA with it."
delay_time(integer) : "Delay before activation."
wait(integer) : "Goal stays ACTIVE for this long."
activate_group_no(integer) : "Activate all Goals in this GoalGroup."
inactivate_group_no(integer) : "Inactivate all Goals in this GoalGroup."
remove_group_no(integer) : "Remove all Goals in this GoalGroup."
restore_group_no(integer) : "Restore all Goals in this GoalGroup."
activate_goal_no(integer) : "Activate this Goal."
inactivate_goal_no(integer) : "Inactivate this Goal."
remove_goal_no(integer) : "Remove this Goal."
restore_goal_no(integer) : "Restore this Goal."
all_active(integer) : "If whole group ACTIVE, activate last_impulse"
last_impulse(integer) : "Activate goal based on all_active"
remove_spawnpoint(integer) : "Remove spawnpoint with this goal_no."
restore_spawnpoint(integer) : "Restore spawnpoint with this goal_no."
remove_spawngroup(integer) : "Remove all spawnpoints  in group_no."
restore_spawngroup(integer) : "Restore all spawnpoints in group_no."
display_item_status1(string) : "Display this when activated"
display_item_status2(string) : "Display this when activated"
display_item_status3(string) : "Display this when activated"
display_item_status4(string) : "Display this when activated"
team_str_home(string) : "Your flag is in it's base"
team_str_moved(string) : "Your flag is lying around"
team_str_carried(string) : "Your flag is being carried by"
non_team_str_home(string) : "The enemy flag is in it's base"
non_team_str_moved(string) : "The enemy flag is lying around"
non_team_str_carried(string) : "The enemy flag is being carried by"
]

// ITEM_TFGOAL

@PointClass base(TfClass, Angle, Appearflags, Target, Targetname) size(16 16 16) model({"path": mdl, "skin": skin, "frame": frame}) = item_tfgoal : "TF Goal Item"
[
netname(string) : "The name of the Goal."
goal_no(integer) : "Unique ID number of this goal."
group_no(integer) : "ID Number of the goal group this goal belongs to."
owned_by(integer) : "The Team that own this entity."
goal_state(integer) : "Bitfield. The initial state."
mdl(string) : "The mdl used by this Goal if any."
skin(integer) : "The number of the skin on mdl."
//frame(integer) : "The number of the mdl frame. Leave blank to use default frame."
goal_activation(integer) : "Bitfield. Activation criteria."
team_no(integer) : "AP must be of this team to activate."
items_allowed(integer) : "AP must have this goal item no"
has_item_from_group(integer) : "AP must have Item from group no"
playerclass(integer) : "Bitfield. Must be of this class(es)."
if_goal_is_active(integer) : "This Goal must be in ACTIVE state."
if_goal_is_inactive(integer) : "This Goal must be in INACTIVE state."
if_goal_is_removed(integer) : "This Goal must be in REMOVED state."
if_group_is_active(integer) : "All Goals in Group must be in ACTIVE."
if_group_is_inactive(integer) : "All Goals in Group must be in INACTIVE."
if_group_is_removed(integer) : "All Goals in Group must be in REMOVED."
if_item_has_moved(integer) : "This Item not moved or carried."
if_item_hasnt_moved(integer) : "This Item must be moved or carried."
else_goal(integer) : "If criteria fails, activate this goal no"
goal_min(string) : "Bounding box min for goal, def is -16 -16 -24"
goal_max(integer) : "Bounding box max for goal, def is 16 16 32"
// When this Goal is successfully activated up, the following variables may be executed
return_item_no(integer) : "Return this GoalItem if not carried"
broadcast(string) : "Message centerprinted to everyone else."
message(string) : "Message centerprinted to AP."
team_broadcast(string) : "Message centerprinted to teammates"
non_team_broadcast(string) : "Message centerprinted to other team"
owners_team_broadcast(string) : "Centerprinted to all owning teammates"
netname_broadcast(string) : "_____ activated this goal.\n"
netname_team_broadcast(string) : "_____ activated your teams goal.\n"
netname_non_team_broadcast(string) : "____ took an enemy flag!\n"
netname_owners_team_broadcast(string) : "____ took your flag!\n"
deathtype(string) : "___ was killed by this goal!\n"
target(string) : "Activate goal with this targetname"
killtarget(string) : "Remove goal with this targetname"
ex_skill_min(integer) : "Skill Minimum"
ex_skill_max(integer) : "Skill Maximum"
goal_effects(integer) : "Bitfield. See TFEntRef"
maxammo_shells(integer) : "All members of this team are affected."
maxammo_nails(integer) : "All members not of this team are affected."
t_length(integer) : "Everyone within this radius is affected."
goal_results(integer) : "Bitfield. See TFEntRef"
count(integer) : "Specified score given to the AP's team."
increase_team1(integer) : "Specified score given to team 1"
increase_team2(integer) : "Specified score given to team 2"
increase_team3(integer) : "Specified score given to team 3"
increase_team4(integer) : "Specified score given to team 4"
noise(string) : "WAV file played when this Goal is activated."
lives(integer) : "Added to APA's lives."
health(integer) : "Added to APA's health."
armortype(integer) : "Bitfield. The APAs armortype is set to."
armorvalue(integer) : "APA's armorvalue is set to (0-250)"
armorclass(choices) 		: "APA's armorclass is set to" : 0 =
	[
		1 : "Shell Resistant"
		2 : "Nail Resistant"
		4 : "Explosion Resistant"
		8 : "Electricity Resistant"
		16 : "Fire Resistant"
	]
frags(integer) : "Added to APA's frags."
ammo_shells(integer) : "Added this number of shells."
ammo_nails(integer) : "Added this number of nails."
ammo_rockets(integer) : "Added this number of rockets."
ammo_cells(integer) : "Added this number of cells."
ammo_detpack(integer) : "Added this number of det packs."
ammo_medikit(integer) : "Added this number of medikits."
no_grenades_1(integer) : "Added to number type 1 TF grenades."
no_grenades_2(integer) : "Added to number type 2 TF grenades."
invincible_finished(integer) : "Number of seconds of invincibility."
invisible_finished(integer) : "Number of seconds of invisibility."
super_damage_finished(integer) : "Number of seconds of quad."
radsuit_finished(integer) : "Number of seconds of radsuit."
items(integer) : "Goal gives this GoalItem to APA."
axhitme(integer) : "Goal removes this GoalItem from APA with it."
delay_time(integer) : "Delay before activation."
wait(integer) : "Goal stays ACTIVE for this long."
activate_goal_no(integer) : "Activate this Goal."
inactivate_goal_no(integer) : "Inactivate this Goal."
remove_goal_no(integer) : "Remove this Goal."
restore_goal_no(integer) : "Restore this Goal."
activate_group_no(integer) : "Activate all Goals in this GoalGroup."
inactivate_group_no(integer) : "Inactivate all Goals in this GoalGroup."
remove_group_no(integer) : "Remove all Goals in this GoalGroup."
restore_group_no(integer) : "Restore all Goals in this GoalGroup."
remove_item_group(integer) : "Removes a GoalGroup from APA"
all_active(integer) : "If whole group ACTIVE, activate last_impulse"
last_impulse(integer) : "Activate goal based on all_active"
remove_spawnpoint(integer) : "Remove spawnpoint with this goal_no."
restore_spawnpoint(integer) : "Restore spawnpoint with this goal_no."
remove_spawngroup(integer) : "Remove all spawnpoints  in group_no."
restore_spawngroup(integer) : "Restore all spawnpoints in group_no."
display_item_status1(string) : "Display this when activated"
display_item_status2(string) : "Display this when activated"
display_item_status3(string) : "Display this when activated"
display_item_status4(string) : "Display this when activated"
team_str_home(string) : "Your flag is in it's base"
team_str_moved(string) : "Your flag is lying around"
team_str_carried(string) : "Your flag is being carried by"
non_team_str_home(string) : "The enemy flag is in it's base"
non_team_str_moved(string) : "The enemy flag is lying around"
non_team_str_carried(string) : "The enemy flag is being carried by"
]

// INFO_PLAYER_TEAMSPAWN

@PointClass base(PlayerClass) = info_player_teamspawn : "TF Player Start"
[
netname(string) : "netname"
goal_no(integer) : "Goal Number"
group_no(integer) : "Group Number"
team_no(integer) : "Team to Spawn Here"
items(integer) : "Goal given to first to spawn here."
axhitme(integer) : "Removes this GoalItem from APA."
message(string) : "Disp to the first to spawn here."
goal_activation(integer) : "Bitfields. See TFEntRef."
goal_effects(choices) 		: "Remove spawnpoint after first use." : 0 =
	[
		0 : "Enabled"
		1 : "Disabled"
	]
activate_goal_no(integer) : "Activate this Goal."
items_allowed(integer) : "AP needs this GoalItem."
has_item_from_group(integer) : "AP must have Item from group_no"
playerclass(integer) : "Bitfield. Must be of this class(es)"
if_goal_is_active(integer) : "This Goal must be in ACTIVE state."
if_goal_is_inactive(integer) : "This Goal must be in INACTIVE state."
if_goal_is_removed(integer) : "This Goal must be in REMOVED state."
if_group_is_active(integer) : "All Goals in Group must be in ACTIVE."
if_group_is_inactive(integer) : "All Goals in Group must be in INACTIVE."
if_group_is_removed(integer) : "All Goals in Group must be in REMOVED."
if_item_has_moved(integer) : "This Item not moved or carried."
if_item_hasnt_moved(integer) : "This Item must be moved or carried."
target(string) : "Activate any target with this name"
killtarget(string) : "Remove any target with this name"
goal_state(integer) : "Bitfield. The initial state."
ex_skill_min(integer) : "Skill Minimum"
ex_skill_max(integer) : "Skill Maximum"
count(integer) : "Specified score given to the AP's team."
increase_team1(integer) : "Specified score given to team 1"
increase_team2(integer) : "Specified score given to team 2"
increase_team3(integer) : "Specified score given to team 3"
increase_team4(integer) : "Specified score given to team 4"
noise(string) : "WAV file played when this Goal is activated."
lives(integer) : "Added to APA's lives."
health(integer) : "Added to APA's health."
armortype(integer) : "Bitfield. The APAs armortype is set to."
armorvalue(integer) : "APA's armorvalue is set to (0-250)"
armorclass(choices) 		: "APA's armorclass is set to" : 0 =
	[
		1 : "Shell Resistant"
		2 : "Nail Resistant"
		4 : "Explosion Resistant"
		8 : "Electricity Resistant"
		16 : "Fire Resistant"
	]
frags(integer) : "Added to APA's frags."
ammo_shells(integer) : "Added this number of shells."
ammo_nails(integer) : "Added this number of nails."
ammo_rockets(integer) : "Added this number of rockets."
ammo_cells(integer) : "Added this number of cells."
ammo_detpack(integer) : "Added this number of det packs."
ammo_medikit(integer) : "Added this number of medikits."
no_grenades_1(integer) : "Added to number type 1 TF grenades."
no_grenades_2(integer) : "Added to number type 2 TF grenades."
invincible_finished(integer) : "Number of seconds of invincibility."
invisible_finished(integer) : "Number of seconds of invisibility."
super_damage_finished(integer) : "Number of seconds of quad."
radsuit_finished(integer) : "Number of seconds of radsuit."
activate_goal_no(integer) : "Activate this Goal."
inactivate_goal_no(integer) : "Inactivate this Goal."
remove_goal_no(integer) : "Remove this Goal."
restore_goal_no(integer) : "Restore this Goal."
activate_group_no(integer) : "Activate all Goals in this GoalGroup."
inactivate_group_no(integer) : "Inactivate all Goals in this GoalGroup."
remove_group_no(integer) : "Remove all Goals in this GoalGroup."
restore_group_no(integer) : "Restore all Goals in this GoalGroup."
remove_item_group(integer) : "Removes a Items APA has from GoalGroup"
all_active(integer) : "If all Group ACTIVE, activate last_impulse goal."
last_impulse(integer) : "If all Group are ACTIVE, activate this Goal."
remove_spawnpoint(integer) : "Remove the spawnpoint with this goal_no."
restore_spawnpoint(integer) : "Restore the spawnpoint with this goal_no."
remove_spawngroup(integer) : "Remove all spawnpoints with this group_no."
restore_spawngroup(integer) : "Restore all spawnpoints with this group_no."
]





@PointClass = info_test : "mock test entity" [
goal_results(flags) =
[
	// Determines what results are applied to APA.
	1    : "Goal is removed after activation." : 0
	2    : "Goals activated by this one apply their results to the AP." : 0
	4    : "Display scores and end the level." : 0
	8    : "Activated goals will not apply their results to the APA" : 0
	16   : "Disable/Stop the spy's undercover mask." : 0
	32   : "This forces APA to simply respawn. The player doesn't die... just respawns." : 0
	4096 : "If this bit is set, any player carrying this item can drop it using the 'dropitems' command." : 0
]
]
